{
  "id": 26312516,
  "title": "Speed Is the Killer Feature",
  "points": 528,
  "user": "bdickason",
  "time": 1614667248,
  "time_ago": "a day ago",
  "type": "link",
  "url": "https://bdickason.com/posts/speed-is-the-killer-feature/",
  "domain": "bdickason.com",
  "comments": [
    {
      "id": 26315957,
      "level": 0,
      "user": "atleta",
      "time": 1614697167,
      "time_ago": "18 hours ago",
      "content": "<p>He&#x27;s kind of totally wrong about the phones and thus the speed being THE killer feature. First of all, Symbian phones, which <i>were</i> the market leader smartphones when the iphone was released were pretty fast. So were feature phones (i.e. dumb phones).<p>What iphone was a LOT better at than everyone else was UX. Of which speed is one component, of course. It&#x27;s funny how much people never get it although it happened in front of us, it happened to us. At the time I was working at Nokia Research and I remember my girlfriend telling me how his boss got this wonderful phone that you can take photos with and you can view them, etc. The funny thing is that I had such a phone since 2001. I have been working with smartphones for 6 years then, she knew it, she listened to me when I told her or others what I was doing (and then listen to others responding &quot;yeah, but phones are for making phone calls&quot;). She saw me browsing the net on my phones (a 9210 communicator and then a 9500), send emails from the beach, etc.<p>Still it somehow didn&#x27;t register. Because it looked like something that she&#x27;d never use. And then the iphone that did a lot <i>less</i> made her and basically everyone understand what a smartphone is. (Even though by then symbian smartphones were pretty common, most people didn&#x27;t use them as smartphones.)<p>So no, it&#x27;s not simply the speed. It&#x27;s the UX. And even if we talk about speed, it&#x27;s still not the speed, but it&#x27;s the perception of the speed, which a lot has been written about: delay (lagging) matters a lot even if speed on average is OK.",
      "comments": [
        {
          "id": 26319018,
          "level": 1,
          "user": "N1H1L",
          "time": 1614711804,
          "time_ago": "14 hours ago",
          "content": "<p>I think both you and Brad are right in some way.<p>The KILLER feature is the <i>total</i> time to do something that the user intends to do.<p>If you have a very fast OS, but bad UX then the rate-limiting step is the UX, not the OS. And the converse is also true.",
          "comments": [
            {
              "id": 26319265,
              "level": 2,
              "user": "Spivak",
              "time": 1614713049,
              "time_ago": "14 hours ago",
              "content": "<p>Your apps UX is the language your users must learn and speak to convey their intent to software.<p>Having an expressive vocabulary and complex grammar is great for saying a lot quickly if they’re fluent but painfully slow for anyone who isn’t.",
              "comments": [
                {
                  "id": 26320639,
                  "level": 3,
                  "user": "jandrese",
                  "time": 1614718799,
                  "time_ago": "12 hours ago",
                  "content": "<p>IMHO it was more a problem of common functions being buried 5 menus deep in a sluggish UI.",
                  "comments": []
                }
              ]
            }
          ]
        },
        {
          "id": 26321511,
          "level": 1,
          "user": "adrianmonk",
          "time": 1614722207,
          "time_ago": "11 hours ago",
          "content": "<p>As long as we&#x27;re offering opinions on the iPhone&#x27;s killer feature, mine is that it was access to desktop web sites.<p>Remember WAP[1] and WML[2], the HTTP and HTML substitutes for mobile phones too anemic&#x2F;limited to support the real thing? Back then, many web sites simply didn&#x27;t support access from a mobile device. (It&#x27;s the polar opposite of &quot;mobile first&quot; or &quot;mobile only&quot;.) A few did, but many just tossed up an error page.<p>With the iPhone, Apple put together all the key ingredients to be able to say, if you&#x27;re on the go and suddenly need to access your bank&#x27;s web site to check your balance or whatever, you will be able to, even if your bank doesn&#x27;t support mobile devices. The experience may not be great, but it will at least be possible.<p>Those key ingredients included a big screen, a fast enough processor and large enough RAM to handle pages that were somewhat bloated, a browser that supported enough (JS, etc.) to make most pages work, and special features for making the most of desktop-oriented pages by zooming in on text. To some extent, Apple brought these key ingredients together by designing it that way, but they also did it by not entering the market until powerful enough hardware was available.<p>The iPhone flipped mobile web access on its head. Instead of implementing whatever was convenient and punting on 50+% of the web, leaving users at the mercy of web sites to decide if mobile access was worth it to them, Apple created a device and browser that took responsibility for doing anything and everything it could to make sites work.<p>The web is a killer feature for the internet, and getting meaningful access to the web was a killer feature for internet-connected mobile devices. Paradoxically, it worked so well that the platform was enormously successful and it became essential to offer mobile web support.<p>---<p>[1] <a href=\"https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Wireless_Application_Protocol\" rel=\"nofollow\">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Wireless_Application_Protocol</a>\n[2] <a href=\"https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Wireless_Markup_Language\" rel=\"nofollow\">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Wireless_Markup_Language</a>",
          "comments": [
            {
              "id": 26324697,
              "level": 2,
              "user": "junon",
              "time": 1614745074,
              "time_ago": "5 hours ago",
              "content": "<p>Agreed. When I didn&#x27;t need to boot up BREW or whatever it was called to access google at what felt like 1Bps anymore, it was a game changer. This alone was a huge improvement - I had real access to the web all of a sudden, from anywhere.",
              "comments": []
            },
            {
              "id": 26323066,
              "level": 2,
              "user": "justinboogaard",
              "time": 1614730264,
              "time_ago": "9 hours ago",
              "content": "<p>This is a great insight, I’m reading this from my iPhone now!",
              "comments": []
            }
          ]
        },
        {
          "id": 26317530,
          "level": 1,
          "user": "Pyramus",
          "time": 1614704908,
          "time_ago": "16 hours ago",
          "content": "<p>Came here to say exactly the same. I would add the capacitative touch screen as another crucial factor that made the iPhone UX so popular.",
          "comments": [
            {
              "id": 26318791,
              "level": 2,
              "user": "hinkley",
              "time": 1614710658,
              "time_ago": "14 hours ago",
              "content": "<p>The capacitive touch and the accelerometer allowed them to make a web browser that could display &#x27;normal&#x27; web pages. Up until then everyone had been dicking around with mobile web sites and the lack of ubiquity and cost of doing so... as well as the often hamfisted attempts to assume <i>why</i> you were on the website from mobile... all of these hamstrung mobile browsing adoption.<p>With this in place commerce could begin on the phone. Once everyone added mobile pay options it could end there as well. An now everyone has one, if they can.",
              "comments": []
            },
            {
              "id": 26320460,
              "level": 2,
              "user": "apozem",
              "time": 1614718166,
              "time_ago": "12 hours ago",
              "content": "<p>My mom had a touch-capable phone with a resistive touchscreen and <i>hated</i> it. Her fingernails were not huge or anything but they were long enough she had to press with the pad of her finger, not the tip, and it crippled her accuracy.",
              "comments": []
            }
          ]
        },
        {
          "id": 26325782,
          "level": 1,
          "user": "johnwalkr",
          "time": 1614757690,
          "time_ago": "an hour ago",
          "content": "<p>It was actually kind of slow at the time, especially it’s network connection. I agree the UX was a game changer. Big screen and responsive touchscreen made it a joy to use. For me, google maps in my pocket was the killer feature, and it worked well even without GPS.",
          "comments": []
        },
        {
          "id": 26319915,
          "level": 1,
          "user": "bdickason",
          "time": 1614715771,
          "time_ago": "13 hours ago",
          "content": "<p>I think you&#x27;re right. Speed is a component of the User Experience. My point in writing this is that when you abstract to a higher level, the beauty of the UX was that you can instantly do whatever you want. Your thought -&gt; your touch -&gt; action.<p>However, I think you make a great point that the two are interrelated.<p>My straw man starting point would be:\nA poor user experience that is lightning fast can still be a great experience.<p>But a great user experience that lags or is slow will typically not be successful.<p>The iphone succeeded because it coupled a great user experience that was so fast that it felt like interacting with objects in the real world.",
          "comments": [
            {
              "id": 26325266,
              "level": 2,
              "user": "ulisesrmzroche",
              "time": 1614751045,
              "time_ago": "3 hours ago",
              "content": "<p>AOL was very successful, even though it was slow and laggy, and calling the UX “meh” is being generous.<p>The iPhone won because it looked amazing and had the App Store. Looks and features. How did you reach the conclusion that it was speed?",
              "comments": []
            }
          ]
        },
        {
          "id": 26319709,
          "level": 1,
          "user": "baxtr",
          "time": 1614714812,
          "time_ago": "13 hours ago",
          "content": "<p>I think you’re talking on a different level of granularity. What was really different? “The UX” sounds generic. Whereas Speed is very specific. Speed is part of the UX.<p>It would help me at least if you could specify&#x2F; list what you think were the things in UX that made it so much better than Symbian phones.",
          "comments": [
            {
              "id": 26320535,
              "level": 2,
              "user": "atleta",
              "time": 1614718433,
              "time_ago": "12 hours ago",
              "content": "<p>Maybe. But the author says speed IS the killer feature (for products) so it has to be true at the higher level too. UX is the perception of the user of the product and their, well, experience <i>using</i> the product. If it&#x27;s generic it&#x27;s because it really is that generic, because users won&#x27;t know why exactly they like a product.<p>But in the case of iOS vs Symbian:<p>- as others said: capacitive touch screen (this is not an OS issue, but iphone was among the firsts to use it, definitely earlier than Nokia). This is huge. Like the thing that everyone was talking about (around me) when the original iphone came out is how you could <i>swipe</i> to see the pictures. And it wasn&#x27;t just for paging, it defined how you could interact with the phone (think pinch zooming, and rotation - not sure when these were added).<p>- the touch screen UI itself. Nokia played around with the touch UI before, but never really liked it. It was expressed several times internally, that touch is just a no go. But no wonder: the resistive touch screen is pretty bad, but also Symbian itself was built on the assumption that all you have is keys while iOS was built with touch UI in mind from the very beginning. (Now, of course touch was added to Symbian, but that&#x27;s just not the same. Or they didn&#x27;t put in the effort. Nokia even had an experimental touch phone released to the market in 2003, the 7700[1], but it was mostly ridiculous.)<p>- the UI just was a lot more polished, looked better, classier, the graphics was better. They had OpenGL and probably a graphics accelerator - nothing like that in Symbian, of course. (It even took the android guys by surprise, I remember reading&#x2F;hearing in an interview that when they saw a demo or the release, they&#x27;ve realized that they had to redo the UI from scratch. Because before that they had this Blackberry-ish&#x2F;Symbianish idea, they thought they were competing with that.)<p>- I&#x27;m pretty sure it had a better browser.<p>And this pretty much defines the experience, the feel a user gets from the phone. It couldn&#x27;t send or receive MMS-es (some people may have used it then, but most I guess just wanted to have the feature), it couldn&#x27;t receive &#x27;push&#x27; email. I.e. you had to manually refresh your inbox, emails didn&#x27;t just arrive. It didn&#x27;t even have apps. Symbian had all these. It has had these for years then. It even had an app store like thing (at least you had to send in your app for verification which would then be signed by Nokia or it couldn&#x27;t be installed - that was a new thing around 2004-2006, something I think nobody really did before).<p>[1] <a href=\"https:&#x2F;&#x2F;www.gsmarena.com&#x2F;nokia_7700-570.php\" rel=\"nofollow\">https:&#x2F;&#x2F;www.gsmarena.com&#x2F;nokia_7700-570.php</a>",
              "comments": [
                {
                  "id": 26320836,
                  "level": 3,
                  "user": "bdickason",
                  "time": 1614719576,
                  "time_ago": "12 hours ago",
                  "content": "<p>My follow up question would be: Would a capacitive touch screen with 0.5s latency have made this the killer feature? Or did the capacitive touch screen enable high speed input?<p>I&#x27;d argue the latter, but it could be a question of framing?",
                  "comments": [
                    {
                      "id": 26321428,
                      "level": 4,
                      "user": "atleta",
                      "time": 1614721959,
                      "time_ago": "11 hours ago",
                      "content": "<p>I don&#x27;t know. Again: I think the killer feature was the whole UX. Slow response times is definitely disturbing. (All my android phones got into this state sometimes.) You just don&#x27;t get that feeling, but it couldn&#x27;t possible happen to iphone because the the UX was the center of the whole product. I&#x27;m not an apple fan (never had an iphone, and the early ones kept pissing me off when friends asked for help) but it&#x27;s obvious that they are obsessed about UX and polishing the UI.<p>But you are right that the capacitive display itself makes the interaction faster because it&#x27;s enough to touch while the resistive has to be pressed. So it&#x27;s probably slower and feels like you have to put in more effort.",
                      "comments": []
                    }
                  ]
                },
                {
                  "id": 26320824,
                  "level": 3,
                  "user": "baxtr",
                  "time": 1614719538,
                  "time_ago": "12 hours ago",
                  "content": "<p>Thanks for the details. I remember the capacitive screens. They were <i>awful</i>! :)",
                  "comments": [
                    {
                      "id": 26321325,
                      "level": 4,
                      "user": "atleta",
                      "time": 1614721558,
                      "time_ago": "11 hours ago",
                      "content": "<p>Well, capacitive is what we have today. The old ones, that you actually had to push (and not just touch) were resistive :)",
                      "comments": [
                        {
                          "id": 26322434,
                          "level": 5,
                          "user": "baxtr",
                          "time": 1614726409,
                          "time_ago": "10 hours ago",
                          "content": "<p>I meant those!",
                          "comments": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "id": 26318603,
          "level": 1,
          "user": "mywittyname",
          "time": 1614709783,
          "time_ago": "14 hours ago",
          "content": "<p>We see this time and time again where technology needs to be introduced multiple times before it gets adopted.  The killer app is always use case.<p>It helps that the iPhone was a iPod with a phone attached, instead of a phone with a multi-use compute device attached.<p>OG iPods were single purpose music players, and features that made sense were slowly introduced over time (and were optional).  Adding support for photo viewing made sense because album art is universal and well, album art is no different than a photo.  Adding video made sense because you have this nice color screen for showing the photos&#x2F;album art, and music videos are a thing people enjoy.  Then adding a camera make sense, because you can already view photos&#x2F;videos.  Once you have all that in one package, adding phone capabilities makes a lot of sense when you realize that people are carrying around iPods along with a cellphone.",
          "comments": []
        },
        {
          "id": 26323705,
          "level": 1,
          "user": "sizzle",
          "time": 1614736080,
          "time_ago": "7 hours ago",
          "content": "<p>I had a Sony Clié PDA which ran .swf flash games and the home screen had a grid of icons much like the iPhone 1 home screen. It was a gorgeous full screen display with touch and stylus. This predated iPhone by a few years.<p>Any else have a PDA and see the glaring opportunity to add cellular functionality to them?",
          "comments": []
        }
      ]
    },
    {
      "id": 26314067,
      "level": 0,
      "user": "pontifier",
      "time": 1614683761,
      "time_ago": "a day ago",
      "content": "<p>I vividly remember using a kiosk to order a sandwich at a gas station 3 years ago... Not because the sandwich was great, not because it had a great logo, or a great name...<p>The INSTANT I hit the button to complete the order, the built in printer almost spat the ticket at me. I ordered a second sandwich just so I could get a video of that happening again.<p>Edit: Just found and uploaded the video :)\n<a href=\"https:&#x2F;&#x2F;youtu.be&#x2F;TX_-dXIpPvA\" rel=\"nofollow\">https:&#x2F;&#x2F;youtu.be&#x2F;TX_-dXIpPvA</a><p>Edit2: looks like it was a soda, not a second sandwich.",
      "comments": [
        {
          "id": 26314689,
          "level": 1,
          "user": "culopatin",
          "time": 1614689001,
          "time_ago": "20 hours ago",
          "content": "<p>I wish I had that at work.\nWe have self serve kiosks in the cafeteria and my muscle memory has made me faster than the display. I pretty much operate it in a constant loading-icon state now. The part I actually wait for is the 2 seconds for the printer.",
          "comments": []
        },
        {
          "id": 26314306,
          "level": 1,
          "user": "grishka",
          "time": 1614686000,
          "time_ago": "21 hours ago",
          "content": "<p>And then over here we have a fast food chain whose kiosks are just laughably slow. Scrolling stutters, animations are laggy, and taps take what feels like a second to register. Burgers are okay tho.",
          "comments": []
        },
        {
          "id": 26319972,
          "level": 1,
          "user": "bdickason",
          "time": 1614716006,
          "time_ago": "13 hours ago",
          "content": "<p>This is amazing!! In a world full of &#x27;please wait for your receipt&#x27; and dot matrix noises... this feels totally magical.<p>Thanks for sharing this, it&#x27;s crazy how much super fast experiences still surprise us.",
          "comments": [
            {
              "id": 26320166,
              "level": 2,
              "user": "billti",
              "time": 1614716867,
              "time_ago": "12 hours ago",
              "content": "<p>Interestingly... too fast can be a problem too. A prime example is this site, Hacker News, on a really fast browser. I&#x27;ll often sit there waiting for a navigation to load, until I realize it had already loaded (to a similar looking page), just so fast I didn&#x27;t notice the transition.",
              "comments": [
                {
                  "id": 26322767,
                  "level": 3,
                  "user": "kaba0",
                  "time": 1614728363,
                  "time_ago": "9 hours ago",
                  "content": "<p>That’s why animations are important contrary to what many say here in the comments (and I agree that putting them here and there just for the sake of it is bad). \nThey give “life” to a virtual object. \nFor example I really like tiling window managers, but they could use a really fast animation for window switches because the changing number at the top of the screen doesn’t say as much as movement to my primate brain.",
                  "comments": []
                }
              ]
            }
          ]
        },
        {
          "id": 26316656,
          "level": 1,
          "user": "dljsjr",
          "time": 1614700791,
          "time_ago": "17 hours ago",
          "content": "<p>When I saw NJ in the video description I knew it was a Wawa before I even hit play. Those kiosks are their bread and butter (no pun intended).",
          "comments": []
        },
        {
          "id": 26314641,
          "level": 1,
          "user": "domano",
          "time": 1614688568,
          "time_ago": "20 hours ago",
          "content": "<p>Wow, even the printer is fast in itself.",
          "comments": [
            {
              "id": 26319100,
              "level": 2,
              "user": "throwaway81523",
              "time": 1614712218,
              "time_ago": "14 hours ago",
              "content": "<p>That&#x27;s a very normal Seiko (or similar) receipt printer.  I spent a lot of time programming them.  Humorously, the programming manual is marked &quot;confidential&quot; (I guess to make it hard for anyone to make compatible printers), but there are copies of it all over the web, and there are plenty of compatible printers ;).<p>The POS app that I worked on (not related to the one shown in the video) also went to pretty serious lengths to get rid of the pause between the user pressing &quot;enter&quot; and the receipt coming out.  The store operators rightfully insisted on this, because they wanted to keep the checkout lines moving as fast as possible.<p>I liked those printers and remember wanting one for myself even though I had no use for it.  They start at around $200 and take up space, so I managed to resist.",
              "comments": []
            }
          ]
        },
        {
          "id": 26316976,
          "level": 1,
          "user": "castlecrasher2",
          "time": 1614702276,
          "time_ago": "17 hours ago",
          "content": "<p>That&#x27;s amazing, thanks for sharing.",
          "comments": []
        },
        {
          "id": 26315212,
          "level": 1,
          "user": "layoutIfNeeded",
          "time": 1614692684,
          "time_ago": "19 hours ago",
          "content": "<p>Holy shit! That&#x27;s like the Rolls-Royce of kiosks. I wish car infotainment systems had this level of responsiveness...",
          "comments": []
        },
        {
          "id": 26314858,
          "level": 1,
          "user": "rmorey",
          "time": 1614690209,
          "time_ago": "20 hours ago",
          "content": "<p>as a frequent patron, I read your comment and KNEW it had to be Wawa!",
          "comments": []
        },
        {
          "id": 26315621,
          "level": 1,
          "user": "mritchie712",
          "time": 1614695224,
          "time_ago": "18 hours ago",
          "content": "<p>this is to be expected, wawa exudes excellence in all it does.",
          "comments": []
        },
        {
          "id": 26315616,
          "level": 1,
          "user": "jcims",
          "time": 1614695203,
          "time_ago": "18 hours ago",
          "content": "<p>Probably because there is a financial incentive for speed. :)",
          "comments": [
            {
              "id": 26319300,
              "level": 2,
              "user": "therealdrag0",
              "time": 1614713164,
              "time_ago": "14 hours ago",
              "content": "<p>And yet so many are slow as mud",
              "comments": []
            }
          ]
        },
        {
          "id": 26317057,
          "level": 1,
          "user": "2almalki",
          "time": 1614702724,
          "time_ago": "16 hours ago",
          "content": "<p>I would also say the Costco self-serve food kiosk order system are fast as well",
          "comments": [
            {
              "id": 26319771,
              "level": 2,
              "user": "lotsofpulp",
              "time": 1614715116,
              "time_ago": "13 hours ago",
              "content": "<p>I don&#x27;t know how Costco does it, but if you use tap to pay or insert your card into the chip reader while the cashier is scanning your items, at the end when the cashier presses the button to indicate they are finished scanning, it instantly says &quot;approved&quot; and prints a receipt.<p>Costco is the only place where I&#x27;ve seen this.  I don&#x27;t understand how it gets an authorization for any amount that fast, since it can&#x27;t know the total while the cashier is still scanning items, and it&#x27;s Costco, so it could be anywhere from $50 to $5,000 so surely it&#x27;s getting the authorization after the transaction finishes?   The flow is almost perfect.  I have them scan my Costco membership, I use tap to pay on the card reader, then I or 2nd cashier move to organizing the items into the cart, and then the cashier hands me a receipt with basically zero wasted time.",
              "comments": [
                {
                  "id": 26322060,
                  "level": 3,
                  "user": "jedberg",
                  "time": 1614724577,
                  "time_ago": "10 hours ago",
                  "content": "<p>Costco has an advantage over everyone else -- they already know who you are before your purchase is complete.  By scanning your membership card, they already have your average purchase profile.<p>They actually ask the credit card processor to approve you for $avg + X%, so as long as your purchase comes in lower than that, you&#x27;ve already been approved.  If you make a really big purchase it will take a little longer, because they go back for a second auth for the bigger amount.<p>It&#x27;s also why you&#x27;ll see some people making $700+ purchases without having to sign anything -- because Costco already knows they do that every week and pay the bill on time so they assume part of the risk.",
                  "comments": [
                    {
                      "id": 26322979,
                      "level": 4,
                      "user": "lotsofpulp",
                      "time": 1614729639,
                      "time_ago": "9 hours ago",
                      "content": "<p>Interesting, I didn’t think Citibank and Costco would have made that kind of arrangement.",
                      "comments": [
                        {
                          "id": 26323135,
                          "level": 5,
                          "user": "jedberg",
                          "time": 1614730884,
                          "time_ago": "9 hours ago",
                          "content": "<p>Citibank bent over backwards to get Costco.  A few years ago Amex was the only card you could use at Costco.  Citibank agreed to not only make a new card with better rewards to compete with Amex, but they agreed to honor all the reward points too.  They just rolled over from Amex.<p>I&#x27;m sure Costco got a deal that gives them nearly at cost processing and a bunch of other stuff.<p>It was worth it for Citi too.  The moment I got my Costco Amex replaced with a Costco Citi, the Citi became my primary card, because everyone takes Visa.",
                          "comments": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "id": 26321239,
                  "level": 3,
                  "user": "bombcar",
                  "time": 1614721203,
                  "time_ago": "11 hours ago",
                  "content": "<p>Walmart sometimes gives me the &quot;approved remove card&quot; notification BEFORE the cashier has finished ringing up the purchase; I assume they&#x27;ve made a deal that lets them do that.",
                  "comments": []
                }
              ]
            },
            {
              "id": 26318369,
              "level": 2,
              "user": "Solocomplex",
              "time": 1614708773,
              "time_ago": "15 hours ago",
              "content": "<p>They do have a very small menu though.",
              "comments": []
            }
          ]
        },
        {
          "id": 26315327,
          "level": 1,
          "user": "skinkestek",
          "time": 1614693403,
          "time_ago": "19 hours ago",
          "content": "<p>Wow, someone in HR at work should find that dev and get him&#x2F;her to work for us :-)",
          "comments": []
        },
        {
          "id": 26319439,
          "level": 1,
          "user": "percentcer",
          "time": 1614713703,
          "time_ago": "13 hours ago",
          "content": "<p>Damn I miss Wawa",
          "comments": []
        }
      ]
    },
    {
      "id": 26313767,
      "level": 0,
      "user": "pdimitar",
      "time": 1614680537,
      "time_ago": "a day ago",
      "content": "<p>This might be because I am a former semi-pro Quake3 player but these days I grind my teeth with 95% of all software. Everything feels like it has at least 200ms delay injected, on every transition.<p>I&#x27;d honestly pay extra for an iPhone where I can disable ALL motion, too. But that&#x27;s the least of the problems.<p>I don&#x27;t want to become the grumpy old grandpa yelling &quot;back in my day!...&quot; but we have waaaaaaaaaaay too much young JS devs who know nothing else.<p>We need to get back to native UIs. Is it awfully hard? Yes it is. Do the users care? No, they don&#x27;t. Many people want fast UIs.<p>But to be fair to all sides -- there are also a lot of people who don&#x27;t notice certain slowdowns that I scoff at. So there is a middle ground that won&#x27;t cost billions to achieve and IMO that should be chased after.",
      "comments": [
        {
          "id": 26314590,
          "level": 1,
          "user": "rayiner",
          "time": 1614688192,
          "time_ago": "20 hours ago",
          "content": "<p>It’s awful. Everything web-based is slower on my 4.5 ghz MacBook Pro than things were on my 300 MHz PII running Windows 98. Every web page causes MacOS to complain “Safari is using a lot of power.” I was hunting for a project management web app, and one ate up 10% of the CPU just sitting there doing nothing. This has gotten particularly bad with Microsoft, with Word and Outlook on the Mac, which just kill battery life. (I think they’re using more and more JS under the hood, and I hear Outlook is slated to be replaced with a web app.) Teams is a bloated pig.<p>The crazy thing is that all these web apps also do a fraction of the things that the native apps used to do. They’ve somehow managed to strip down all the features while making the apps slow and bloated. Watching Microsoft’s To-Do blog is comitragic. Elon Musk will be living on Mars before the Microsoft tools allow you to schedule todos by dragging them to the calendar like Outlook has done since what, 98? (You can drag a todo from the web sidebar to the calendar now—but it somehow doesn’t actually schedule the due or start date in the todo itself or even have any link back to the todo.) And I feel like that’s one thing that’s different now. I also complained that Word 97 was a slow bloated big compared to Word Perfect, etc. But back in the day there was feature bloat. Now, everything is both slow and and non-functional.<p>I have to assume that it’s a structural thing with the industry. Machine learning, big data, security, etc., has become the hot areas, so all the “A” teams have migrated over there. I hear Apple is having trouble even getting people to do kernel work on MacOS.",
          "comments": [
            {
              "id": 26316259,
              "level": 2,
              "user": "mattgreenrocks",
              "time": 1614698943,
              "time_ago": "17 hours ago",
              "content": "<p>I&#x27;m convinced my retirement gig will be writing nice, native apps for my platform of choice.<p>They won&#x27;t bring in a ton of cash, but I can continue to make beautiful apps that are fast, focused, and respect the user&#x27;s time and computing resources.",
              "comments": [
                {
                  "id": 26326020,
                  "level": 3,
                  "user": "smallstepforman",
                  "time": 1614760390,
                  "time_ago": "23 minutes ago",
                  "content": "<p>Thats why I designed a Haiku native video editor with over 30 effects that does 4K UHD video, 3D extruded fonts, GLSL pluggins, and the package is 1.2Mb in size (Medo for Haiku OS)",
                  "comments": []
                },
                {
                  "id": 26318959,
                  "level": 3,
                  "user": "dceddia",
                  "time": 1614711534,
                  "time_ago": "14 hours ago",
                  "content": "<p>I just made one of these! I learned Swift to build it. Fast, focused, uses as little memory and CPU as I can manage for a (lightweight) video editor.<p>It&#x27;s been fun to work a bit closer to the metal than I&#x27;ve been with JS for the last few years. Made about 50 sales so far. Can&#x27;t imagine it&#x27;ll make me rich but maaan it makes my video editing way faster :D",
                  "comments": [
                    {
                      "id": 26319275,
                      "level": 4,
                      "user": "mattgreenrocks",
                      "time": 1614713068,
                      "time_ago": "14 hours ago",
                      "content": "<p>Great work on the product and marketing copy there!",
                      "comments": [
                        {
                          "id": 26319429,
                          "level": 5,
                          "user": "dceddia",
                          "time": 1614713665,
                          "time_ago": "13 hours ago",
                          "content": "<p>Thanks!",
                          "comments": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "id": 26320317,
                  "level": 3,
                  "user": "bdickason",
                  "time": 1614717555,
                  "time_ago": "12 hours ago",
                  "content": "<p>Things is a great example here. Lightning fast, lets me quickly add or re-order todo items, and does nothing else.",
                  "comments": []
                },
                {
                  "id": 26316377,
                  "level": 3,
                  "user": "waynesonfire",
                  "time": 1614699524,
                  "time_ago": "17 hours ago",
                  "content": "<p>Which GUI framework will you use?",
                  "comments": [
                    {
                      "id": 26316490,
                      "level": 4,
                      "user": "mattgreenrocks",
                      "time": 1614700045,
                      "time_ago": "17 hours ago",
                      "content": "<p>If I had to pick right now, I&#x27;d choose macOS for a platform.<p>For tech, I&#x27;d consider both Cocoa + Swift and SwiftUI as candidates for UI components, on a case-by-case basis. Swift is not my favorite language (feels like I have to use Xcode; have yet to try out the JetBrains IDE), but it gets the results I want. Perhaps in the future, we can use Rust in a more ergonomic fashion to talk with native UIs.<p>Honestly, I&#x27;d love an ObjC-like language that interops with ObjC and has strong static typing with a dynamic typing escape hatch for metaprogramming.",
                      "comments": [
                        {
                          "id": 26317094,
                          "level": 5,
                          "user": "brobdingnagians",
                          "time": 1614702909,
                          "time_ago": "16 hours ago",
                          "content": "<p>The JetBrains IDE for it (AppCode) is pretty nice, but you have to use Xcode for storyboards and UI design; other than that, light years ahead of the Xcode experience.",
                          "comments": [
                            {
                              "id": 26318287,
                              "level": 6,
                              "user": "apples_oranges",
                              "time": 1614708389,
                              "time_ago": "15 hours ago",
                              "content": "<p>IDK, AppCode always seemed so resource hungry.. but yeah it&#x27;s worth a try I suppose. I believe the Xcode experience isn&#x27;t too bad however.",
                              "comments": [
                                {
                                  "id": 26318625,
                                  "level": 7,
                                  "user": "swiftcoder",
                                  "time": 1614709879,
                                  "time_ago": "14 hours ago",
                                  "content": "<p>Using a bloated non-native app to develop your elegant, fully native app. Uh huh.",
                                  "comments": [
                                    {
                                      "id": 26322866,
                                      "level": 8,
                                      "user": "Siira",
                                      "time": 1614728944,
                                      "time_ago": "9 hours ago",
                                      "content": "<p>Java is fast, unlike JS. Perhaps one day JS will be fast, too.",
                                      "comments": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "id": 26317634,
                              "level": 6,
                              "user": "mattgreenrocks",
                              "time": 1614705388,
                              "time_ago": "16 hours ago",
                              "content": "<p>Good to know, I&#x27;ll give it a shot!",
                              "comments": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": 26318214,
                      "level": 4,
                      "user": "MaxBarraclough",
                      "time": 1614708066,
                      "time_ago": "15 hours ago",
                      "content": "<p>My uninvited suggestion: take a look at the FOX Toolkit. A truly lightweight non-themeable GUI toolkit written in C++, for Windows and Unix&#x2F;X11. It&#x27;s actively updated, but it&#x27;s essentially a one man operation these days.<p><a href=\"http:&#x2F;&#x2F;fox-toolkit.org&#x2F;\" rel=\"nofollow\">http:&#x2F;&#x2F;fox-toolkit.org&#x2F;</a>",
                      "comments": [
                        {
                          "id": 26319903,
                          "level": 5,
                          "user": "pindab0ter",
                          "time": 1614715725,
                          "time_ago": "13 hours ago",
                          "content": "<p>The first screenshot they show you (on the screenshots page) is a Windows XP program. I can&#x27;t say that inspires much confidence. Am I wrong?",
                          "comments": [
                            {
                              "id": 26321379,
                              "level": 6,
                              "user": "lelanthran",
                              "time": 1614721762,
                              "time_ago": "11 hours ago",
                              "content": "<p>It does look dated, but I use it daily (I use the xfe file manager) and it is bloody quick - every action is almost instantaneous compare to the KDE, gnome, mate or cinnamon file managers.<p>It depends on the target market for your application I suppose - if your target won&#x27;t be happy unless they have html&#x2F;CSS or similar animations, then using something with low latency isn&#x27;t going to make them happy.",
                              "comments": []
                            },
                            {
                              "id": 26320854,
                              "level": 6,
                              "user": "MaxBarraclough",
                              "time": 1614719650,
                              "time_ago": "12 hours ago",
                              "content": "<p>I can confirm it compiles with the latest Visual Studio and runs fine on Windows 10 in both 32-bit and 64-bit. (Well it did last time I checked, haven&#x27;t tried the very latest release.) You&#x27;re right the screenshots are ancient, but the code itself is still being updated by the project&#x27;s maintainer Jeroen.<p>The FOX codebase isn&#x27;t terribly modern, as it&#x27;s older than the standard C++ concurrency machinery, but it works.",
                              "comments": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "id": 26316476,
              "level": 2,
              "user": "abakker",
              "time": 1614699999,
              "time_ago": "17 hours ago",
              "content": "<p>OUTLOOK! Jeez has it gotten slow on my mac. I am not a particularly fast typist, but I can routinely out-type outlook by a whole sentence. Moreover in the latest version, if I hit command-R and start typing it will routinely take so long to just start replying to a message that it will drop the first 90 characters I type. I&#x27;ve seen rumors that microsoft will replace it, and I cannot wait until that happens.",
              "comments": [
                {
                  "id": 26318678,
                  "level": 3,
                  "user": "pklausler",
                  "time": 1614710142,
                  "time_ago": "14 hours ago",
                  "content": "<p>Outlook as a native application on Windows 10 on a recent Dell laptop is so slow that I have deleted the wrong e-mail in my inbox because I&#x27;ll hit the trashcan icon and by the time Outlook notices, it&#x27;s added new messages, moved things around, and then think that I clicked the icon on the message that now appears where the original did.",
                  "comments": [
                    {
                      "id": 26319440,
                      "level": 4,
                      "user": "rayiner",
                      "time": 1614713706,
                      "time_ago": "13 hours ago",
                      "content": "<p>This is a major problem with Outlook now. I’ve done it several times, where Outlook is thinking and moving stuff around between when I target the thing I want to hit and when I move the mouse.",
                      "comments": []
                    }
                  ]
                },
                {
                  "id": 26317383,
                  "level": 3,
                  "user": "twobitshifter",
                  "time": 1614704307,
                  "time_ago": "16 hours ago",
                  "content": "<p>I remember Outlook on windows 10 actually adding animation to my typing to smooth out the flow of words.  I disabled that immediately and I’m usually pro eye candy, but that was a step too far.",
                  "comments": [
                    {
                      "id": 26317780,
                      "level": 4,
                      "user": "metalliqaz",
                      "time": 1614706052,
                      "time_ago": "15 hours ago",
                      "content": "<p>same.  it was the dumbest feature i&#x27;ve ever seen.",
                      "comments": []
                    }
                  ]
                },
                {
                  "id": 26317885,
                  "level": 3,
                  "user": "cyral",
                  "time": 1614706573,
                  "time_ago": "15 hours ago",
                  "content": "<p>Glad I&#x27;m not the only one experiencing this. I have a brand new i7 Mac and outlook is laggy just switching between emails or inboxes.<p>Also, if I click the &quot;Switch to New Outlook&quot; button, it says that it can&#x27;t copy over my custom IMAP accounts for work. I would think that supporting things besides exchange or gmail accounts would be something they would do before releasing a  new version.",
                  "comments": []
                },
                {
                  "id": 26318280,
                  "level": 3,
                  "user": "slaymaker1907",
                  "time": 1614708363,
                  "time_ago": "15 hours ago",
                  "content": "<p>Weirdly enough it seems like Outlook on the web is somehow faster than the Windows version. It might be because lots of email uses HTML and Outlook is using an ancient version of HTML. I am very impressed with developers who can make things consistent in Outlook as well as actual browsers.",
                  "comments": [
                    {
                      "id": 26318740,
                      "level": 4,
                      "user": "cambalache",
                      "time": 1614710430,
                      "time_ago": "14 hours ago",
                      "content": "<p>Outlook web is slow as molasses. In the desktop is literally unusable for me (It never opens my account). Both things were superior experiences in 1999.",
                      "comments": []
                    },
                    {
                      "id": 26318873,
                      "level": 4,
                      "user": "WorldMaker",
                      "time": 1614711085,
                      "time_ago": "14 hours ago",
                      "content": "<p>Outlook on the web seems to be getting most of the development effort, in part because supposedly its parts are increasingly shared with Windows Mail&#x2F;Calendar (aka &quot;Mobile Outlook&quot;) through supposedly React Native, but also in part because apparently that&#x27;s just where most users use Outlook in 2021 (even in many MS365 shops, supposedly, there are a bunch of companies that prefer the web app).<p>There have been a bunch of interesting rumors that Microsoft is planning to hollow out the insides of Outlook Desktop (anything that isn&#x27;t nailed down to big corporate contracts and their extensions), and directly replace those guts with Web Outlook via React Native or something like it.",
                      "comments": [
                        {
                          "id": 26321122,
                          "level": 5,
                          "user": "abakker",
                          "time": 1614720724,
                          "time_ago": "11 hours ago",
                          "content": "<p>I think at this point they could hollow out Outlook and replace it with a guy who draws the interface on a whiteboard and then sends me a photo of it. That might have similar round-trip latency. &#x2F;s<p>Really, a web app wrapped in a desktop app would be fine if it could perform better. I don&#x27;t even need good, just better.",
                          "comments": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "id": 26314704,
              "level": 2,
              "user": "deburo",
              "time": 1614689102,
              "time_ago": "20 hours ago",
              "content": "<p>This is a specific nickpick but you won’t make me miss Outlook desktop. It’s crazy old and big, and for basic email stuff, its web app counterpart is much faster.<p>But anyway in the enterprise sector, it doesn’t matter whether an app is web or native, it will be slow regardless lol.",
              "comments": [
                {
                  "id": 26315049,
                  "level": 3,
                  "user": "jl6",
                  "time": 1614691689,
                  "time_ago": "19 hours ago",
                  "content": "<p>And just to confirm the forces in play here: enterprises care primarily about business outcomes of software, license cost, and support risk, with end-user experience being very far down the priority list except for a very few productivity applications where UI responsiveness actually matters for increasing employee output (fewer than you’d think). In short, the users aren’t the customers.",
                  "comments": [
                    {
                      "id": 26316250,
                      "level": 4,
                      "user": "tharne",
                      "time": 1614698882,
                      "time_ago": "17 hours ago",
                      "content": "<p>Yup. That&#x27;s exactly why enterprise software almost universally sucks.<p>This could really be applied to any good or service where the purchaser is not the end user. For example, in the U.S. dealing with your health insurance company is a nightmare, and a lot of that has to do with the fact that it&#x27;s your employer who&#x27;s the customer. If the health insurance company treats you badly, you can&#x27;t go with another provider, so they&#x27;re free to offer terrible service so long as they don&#x27;t piss of your company&#x27;s HR department who decides which health plans to go with.",
                      "comments": []
                    },
                    {
                      "id": 26319266,
                      "level": 4,
                      "user": "branko_d",
                      "time": 1614713050,
                      "time_ago": "14 hours ago",
                      "content": "<p>&gt; ...except for a very few productivity applications where UI responsiveness actually matters for increasing employee output (fewer than you’d think).<p>If there is UI, UI responsiveness matters for employee output.<p>Research that has been done on this topic suggests that increase in UI latency non-linearly decreases user productivity, whith the ultimate effect on the cost of doing business.<p>And that has been known for decades - take a look at the &quot;The Economic Value of Rapid Response Time&quot; from 1982:<p><a href=\"https:&#x2F;&#x2F;jlelliotton.blogspot.com&#x2F;p&#x2F;the-economic-value-of-rapid-response.html\" rel=\"nofollow\">https:&#x2F;&#x2F;jlelliotton.blogspot.com&#x2F;p&#x2F;the-economic-value-of-rap...</a><p>It&#x27;s puzzling to me why businisses still don&#x27;t prioritize UI latency, but it&#x27;s not a rational decision.<p>Perhaps it&#x27;s just human nature, as hinted in the linked article:<p><i>&quot;...few executives are aware that such a balance is economically and technically feasible.&quot;</i>",
                      "comments": []
                    }
                  ]
                },
                {
                  "id": 26319091,
                  "level": 3,
                  "user": "selimthegrim",
                  "time": 1614712192,
                  "time_ago": "14 hours ago",
                  "content": "<p>Can someone explain why from the mobile version of Outlook (OWA) I can&#x27;t send an email marked with Urgent&#x2F;High priority&#x2F;importance?",
                  "comments": []
                }
              ]
            },
            {
              "id": 26314699,
              "level": 2,
              "user": "pdimitar",
              "time": 1614689056,
              "time_ago": "20 hours ago",
              "content": "<p>I have no good theory about why that is except that maybe more and more business people are under the illusion that &quot;software is being increasingly commoditized&quot; which is of course not true.",
              "comments": [
                {
                  "id": 26316515,
                  "level": 3,
                  "user": "mattgreenrocks",
                  "time": 1614700170,
                  "time_ago": "17 hours ago",
                  "content": "<p>Their perception sort of perpetuates it.<p>I&#x27;ve seen devs arguing this, though IMO that is more the devs speaking out of resignation and learning to say the right things rather than the truth.",
                  "comments": []
                }
              ]
            },
            {
              "id": 26319365,
              "level": 2,
              "user": "radiator",
              "time": 1614713430,
              "time_ago": "13 hours ago",
              "content": "<p>Is it possible to use the web only as a platform to deliver the newest version of your native application?<p>- User visits website\n- downloads binary (preferably small size, use an appropriate language and cross-platform graphics library)\n- launches it (preferably without installation)\n- Perhaps creation of a local storage directory on the file system is needed the first time.\n- and voilà!<p>What would be the main obstacles to such a workflow? Are there projects who try work like this?",
              "comments": [
                {
                  "id": 26319421,
                  "level": 3,
                  "user": "rayiner",
                  "time": 1614713638,
                  "time_ago": "13 hours ago",
                  "content": "<p>Zoom?",
                  "comments": []
                }
              ]
            },
            {
              "id": 26316100,
              "level": 2,
              "user": "jgalentine007",
              "time": 1614697990,
              "time_ago": "18 hours ago",
              "content": "<p>It is awful, but there are  some positive tradeoffs like security and flexibility. For example, there have been a zillion vulnerabilities with native Office over the years. Visual Studio is a terrible pain to skin or customize its look and feel compared to VS Code.",
              "comments": []
            }
          ]
        },
        {
          "id": 26314922,
          "level": 1,
          "user": "fxtentacle",
          "time": 1614690784,
          "time_ago": "20 hours ago",
          "content": "<p>I feel the same way. We have way too many people working on tooling who don&#x27;t know how to properly make things fast.<p>On some days, I manage to type faster than XCode can display the letters on screen. There is no excuse for that with a 3 GHz CPU.<p>And yes, 200ms seems plausible to me:<p>Bluetooth adds delay over PS2 (about 28ms). DisplayPort adds delay over VGA. LCD screens need to buffer internally. Most even buffer 2-3 frames for motion smoothing (= 50ms). And suddenly you have 78 ms in hardware delay.<p>If the app you&#x27;re using is Electron or the like, then the click will be buffered for 1 frame, then there&#x27;s the click handler, then 1 frame of delay until the DOM is updated and another frame of delay for redraw. Maybe add 1 more frame for the Windows compositor. So that&#x27;s 83ms in software-caused delay.<p>So I&#x27;d estimate a minimum of 161ms of latency if you use an Electron-based app with a wireless mouse on a DisplayPort-connected LCD screen, i.e. VSCode on my Mac.",
          "comments": [
            {
              "id": 26316025,
              "level": 2,
              "user": "PaulHoule",
              "time": 1614697557,
              "time_ago": "18 hours ago",
              "content": "<p>The IDE is an extreme case of user interface.<p>You type in a letter and that starts off a cascade of computations, incremental compilation, table lookups, and such to support syntax highlighting, completion, etc. and then it updates whatever parts of a dynamic UI (the user decides which widgets are on the screen and where) need to be updated.<p>It almost has to be done in a &quot;managed language&quot; whether that is Emacs Lisp, Java, etc. and is likely to have an extension facility that might let the user add updating operations that could use unbounded time and space.  (I am wary to add any plug-ins to Eclipse)<p>I usually use a powerful Windows laptop and notice that IDE responsiveness is very much affected by the power state:  if I turn down the power use because it is getting too warm for my lap,  the keypress lag increases greatly.",
              "comments": [
                {
                  "id": 26319581,
                  "level": 3,
                  "user": "ycombobreaker",
                  "time": 1614714338,
                  "time_ago": "13 hours ago",
                  "content": "<p>If kicking off incremental conpilation is causing the IDE&#x27;s UI to behave sluggishly, then the IDE is wrong.  The incremental compilation or other value-adds (relative to a text exitor) should not create perceptible regressions.<p>Table lookups for syntax-highlighting can&#x27;t be backgrounded, but they should be trivial im comparison to stuff like compilation, intellisense, etc.",
                  "comments": []
                },
                {
                  "id": 26316340,
                  "level": 3,
                  "user": "mattgreenrocks",
                  "time": 1614699363,
                  "time_ago": "17 hours ago",
                  "content": "<p>I&#x27;m a bit of a language geek but I&#x27;ve always been confused by IDE lag, so I figure there&#x27;s something I don&#x27;t know.<p>From a UX perspective, I can see doing simple syntax highlighting on the UI thread...so long as it is something with small, bounded execution time. I don&#x27;t quite get why completions and other stuff lags the UI thread, as it seems obvious that looking that information up is expensive. I can&#x27;t tell if that is what&#x27;s happening, or there&#x27;s something more going on, such as coordinating the communication between UI&#x2F;worker threads becomes costly.<p>I&#x27;ve seen it in a bunch of IDEs though, especially those in managed languages. You&#x27;re typing, it goes to show a completion, and then....you wait.",
                  "comments": [
                    {
                      "id": 26318434,
                      "level": 4,
                      "user": "wincy",
                      "time": 1614709060,
                      "time_ago": "15 hours ago",
                      "content": "<p>I’m amazed at how much faster Rider seems to be than Visual Studio at its own game. Intellisense is way slower than the C# IDE made by the people who make Resharper. Resharper in visual studio is always really slow though.",
                      "comments": []
                    }
                  ]
                }
              ]
            },
            {
              "id": 26318637,
              "level": 2,
              "user": "baxuz",
              "time": 1614709950,
              "time_ago": "14 hours ago",
              "content": "<p>MacOS&#x27; compositor is waaay worse than Windows&#x27;. On MacOS everything feels like it&#x27;s lagging for 200ms.",
              "comments": []
            },
            {
              "id": 26315740,
              "level": 2,
              "user": "deergomoo",
              "time": 1614695927,
              "time_ago": "18 hours ago",
              "content": "<p>&gt; DisplayPort adds delay over VGA<p>Surely VGA would have more latency than DP for an LCD? It&#x27;s gotta convert from digital to analogue and then back to digital again at the other end.<p>Is the overhead of the protocol really greater than that? (genuine question)",
              "comments": [
                {
                  "id": 26316064,
                  "level": 3,
                  "user": "fxtentacle",
                  "time": 1614697811,
                  "time_ago": "18 hours ago",
                  "content": "<p>I meant to compare DP+LCD vs. VGA+CRT.<p>But to answer your question, digital to analogue and analogue to digital conversions tend to be so fast that you don&#x27;t notice. It is more of a convention thing that most VGA devices will display the image as the signal arrives, which means they have almost no latency. DP devices, on the other hand, tend to cache the image, do processing on the entire frame, and only then start the presentation.<p>As a result, for VGA the latency can be less than the time that it takes to send the entire picture through the wire. For DP, it always is at least one full transmission time of latency.",
                  "comments": [
                    {
                      "id": 26318488,
                      "level": 4,
                      "user": "mrob",
                      "time": 1614709297,
                      "time_ago": "15 hours ago",
                      "content": "<p>DP does not require buffering the entire frame. Data is sent as &quot;micro packets&quot;. Each micro packet may include a maximum of 64 link symbols, and each link symbol is made up of 8 bits encoded as 8b&#x2F;10b. The slowest supported link symbol clock is 1.62Gb&#x2F;s, so even considering protocol overhead there are always millions of micro packets per second.<p>If the required video data rate is lower than the link symbol rate the micro packets are stuffed with dummy data to make up the difference, and up to four micro packets may be sent in parallel over separate lanes, so some buffering is required, but this need only add a few microseconds of latency, which is not perceptible. Of course it&#x27;s possible for bad implementations to add more, but the protocol was designed to support low latency.",
                      "comments": [
                        {
                          "id": 26319719,
                          "level": 5,
                          "user": "fxtentacle",
                          "time": 1614714856,
                          "time_ago": "13 hours ago",
                          "content": "<p>Thank you for teaching me something new :) I didn&#x27;t know about micro-packets before.<p>In that case, I&#x27;m guessing the latency is coming from the fact that most LCD screens are caching one full image so that they can re-scale it in case the incoming video resolution isn&#x27;t identical with the display&#x27;s native resolution.<p>I vaguely remember there being an experimental NVIDIA feature to force scaling onto the GPU in hopes of reducing lag, but not sure that ever got released.",
                          "comments": []
                        }
                      ]
                    },
                    {
                      "id": 26322170,
                      "level": 4,
                      "user": "datagram",
                      "time": 1614725119,
                      "time_ago": "10 hours ago",
                      "content": "<p>To be fair, it&#x27;s only &quot;almost no latency&quot; if you just care about the pixels at the top of the screen. Since CRTs (and LCDs) draw the image over the course of a full frame, it&#x27;s more fair to say 8.3ms, since that&#x27;s when the middle of the screen will be drawn (at 60Hz). This is pretty comparable to modern gaming monitors, which have around 8.5-10ms of input delay @60Hz.<p>Where CRTs do have an advantage over LCDs is response time, which is generally a few ms even on the best monitors but basically nonexistent on CRTs.<p>But overall, a good monitor is only about half a frame worse than a CRT in terms of latency if you account for response time. At higher refresh rates it&#x27;s even less of an issue; I&#x27;m not aware aware of any CRTs that can do high refresh rates at useful resolutions.<p>Got my numbers by glancing at a few RTINGS.com reviews: <a href=\"https:&#x2F;&#x2F;www.rtings.com&#x2F;monitor&#x2F;reviews&#x2F;best&#x2F;by-usage&#x2F;gaming\" rel=\"nofollow\">https:&#x2F;&#x2F;www.rtings.com&#x2F;monitor&#x2F;reviews&#x2F;best&#x2F;by-usage&#x2F;gaming</a>",
                      "comments": []
                    }
                  ]
                },
                {
                  "id": 26315908,
                  "level": 3,
                  "user": "user-the-name",
                  "time": 1614696838,
                  "time_ago": "18 hours ago",
                  "content": "<p>Conversions between analog and digital happen in nanoseconds. They happen as the signal is sent.",
                  "comments": []
                }
              ]
            },
            {
              "id": 26315174,
              "level": 2,
              "user": "aembleton",
              "time": 1614692419,
              "time_ago": "19 hours ago",
              "content": "<p>161 ms is 1&#x2F;6th of a second which I would have thought would be noticeable and yet I haven&#x27;t noticed it. I assume that is mouse clicks?<p>I&#x27;m sure Id notice if typing had that much lag on vs code. I am using manjaro Linux but I can&#x27;t imagine that it would be much faster than osx.",
              "comments": [
                {
                  "id": 26315282,
                  "level": 3,
                  "user": "anonymoushn",
                  "time": 1614693116,
                  "time_ago": "19 hours ago",
                  "content": "<p>Fighting gamers are generally able to block overhead attacks (so they see the attack and successfully react by going from blocking low to blocking high, after waiting for the delay caused by software and the LCD monitor and their own input device) that take 20 frames or more. That&#x27;s 333ms. So I think if you were really paying attention to the input delay instead of trying to write software you would end up noticing delays around the 160ms level, idk.",
                  "comments": [
                    {
                      "id": 26319818,
                      "level": 4,
                      "user": "Daho0n",
                      "time": 1614715319,
                      "time_ago": "13 hours ago",
                      "content": "<p>333ms is ages! I can react way faster than that on a touchscreen. I bet you can too:<p><a href=\"https:&#x2F;&#x2F;humanbenchmark.com&#x2F;tests&#x2F;reactiontime\" rel=\"nofollow\">https:&#x2F;&#x2F;humanbenchmark.com&#x2F;tests&#x2F;reactiontime</a>",
                      "comments": [
                        {
                          "id": 26323281,
                          "level": 5,
                          "user": "anonymoushn",
                          "time": 1614732093,
                          "time_ago": "8 hours ago",
                          "content": "<p>Yes. The players are trying to react to a bunch of other things, not just 1 possible move. It&#x27;s in this context that 20 frames is the cutoff where moves start to be considered &quot;fake&quot; (i.e. getting hit is an unforced error)",
                          "comments": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "id": 26315944,
                  "level": 3,
                  "user": "aembleton",
                  "time": 1614697050,
                  "time_ago": "18 hours ago",
                  "content": "<p>Just trying in VS Code again, and there does seem to be a lag for mouse clicks.  Not sure if its as much as 1&#x2F;6s, but probably 1&#x2F;10.  Typing though looks as snappy as any terminal.<p>I get electron or MS have optimised the typing path.  I don&#x27;t click that much in VS Code so I don&#x27;t think its ever bothered me.",
                  "comments": [
                    {
                      "id": 26318786,
                      "level": 4,
                      "user": "hedgehog",
                      "time": 1614710651,
                      "time_ago": "14 hours ago",
                      "content": "<p>Typing in VSCode is high latency as well, I find it viscerally unpleasant to use solely due to this. There&#x27;s already a ticket: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;Microsoft&#x2F;vscode&#x2F;issues&#x2F;27378\" rel=\"nofollow\">https:&#x2F;&#x2F;github.com&#x2F;Microsoft&#x2F;vscode&#x2F;issues&#x2F;27378</a>",
                      "comments": []
                    }
                  ]
                }
              ]
            },
            {
              "id": 26315752,
              "level": 2,
              "user": "Hikikomori",
              "time": 1614695984,
              "time_ago": "18 hours ago",
              "content": "<p>And some video games with good hardware manages less than 20-30ms button to pixel response.",
              "comments": []
            },
            {
              "id": 26317021,
              "level": 2,
              "user": "boogies",
              "time": 1614702517,
              "time_ago": "16 hours ago",
              "content": "<p>&gt; Maybe add 1 more frame for the Windows compositor.<p>Months ago I noticed picom causing issues with keynav I was too lazy to find a (proper, pretty-window-shadow retaining) fix for, so I just killed it and — while I can’t confidently say I remember noticing a significant lag decrease — I can say I don’t really miss it (and my CPU, RAM, and electricity use almost certainly decreased by some small fractions).",
              "comments": []
            },
            {
              "id": 26315006,
              "level": 2,
              "user": "api",
              "time": 1614691392,
              "time_ago": "20 hours ago",
              "content": "<p>161ms is longer than it takes to ping half way around the world. Amazing.",
              "comments": [
                {
                  "id": 26316140,
                  "level": 3,
                  "user": "fxtentacle",
                  "time": 1614698314,
                  "time_ago": "18 hours ago",
                  "content": "<p>That&#x27;s why most people don&#x27;t notice any performance issues with Google Stadia &#x2F; Geforce Now. They are conditioned to endure 100+ ms of latency for everything, so an additional 9ms of internet transmission delay from the datacenter into your house is barely noticeable.",
                  "comments": []
                }
              ]
            },
            {
              "id": 26315543,
              "level": 2,
              "user": "anthk",
              "time": 1614694780,
              "time_ago": "19 hours ago",
              "content": "<p>Being a Go&#x2F;C&#x2F;Scheme coder makes me not tied to an ide, and it runs <i>fast</i>. Zero latency.",
              "comments": [
                {
                  "id": 26316084,
                  "level": 3,
                  "user": "fxtentacle",
                  "time": 1614697884,
                  "time_ago": "18 hours ago",
                  "content": "<p>I just used IDEs as an example. You&#x27;ll have the same latency issues with WhatsApp, Signal, Slack, Deezer, for example.",
                  "comments": [
                    {
                      "id": 26318381,
                      "level": 4,
                      "user": "higerordermap",
                      "time": 1614708825,
                      "time_ago": "15 hours ago",
                      "content": "<p>Being an anti social GNU&#x2F;Xorg*&#x2F;SystemD&#x2F;Archlinux nerd means I don&#x27;t have to use any of those.<p>* - actually it could be Wayland but doesn&#x27;t work with my old window manager config.",
                      "comments": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "id": 26313883,
          "level": 1,
          "user": "est",
          "time": 1614681864,
          "time_ago": "a day ago",
          "content": "<p>&gt; Everything feels like it has at least 200ms delay injected, on every transition. I&#x27;d honestly pay extra for an iPhone<p>If you are using Android, you are in luck.<p>1. Open Settings &gt; About Phone, Tap the build number 7 times (Or google other methods to open Developer menu for your phone model)<p>2. Go to Developer options -&gt; Drawing<p>3. Set <i>all</i> animation scale to 0.5x<p>You&#x27;d be amazed to find how fast the phone <i>appears</i>",
          "comments": [
            {
              "id": 26314800,
              "level": 2,
              "user": "rbanffy",
              "time": 1614689860,
              "time_ago": "20 hours ago",
              "content": "<p>You pretty much nailed it here. It&#x27;s not speed proper. It&#x27;s the perception of speed. What the iPhone mastered was the transition starting right away. If you have no transition, the time to start, say, the mail app, will appear long, but since you started the icon blowing up to cover the screen right after your finger press was detected (by your brain) the delay feels shorter because you see something is happening. It&#x27;s merely cosmetic - the app is still starting during the animation - but , to the user, the animation is part of the process.",
              "comments": [
                {
                  "id": 26314925,
                  "level": 3,
                  "user": "Nullabillity",
                  "time": 1614690814,
                  "time_ago": "20 hours ago",
                  "content": "<p>Err, seems like you got it the wrong way around. That was initially the reason, but these days the animation ends up taking much longer than the actual processing. GP&#x27;s workaround changes the animation durations to be somewhat closer to the actual time required.<p>But even that&#x27;s overkill for modern phones. I just tried turning off animations entirely, and things still feel pretty much instant, despite the phone being a few years old at this point.",
                  "comments": [
                    {
                      "id": 26314936,
                      "level": 4,
                      "user": "rbanffy",
                      "time": 1614690906,
                      "time_ago": "20 hours ago",
                      "content": "<p>I guess my phone doesn&#x27;t have enough speed to make lack of animations feel instantaneous ;-)<p>In any case, the animation shouldn&#x27;t take longer than it takes to start the program.",
                      "comments": []
                    }
                  ]
                }
              ]
            },
            {
              "id": 26314053,
              "level": 2,
              "user": "GuB-42",
              "time": 1614683596,
              "time_ago": "a day ago",
              "content": "<p>I actually went back to normal speed.\nSure, fast animations, but it makes stuttering more noticeable because there isn&#x27;t a slow animation to cover them up. My phone is a bit old, maybe that&#x27;s worth it if you have one of the latest flagships with plenty of computing power.",
              "comments": []
            },
            {
              "id": 26313888,
              "level": 2,
              "user": "nivenkos",
              "time": 1614681931,
              "time_ago": "a day ago",
              "content": "<p>You can also disable animations in the same settings, but I found it broke some applications.",
              "comments": []
            },
            {
              "id": 26314060,
              "level": 2,
              "user": "tony0x02",
              "time": 1614683675,
              "time_ago": "a day ago",
              "content": "<p>TY! I used to put my phone into low battery mode sometimes just to get the speed up from disabled animations.",
              "comments": []
            },
            {
              "id": 26316096,
              "level": 2,
              "user": "PaulHoule",
              "time": 1614697980,
              "time_ago": "18 hours ago",
              "content": "<p>I have Phillips Hue and Sengled lights at home and I usually disable the &quot;easing&quot; animation on them to reduce the perception of time delay when I push the button...  It is maybe 100 of ms of perceived latency I can subtract.<p>It help a lot in that &quot;computer user bill of rights&quot; issue that you start to worry at some point that the button press wasn&#x27;t registered and might then mash the button with unpredictable effects.<p>(e.g. you might get more customer satisfaction from a crosswalk button that doesn&#x27;t do anything at all except &#x27;click&#x27; instantaneously)",
              "comments": [
                {
                  "id": 26316748,
                  "level": 3,
                  "user": "lfowles",
                  "time": 1614701269,
                  "time_ago": "17 hours ago",
                  "content": "<p>Funny, because I purposefully bought dimmer switches for bathrooms in my house that added a bit of ramp up time when turning lights on! (Makes it less jarring to turn on the bathroom lights at 2am with just that fraction of a second)",
                  "comments": []
                },
                {
                  "id": 26316344,
                  "level": 3,
                  "user": "bombcar",
                  "time": 1614699371,
                  "time_ago": "17 hours ago",
                  "content": "<p>How do you disable the easing?",
                  "comments": []
                }
              ]
            },
            {
              "id": 26314443,
              "level": 2,
              "user": "Griffinsauce",
              "time": 1614687025,
              "time_ago": "21 hours ago",
              "content": "<p>This is the first thing I do when I get a new phone. How the default is as sluggish as it is is beyond me.",
              "comments": []
            },
            {
              "id": 26313914,
              "level": 2,
              "user": "pdimitar",
              "time": 1614682225,
              "time_ago": "a day ago",
              "content": "<p>Oh yeah, I am aware of that but not using Android for 4 years now. But I think I&#x27;ll buy a cheap Xiaomi device and play with Android again. Xiaomi optimize their phones quite a bit (even if you have to fight with their ROM to be less spyware).",
              "comments": [
                {
                  "id": 26314579,
                  "level": 3,
                  "user": "zwirbl",
                  "time": 1614688125,
                  "time_ago": "20 hours ago",
                  "content": "<p>I&#x27;d rather wait a small bit every time than getting a full blown spyphone, but scaling animation times down does improve the feel quite a lot",
                  "comments": [
                    {
                      "id": 26314630,
                      "level": 4,
                      "user": "pdimitar",
                      "time": 1614688490,
                      "time_ago": "20 hours ago",
                      "content": "<p>Fair, but it won&#x27;t be my main device. Still, you have a point.",
                      "comments": []
                    },
                    {
                      "id": 26316802,
                      "level": 4,
                      "user": "heywherelogingo",
                      "time": 1614701510,
                      "time_ago": "17 hours ago",
                      "content": "<p>Is OnePlus also in this category?",
                      "comments": [
                        {
                          "id": 26319877,
                          "level": 5,
                          "user": "Daho0n",
                          "time": 1614715578,
                          "time_ago": "13 hours ago",
                          "content": "<p>No. Not perfect, not bad.",
                          "comments": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "id": 26314172,
              "level": 2,
              "user": "raminyt",
              "time": 1614684795,
              "time_ago": "21 hours ago",
              "content": "<p>This is just a PSA to warn people that this can fail: I just tried this in my lunch break. I have LOS 17.1 on surnia (old, I know).<p>These settings <i>completely disabled</i> my on-screen home button and other UI elements, and setting the anim scale back to 1.0 and rebooting did not fix that, no more home button for now.<p>I probably have to reset the phone, did not find any further info so far on how to fix it (pointers, anyone?). But the UI seemed snappy indeed at 0.5 ...<p>Edit: &quot;other UI elements&quot; including e.g. the Tab switcher in the Lightning browser. The widgets are all displayed, but totally unresponsive.",
              "comments": [
                {
                  "id": 26314444,
                  "level": 3,
                  "user": "raminyt",
                  "time": 1614687029,
                  "time_ago": "21 hours ago",
                  "content": "<p>Solved (?) - I booted into TWRP and rebooted again from there, and the UI elements work again. (No clue what the exact problem was.)",
                  "comments": [
                    {
                      "id": 26314575,
                      "level": 4,
                      "user": "HenryBemis",
                      "time": 1614688117,
                      "time_ago": "20 hours ago",
                      "content": "<p>IT Crowd - Have You Tried Turning It Off And On Again?<p><a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=nn2FB1P_Mn8\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=nn2FB1P_Mn8</a>",
                      "comments": []
                    }
                  ]
                }
              ]
            },
            {
              "id": 26317200,
              "level": 2,
              "user": "Pxtl",
              "time": 1614703416,
              "time_ago": "16 hours ago",
              "content": "<p>Oooh, thanks for this.  I just applied the animation scale on my Pixel 4A and it feels so much peppier.",
              "comments": []
            },
            {
              "id": 26316384,
              "level": 2,
              "user": "kharak",
              "time": 1614699547,
              "time_ago": "17 hours ago",
              "content": "<p>Thank you. Feels like a new phone. Disabled all animations.",
              "comments": []
            }
          ]
        },
        {
          "id": 26314942,
          "level": 1,
          "user": "spdionis",
          "time": 1614690972,
          "time_ago": "20 hours ago",
          "content": "<p>I definitely hear you. As a heavy gamer myself, and a person who likes to do things fast to avoid slowing down my train of thought, our current tools are insanely slow.<p>The researchers telling me I don&#x27;t notice 100ms delays are smoking something. Yes, human <i>reaction</i> time is 200ms on average but we process information much faster than that. Moreover, the delays make it impossible to do &quot;learned&quot; chains of actions cause of the constant interruptions.<p>Hackers typing insanely fast and windows popping up everywhere in movies? The reason why that looks very unrealistic is just that our tools do not behave like that at all.",
          "comments": [
            {
              "id": 26315033,
              "level": 2,
              "user": "pdimitar",
              "time": 1614691630,
              "time_ago": "19 hours ago",
              "content": "<p>Those researchers never played Quake2 &#x2F; Quake3 &#x2F; Unreal Tournament.<p>You can absolutely detect when your ping gets above 25ms even. It can&#x27;t be missed.<p>&gt; <i>Hackers typing insanely fast and windows popping up everywhere in movies? The reason why that looks very unrealistic is just that our tools do not behave like that at all.</i><p>Right on. That&#x27;s why, even though I have an insanely pretty Apple display (on the iMac Pro) I move more and more of my day work to the terminal. Those movie UIs are achievable.<p>Related: I invest a lot of time and energy into learning my every tool&#x27;s keyboard shortcuts. This increases productivity.",
              "comments": [
                {
                  "id": 26317748,
                  "level": 3,
                  "user": "kmeisthax",
                  "time": 1614705909,
                  "time_ago": "16 hours ago",
                  "content": "<p>I would argue that it&#x27;s more noticeable in those older games where they weren&#x27;t using lag compensation and you had to lead your shots in order to hit other players. If you&#x27;re testing on a game which has rollback netcode then lag matters less because the game is literally hiding it from you.<p>What task is actually being measured here matters, too. For example, while it is true that humans cannot generally react faster than 100ms or so; most actual skills being tested by competitive gameplay are <i>not</i> pure reaction tests. They are usually some amount of <i>telegraphed</i> stimulus (notice an approaching player, an oncoming platform, etc) followed by an <i>anticipated</i> response. Humans are extremely sensitive to latency specifically because they need to time responses to those stimuli - not because they score really well in snap reaction tests.<p>Concrete example: the window to L-cancel in Melee is really small - far smaller than humanly possible to hit if this was purely a matter of reaction times. Of course, no player actually hits that window, because it&#x27;s humanly impossible. They don&#x27;t see their character hit the ground and then press L. They instead press L several frames in advance so that by the time their finger presses the trigger, their character has just hit the ground and made the window. Now, if I go ahead and add two frames of total lag to the display chain, all of their anticipated reactions will be too late and they&#x27;ll have to retrain for that particular display.",
                  "comments": [
                    {
                      "id": 26318328,
                      "level": 4,
                      "user": "pdimitar",
                      "time": 1614708585,
                      "time_ago": "15 hours ago",
                      "content": "<p>All true. IMO the point is that people actually made effort for things to both be fast and seem fast. Unlike today.",
                      "comments": []
                    }
                  ]
                },
                {
                  "id": 26317533,
                  "level": 3,
                  "user": "remram",
                  "time": 1614704921,
                  "time_ago": "16 hours ago",
                  "content": "<p>And input lag (eg. local, mouse-to-screen lag) gets you before that.",
                  "comments": []
                }
              ]
            },
            {
              "id": 26315539,
              "level": 2,
              "user": "CraigJPerry",
              "time": 1614694715,
              "time_ago": "19 hours ago",
              "content": "<p>&gt;&gt; Moreover, the delays make it impossible to do &quot;learned&quot; chains of actions<p>Yeah this resonates for sure. Multiple times per day i tell citrix ctrl+alt+break, down arrow, return (minimise full screen citrix, go to my personal desktop) and about 50% of the time an app inside the citrix session will be delivered the down arrow, return keystrokes :-&#x2F;",
              "comments": [
                {
                  "id": 26317221,
                  "level": 3,
                  "user": "Pxtl",
                  "time": 1614703535,
                  "time_ago": "16 hours ago",
                  "content": "<p>This.  Any application that doesn&#x27;t properly queue the user inputs gets my eternal hatred.  Either your application needs to work at the speed of thought, or it needs to properly queue things so when it catches up it executes my commands in order.<p>Surprisingly, I find MS Windows native stuff to be head-and-shoulders <i>the best</i> at this queuing.",
                  "comments": [
                    {
                      "id": 26325248,
                      "level": 4,
                      "user": "cma",
                      "time": 1614750759,
                      "time_ago": "3 hours ago",
                      "content": "<p>The star menu itself seems to fail at this.  And pin entry on a locked windows machine seems random whether it accepts the first keystroke as part of the pin or not.",
                      "comments": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "id": 26313839,
          "level": 1,
          "user": "reassembled",
          "time": 1614681397,
          "time_ago": "a day ago",
          "content": "<p>Game developers know how to make smooth and performant UI, to say nothing of the rest of what goes into writing a game engine, particularly a fast GPU-accelerated engine. I’m starting to think it’s primarily a cultural thing, where it’s just become acceptable in the web dev and Electron app world to ship sluggish, resource-intensive apps. I also feel like more corners are cut and performance issues swept under the rug when devs are not staring down the barrel of the hardware on a daily basis.",
          "comments": [
            {
              "id": 26314180,
              "level": 2,
              "user": "jiggawatts",
              "time": 1614684871,
              "time_ago": "21 hours ago",
              "content": "<p>I used to write 4K demos and the like in assembly, and I wrote a 3D engine in the era where you still thought hard about making something a function call or not because... you know... those fractions of a microseconds <i>add up</i>, and next thing you know you&#x27;ve blown your 16.6ms frame time budget!<p>These days I see people casually adding network hops to web applications like it&#x27;s <i>nothing</i>. These actually take <i>multiple</i> milliseconds in common scenarios such as cloud hosting on a PaaS. (I measured. Have you?)<p>At that point it&#x27;s not even relevant how fast your CPUs are, you&#x27;re blowing your &quot;time budget&quot; in just a handful of remote function calls.<p>If you stop and think about it, the &quot;modern&quot; default protocol stack for a simple function consists of:<p><pre><code>    - Creating an object graph scattered randomly on the heap\n    - Serialising it with dynamic reflection \n      ...to a *text* format!\n      ...written into a dynamically resizing buffer\n    - Gzip compressing it to another resizing buffer\n    - Encrypting it to stop the spies in the data centre\n    - Buffering\n    - Kernel transition\n    - Buffering again in the NIC\n    - Router(s)\n    - Firewall(s)\n    - Load balancer\n</code></pre>\n<i>and then the reverse of the above for the data to be received!</i><p><i>then the forward -- and -- backwards stack -- again -- for the response</i><p>If this isn&#x27;t insanity, I don&#x27;t know what is...",
              "comments": [
                {
                  "id": 26314470,
                  "level": 3,
                  "user": "imtringued",
                  "time": 1614687244,
                  "time_ago": "21 hours ago",
                  "content": "<p>You&#x27;re missing the point. You&#x27;re talking about the fast part which in any well optimized application is never going to be slow enough to matter. The problems start when you sprinkle 0.5MB libraries all over your code base and you start doing an excessive amount of HTTP calls.<p>What you are doing is like a machinist complaining about a carpenter not measuring everything in thousands of an inch or micrometers. The reality is that wood is soft and can shrink or grow. It&#x27;s maybe not the best material but it&#x27;s good enough for the job and it&#x27;s cheap enough that you can actually afford it.",
                  "comments": [
                    {
                      "id": 26314563,
                      "level": 4,
                      "user": "skohan",
                      "time": 1614688020,
                      "time_ago": "20 hours ago",
                      "content": "<p>The problem with this analogy is that it makes sense to work with lower quality materials in real life, because the cost savings scale with the number if units you produce.<p>With web content it’s the exact opposite.  Every time you are a bit lazy, and add another mushy, poorly optimized dependency, the cost is paid by every one of your users.<p>The better analogy is that the web is like an assembly line that serves content.  Do you want wooden equipment with poor tolerances making up that assembly line which takes twice as long and occasionally dumps parts on the ground, or do you want a well-optimized system working at peak efficiency?",
                      "comments": [
                        {
                          "id": 26315406,
                          "level": 5,
                          "user": "gonzo41",
                          "time": 1614693875,
                          "time_ago": "19 hours ago",
                          "content": "<p>You actually want what you can afford. A shitty product in the market beats a great product on localhost.",
                          "comments": [
                            {
                              "id": 26316412,
                              "level": 6,
                              "user": "skohan",
                              "time": 1614699666,
                              "time_ago": "17 hours ago",
                              "content": "<p>A lot of the problems with web development have nothing to do with time to market.  There&#x27;s no technical reason you could not have a toolset which is just as easy to use, but far more performant.",
                              "comments": [
                                {
                                  "id": 26318735,
                                  "level": 7,
                                  "user": "lostcolony",
                                  "time": 1614710408,
                                  "time_ago": "14 hours ago",
                                  "content": "<p>So if it isn&#x27;t easier to use, and less performant, why are these poor toolsets being chosen?",
                                  "comments": [
                                    {
                                      "id": 26318937,
                                      "level": 8,
                                      "user": "skohan",
                                      "time": 1614711434,
                                      "time_ago": "14 hours ago",
                                      "content": "<p>History and inertia",
                                      "comments": [
                                        {
                                          "id": 26319442,
                                          "level": 9,
                                          "user": "lostcolony",
                                          "time": 1614713711,
                                          "time_ago": "13 hours ago",
                                          "content": "<p>That would explain why they continue to be used after initial adoption. It doesn&#x27;t explain why they were initially chosen if there were better options using something that already existed.<p>History and inertia also are nearly synonymous with &quot;easier to use&quot; in this context.",
                                          "comments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": 26314680,
                      "level": 4,
                      "user": "forgotmypw17",
                      "time": 1614688906,
                      "time_ago": "20 hours ago",
                      "content": "<p>You,re pointing the blame at a source of EVEN WORSE performance issues, but it doesn,t remove the slowdown described.<p>Plain HTML renders several order of magnitudes faster than post-load JS rendering, and yes, it is noticeable, especially if you account for variable connection speeds.<p>Most web devs develop on localhost and test on some of the best connections you can get today, leaving network performance testing as an afterthought at best... and it shows.",
                      "comments": [
                        {
                          "id": 26320345,
                          "level": 5,
                          "user": "branko_d",
                          "time": 1614717695,
                          "time_ago": "12 hours ago",
                          "content": "<p>&gt; Plain HTML renders several order of magnitudes faster than post-load JS rendering<p>Well, &quot;several orders of magnitude&quot; is a bit much, but the point stands.<p>However, that&#x27;s only during the initial load. After that, JS can just keep modifying the DOM based on the data retrieved from API, and never download HTML and construct new DOM again. If done properly (and that&#x27;s a big if!), and where appropriate, this can be much faster.<p>&gt; Most web devs develop on localhost and test on some of the best connections you can get today, leaving network performance testing as an afterthought at best... and it shows.<p>Very true! And on beefeir CPUs&#x2F;GPUs, more RAM, faster storage etc.<p>For the last couple of years, I&#x27;ve been careful to develop on &quot;midrange&quot; hardware, exactly so I can spot performance problems earlier.",
                          "comments": [
                            {
                              "id": 26326148,
                              "level": 6,
                              "user": "forgotmypw17",
                              "time": 1614761752,
                              "time_ago": "a few seconds ago",
                              "content": "<p>&gt; However, that&#x27;s only during the initial load.<p>Primary and by far most frequent use case.<p>&gt; After that, JS can just keep modifying the DOM based on the data retrieved from API, and never download HTML and construct new DOM again.<p>And then you can never return to the same page again, it&#x27;s gone into the either, and the Back button doesn&#x27;t work properly.<p>Anyone who doesn&#x27;t support JS to the level you want? Well, fuck those people, let them make their own wheelchair ramps.<p>&gt; If done properly (and that&#x27;s a big if!), and where appropriate, this can be much faster.<p>A big IF, indeed.",
                              "comments": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "id": 26315029,
                  "level": 3,
                  "user": "gspr",
                  "time": 1614691581,
                  "time_ago": "20 hours ago",
                  "content": "<p>Hear, hear!<p>And not only is the stack you describe full of delays, several of the layers are outside of the control of the software in question and can just… fail! Sure, there are cases where I need my software to communicate with the outside world, but I get furious when some page with text on it dies because somewhere in a datacenter some NIC failed and thus the shitty webapp I was viewing fell over.",
                  "comments": []
                },
                {
                  "id": 26314927,
                  "level": 3,
                  "user": "wruza",
                  "time": 1614690850,
                  "time_ago": "20 hours ago",
                  "content": "<p>Developers use what is available off the shelf. If there is no easy and straightforward way to send data with a client code over the wire, they will send “function onload() { unjson(await xhr(endpoint, tojson(data))) }”. Blame should go to stupid runtimes, not developers.<p>You were motivated by submitting a cool demo, they are motivated by not being fired after deadlines. An additional network hop is <i>nothing</i> compared to not shipping.",
                  "comments": [
                    {
                      "id": 26315500,
                      "level": 4,
                      "user": "blacktriangle",
                      "time": 1614694432,
                      "time_ago": "19 hours ago",
                      "content": "<p>Or there&#x27;s nobody to blame and we&#x27;re stuck in a very shitty local maximum. Developers want to deploy to every device on the globe instantaneously, users want to get their software without having to fight with the IT department, and while everybody was looking at the JVM as the runtime to beat the browser was picking up features like some demented katamari.<p>When I look at the massive backlog of requests from my users, not a single one is &quot;speed.&quot;",
                      "comments": []
                    },
                    {
                      "id": 26320899,
                      "level": 4,
                      "user": "jiggawatts",
                      "time": 1614719908,
                      "time_ago": "12 hours ago",
                      "content": "<p>I was referring to API calls between server components of what is essentially a monolithic application.<p>I&#x27;ve recently come across several such applications that were &quot;split up&quot; for no good reason. Just because it&#x27;s the current fad to do the microservices thing. Someone liked that fad and decided that over-architecting everything is going to keep them employed.<p>To clarify: This was strictly worse in every possible way. No shortcuts were taken. No time was saved. Significant time and effort was <i>invested</i> into making the final product much worse.",
                      "comments": []
                    }
                  ]
                },
                {
                  "id": 26314264,
                  "level": 3,
                  "user": "baybal2",
                  "time": 1614685584,
                  "time_ago": "21 hours ago",
                  "content": "<p>Hello,<p>Can you tell what is your occupation? Are you dealing with assembler level programming regularly?",
                  "comments": [
                    {
                      "id": 26314398,
                      "level": 4,
                      "user": "jiggawatts",
                      "time": 1614686660,
                      "time_ago": "21 hours ago",
                      "content": "<p>Not any more, these days I do various kinds of systems integration work and I still dabble in development, but mostly with high-level languages like C#.<p>It just grinds me gears that we have all these wonderfully fast computers and we&#x27;re just <i>throwing the performance away</i>.<p>My analogy to customers where I consult is this: What you&#x27;re doing is like buying a dozen sticks of RAM, and then throwing ten of them into the trash. It&#x27;s like pouring superglue into all but a couple of the switch ports. It&#x27;s like buying a 64-core CPU and disabling 63 of those cores. It&#x27;s like putting some of the servers on the Moon instead of next to each other in the same rack.<p>Said like that, modern development practices and infrastructure architectures suddenly sound as insane as they truly are.",
                      "comments": [
                        {
                          "id": 26314520,
                          "level": 5,
                          "user": "josephg",
                          "time": 1614687671,
                          "time_ago": "21 hours ago",
                          "content": "<p>I totally agree. I think about it like, you spend $3000 on a computer. $100 goes into actually doing your computing. The rest is thrown away by lazy programmers who can’t be bothered to learn how a profiler works. Most software is written the same way a lazy college student treats their dorm room - all available resources (surfaces) are filled before anything gets cleaned up. Getting a bigger room provides temporary relief before they just make more mess to fill the space.",
                          "comments": [
                            {
                              "id": 26317298,
                              "level": 6,
                              "user": "Pxtl",
                              "time": 1614703908,
                              "time_ago": "16 hours ago",
                              "content": "<p>&quot;can&#x27;t be bothered to learn how a profiler works&quot;<p>To be fair, profiling is way more difficult than it was in the days of single-core local applications.  A single-threaded single-machine application means you can get a very clear and simple tree-chart of where your program&#x27;s time is spent, and the places to optimize are dead obvious.<p>Even if you&#x27;re using async&#x2F;await but are basically mostly releasing the thread and awaiting the response, the end-user experience of that time is the same - they don&#x27;t give a crap that you&#x27;re being thoughtful to the processor if it&#x27;s still 0.5s of file IO before they can do anything, but now the profiler is lying to you and saying &quot;nope, the processor isn&#x27;t spending any time in that wait, your program is fast!&quot;.",
                              "comments": [
                                {
                                  "id": 26319718,
                                  "level": 7,
                                  "user": "toast0",
                                  "time": 1614714853,
                                  "time_ago": "13 hours ago",
                                  "content": "<p>&gt; To be fair, profiling is way more difficult than it was in the days of single-core local applications.<p>Not if you graduated from the printf school of profiling[1].<p>Measure the time when you start something, measure the time when you finish, and print it. Anything that takes too long gets a closer look.<p>[1] unaffiliated with the printf school of debugging, but coincidentally located at the same campus.",
                                  "comments": []
                                }
                              ]
                            },
                            {
                              "id": 26314638,
                              "level": 6,
                              "user": "zwirbl",
                              "time": 1614688547,
                              "time_ago": "20 hours ago",
                              "content": "<p>Wirth&#x27;s law is a reality, an awful, horribly annoying one",
                              "comments": []
                            }
                          ]
                        },
                        {
                          "id": 26314653,
                          "level": 5,
                          "user": "baybal2",
                          "time": 1614688637,
                          "time_ago": "20 hours ago",
                          "content": "<p>From MCU programmers, I know you can make even a microcontroller run around a Xeon if you know how you can squeeze every cycle of performance, and exploit particularly hard tasks to optimise.<p>Write a riddle for a CPU with 100% cache miss rate, confusing the prefetcher to clog the memory bus, and enforcing a synchronous memory access. Such thing is very likely to run literally with an MCU speed on an x86 PC CPU.",
                          "comments": []
                        },
                        {
                          "id": 26314627,
                          "level": 5,
                          "user": "seer",
                          "time": 1614688476,
                          "time_ago": "20 hours ago",
                          "content": "<p>Well yea and no, ideally you are not “throwing” that RAM away, you are paying for a more flexible software that can be more easily changed in the future, or to be able to pay much less for your developers, often both.<p>Nobody wants slow software, its just cheaper, in upfront and maintenance costs. Going with analogies, its like a race car mechanic complaining that a car is using like 3 cylinders where it could have 8. Sure but some people have other priorities I guess.",
                          "comments": [
                            {
                              "id": 26314675,
                              "level": 6,
                              "user": "pdimitar",
                              "time": 1614688873,
                              "time_ago": "20 hours ago",
                              "content": "<p>&gt; <i>you are paying for a more flexible software that can be more easily changed in the future</i><p>In theory yes, in practice this almost never happens. 95% of the teams just quickly mash the product together and peace out before anyone notices what mess did they make. And then you have some poor Indian &#x2F; African &#x2F; Eastern European team trying to untangle and improve it.<p>Seen it literally tens of times over a course of 19 years career.<p>&gt; <i>Nobody wants slow software, its just cheaper, in upfront and maintenance costs</i><p>That is true. But nowadays it&#x27;s more like taking a loan from the bank and running away to an uninhabited island to avoid paying it off.",
                              "comments": [
                                {
                                  "id": 26318827,
                                  "level": 7,
                                  "user": "mynameisash",
                                  "time": 1614710831,
                                  "time_ago": "14 hours ago",
                                  "content": "<p>&gt; In theory yes, in practice this almost never happens. 95% of the teams just quickly mash the product together and peace out before anyone notices what mess did they make.<p>Much of my work is in highly parallelized computing (think Spark across thousands of nodes) processing 10s or 100s of TiB at a time with declarative syntax. It&#x27;s super cool. Until someone decides they&#x27;re going to use this one line expression to process data because it&#x27;s just so easy to write. But it turns out doing that absolutely destroys your performance because the query optimizer now has a black box in the middle of your job graph that it can&#x27;t reason about.<p>Bad practices like that occur over and over again, and everyone just figures, &quot;Well, we have a lot of hardware. If the job takes an extra half hour, NBD.&quot; Soon, you have scores of jobs that take eight hours to run and everyone starts to become a little uneasy because the infrastructure is starting to fail jobs on account of bad data skew and vertexes exceeding the predefined limits.<p>How did we get here? We severely over-optimized for engineer time to the detriment of CPU time. Certainly, there <i>is</i> a balance to strike, no doubt. But When writing one line of code versus six (and I&#x27;m not being hyperbolic here) becomes preferable to really understanding what your system is doing, you reap what you sow.<p>On the plus side, I get to come in and make things run 5x, 10x, maybe even 20x faster with very little work. It sometimes feels magical, but it would be preferable if we had some appreciation for not letting our code slowly descend into gross inefficiency.",
                                  "comments": []
                                },
                                {
                                  "id": 26315504,
                                  "level": 7,
                                  "user": "seer",
                                  "time": 1614694451,
                                  "time_ago": "19 hours ago",
                                  "content": "<p>Maybe it didn’t really come across I am totally in the performance camp and love to be able to craft a beautiful, lean and responsive UI if nothing else than for seeing the joy on users’ faces when they are delighted (amazed!) that what they wanted done happened so fast.<p>But time and time again I see that projects with a fast “enough” interfaces and flexible systems win out on more specialized, faster ones. And I hate that but here we are. Sometime we see a really performant piece of software hit the sweet spot of functionality for a while (for example sublime text) but then get overtaken by a fast enough but more flexible alternative (vacode)",
                                  "comments": []
                                },
                                {
                                  "id": 26315580,
                                  "level": 7,
                                  "user": "anthk",
                                  "time": 1614695026,
                                  "time_ago": "19 hours ago",
                                  "content": "<p>&gt;Eastern European<p>Eastern European coders are highly competent, they did magic back in the day with just a ZX Spectrum.",
                                  "comments": [
                                    {
                                      "id": 26315628,
                                      "level": 8,
                                      "user": "pdimitar",
                                      "time": 1614695278,
                                      "time_ago": "18 hours ago",
                                      "content": "<p>As an Eastern European programmer, I agree. A lot of us are called to fix messes left by primadona devs (who are taking home $200K a year for the privilege of making other people&#x27;s lives a living nightmare).",
                                      "comments": [
                                        {
                                          "id": 26316315,
                                          "level": 9,
                                          "user": "tharne",
                                          "time": 1614699263,
                                          "time_ago": "17 hours ago",
                                          "content": "<p>To be fair, most of those &quot;primadona devs&quot;, as you call them, would much prefer to write well-designed programs cleanly coded, but are given completely unreasonable timeframes and staffing then told to create an MVP then turn it over to offshore.<p>Very few people enjoy producing junk, but management (and customers) often demand junk today rather than quality tomorrow.",
                                          "comments": [
                                            {
                                              "id": 26320500,
                                              "level": 10,
                                              "user": "ridethebike",
                                              "time": 1614718283,
                                              "time_ago": "12 hours ago",
                                              "content": "<p>Primadona dev here :)<p>&gt;&gt; most of those &quot;primadona devs&quot;, as you call them, would much prefer to write well-designed programs cleanly coded<p>Most of them - yes.\nBut there&#x27;s a non-negligible chunk of them who are too careless or incompetent to care about quality - they&#x27;ve been around long enough to gain knowledge about project and get Vice-President title(inflated ego included).<p>It is especially visible in big banks (I suppose it&#x27;s typical for other big non-tech corps as well) where tech culture is generally on poor side.<p>edit: grammar",
                                              "comments": []
                                            },
                                            {
                                              "id": 26318363,
                                              "level": 10,
                                              "user": "pdimitar",
                                              "time": 1614708749,
                                              "time_ago": "15 hours ago",
                                              "content": "<p>Obviously neither me nor you can generalize -- both extremes exist.<p>Given the chance I&#x27;d likely collect a fat paycheck and bail out at the end of the contract as those other people did. But that attitude is responsible for the increasingly awful mess that modern software is becoming.<p>Almost everyone is at fault, me included. The perverted incentives of today&#x27;s world are only making things worse.",
                                              "comments": []
                                            }
                                          ]
                                        },
                                        {
                                          "id": 26317708,
                                          "level": 9,
                                          "user": "seer",
                                          "time": 1614705692,
                                          "time_ago": "16 hours ago",
                                          "content": "<p>Hah true dat. Been my life for the last couple of years :-D Managed to pull through a project that “failed” two times and was 2.5 years behind schedule...",
                                          "comments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "id": 26314039,
              "level": 2,
              "user": "skohan",
              "time": 1614683400,
              "time_ago": "a day ago",
              "content": "<p>Given the state and culture of web development, it&#x27;s honestly a travesty that most software is consumed via the web currently.<p>I mean the web stack itself was never designed per se.  HTML is essentially a text annotation format, which has been abused to support the needs of arbitrary layouts.  The weakness of CSS is evident by how difficult it has been to properly center something within a container until relatively recently.  And Javascript was literally designed in a week.<p>And then in terms of deploying web content, you have this situation where you have multiple browsers which are moving targets, so you can&#x27;t even really just target raw HTML+CSS+JS if you want to deploy something - you need a tool like webpack to take care of all the compatibility issues, and translate a tool which is actually usable like React into an artifact which will behave predictably across all environments.  I don&#x27;t blame web developers for abusing libraries, because it&#x27;s almost impossible to strip it all down and work with the raw interfaces.<p>The whole thing is an enormous hack.  If you view your job as a programmer as writing code to drive computer hardware - which is what the true reality of programming is - then web development is so far divorced from that.  I think it&#x27;s a huge problem.",
              "comments": [
                {
                  "id": 26314239,
                  "level": 3,
                  "user": "grishka",
                  "time": 1614685399,
                  "time_ago": "21 hours ago",
                  "content": "<p>What about those weirdos who deliberately choose to use the abomination that the web stack is for desktop apps? To me it feels like they&#x27;re trying to write real GUI apps in Word macros. I don&#x27;t think I&#x27;ll ever understand why.",
                  "comments": [
                    {
                      "id": 26317325,
                      "level": 4,
                      "user": "Pxtl",
                      "time": 1614704051,
                      "time_ago": "16 hours ago",
                      "content": "<p>The reason is there is an explosion of platforms to support.  Back in the &#x27;90s, &quot;windows desktop only&quot; was a reasonable business plan.<p>Now?  You need Windows desktop, mobile on 2 different operating systems, web, MacOS, and possibly TV depending on your market.<p>What&#x27;s the lowest common denominator?  Web stack.",
                      "comments": [
                        {
                          "id": 26317675,
                          "level": 5,
                          "user": "sudosysgen",
                          "time": 1614705565,
                          "time_ago": "16 hours ago",
                          "content": "<p>There&#x27;s also Qt :)",
                          "comments": [
                            {
                              "id": 26318610,
                              "level": 6,
                              "user": "radiator",
                              "time": 1614709818,
                              "time_ago": "14 hours ago",
                              "content": "<p>Or Java",
                              "comments": [
                                {
                                  "id": 26323897,
                                  "level": 7,
                                  "user": "ryandrake",
                                  "time": 1614737828,
                                  "time_ago": "7 hours ago",
                                  "content": "<p>Or... and I know this is just crazy-talk... there is properly separating your platform-independent business logic from the minimal platform-specific UI layer. A lost art these days it seems.",
                                  "comments": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": 26314992,
                      "level": 4,
                      "user": "wruza",
                      "time": 1614691285,
                      "time_ago": "20 hours ago",
                      "content": "<p>If CorelDRAW were installed on every phone and given same privileges, they’d use that. A new type of browser is like a social network – relatively easy to build one, insanely hard to get it adopted by everyone. The alternative is building for at least 4 different platforms, whose common denomination is usually either a non-barking dog or a vendor-locked monstrosity not even worth considering. And existing web browsers and committees are digging their heels in the status quo.",
                      "comments": []
                    },
                    {
                      "id": 26317588,
                      "level": 4,
                      "user": "marcosdumay",
                      "time": 1614705212,
                      "time_ago": "16 hours ago",
                      "content": "<p>I&#x27;ve met plenty of people that prefer to write GUIs in Excel macros. If all you know about is a hammer...<p>I only have a problem with the ones among those hammer only people that are proud of not knowing anything else and proclaim everybody not using a hammer for everything stupid, because &quot;look on all those perfected hammers we created! your choice doesn&#x27;t have such nice ones&quot;.",
                      "comments": [
                        {
                          "id": 26320936,
                          "level": 5,
                          "user": "robotnikman",
                          "time": 1614720043,
                          "time_ago": "12 hours ago",
                          "content": "<p>Oh yeah, I&#x27;ve seen that before. Someone made a random password generator GUI in excel for people to use at one of my previous jobs",
                          "comments": []
                        }
                      ]
                    },
                    {
                      "id": 26314432,
                      "level": 4,
                      "user": "skohan",
                      "time": 1614686961,
                      "time_ago": "21 hours ago",
                      "content": "<p>In some ways I can I understand it, because if you want to deploy a GUI application which mostly consists of text and pictures across multiple platforms, this is probably most viable option in a lot of cases, but the fact that this is the case is a failure of the market and the industry",
                      "comments": [
                        {
                          "id": 26314576,
                          "level": 5,
                          "user": "josephg",
                          "time": 1614688117,
                          "time_ago": "20 hours ago",
                          "content": "<p>Yep. Native software development houses never invested enough in making a cross platform app toolkit as good as the web. There’s no technical reason why we don’t have something like electron, but lightweight and without javascript. But native-feeling cross platform UI is really hard (like $100M+ hard) and no individual company cares enough to make it happen. I’m sure it would be a great investment for the industry as a whole, but every actor with the resources is incentivised to solve their problems using different approaches. It’s pretty disappointing.",
                          "comments": [
                            {
                              "id": 26314812,
                              "level": 6,
                              "user": "grishka",
                              "time": 1614689885,
                              "time_ago": "20 hours ago",
                              "content": "<p>I don&#x27;t think it&#x27;s at all possible to make cross-platform GUIs that feel native. It&#x27;s of course fine to share the core of your application across platforms, but you have to make the UI part separately for each platform for a truly nice result. There&#x27;s no escaping that. And it&#x27;s not like companies like Slack and Discord lack the resources to do so — they absolutely deliberately continue stubbornly ignoring the fact that, setting aside excessive resource usage, no one likes UIs that look and feel out of place in their OS. They totally have the resources necessary to rewrite their apps to use native UI toolkits on all supported systems.",
                              "comments": [
                                {
                                  "id": 26314888,
                                  "level": 7,
                                  "user": "pdimitar",
                                  "time": 1614690470,
                                  "time_ago": "20 hours ago",
                                  "content": "<p>I don&#x27;t know engineers from in there but I am willing to bet $100 that part of them really want to make native OS UIs. It&#x27;s just that business will never green-light that as a priority.",
                                  "comments": []
                                }
                              ]
                            },
                            {
                              "id": 26316044,
                              "level": 6,
                              "user": "jamil7",
                              "time": 1614697692,
                              "time_ago": "18 hours ago",
                              "content": "<p>Although I&#x27;m not a huge fan of it, you could argue that Flutter is trying to solve this problem in some ways and has the right backing to be able to pull it off. It unfortunately doesn&#x27;t feel native though (apart from on Android).",
                              "comments": []
                            },
                            {
                              "id": 26316591,
                              "level": 6,
                              "user": "michael1999",
                              "time": 1614700478,
                              "time_ago": "17 hours ago",
                              "content": "<p>Qt and wxWidgets are still out there.  But big money is flowing through the web, so web technologies spread with it.",
                              "comments": [
                                {
                                  "id": 26316704,
                                  "level": 7,
                                  "user": "grishka",
                                  "time": 1614701015,
                                  "time_ago": "17 hours ago",
                                  "content": "<p>Qt still feels not quite right on macOS — because it draws the controls itself instead of using the native ones. wxWidgets is the best of the bunch, because it apparently does wrap AppKit into itself, but then again, the layouts apps use give away that it&#x27;s a cross-platform thing.",
                                  "comments": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": 26314915,
                      "level": 4,
                      "user": "benhurmarcel",
                      "time": 1614690722,
                      "time_ago": "20 hours ago",
                      "content": "<p>Because it works everywhere.",
                      "comments": [
                        {
                          "id": 26315544,
                          "level": 5,
                          "user": "timw4mail",
                          "time": 1614694783,
                          "time_ago": "19 hours ago",
                          "content": "<p>* As long as everywhere is a recent device that can run the latest version of an &quot;evergreen&quot; web browser",
                          "comments": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "id": 26314707,
                  "level": 3,
                  "user": "sjy",
                  "time": 1614689117,
                  "time_ago": "20 hours ago",
                  "content": "<p>&gt; The weakness of CSS is evident by how difficult it has been to properly center something within a container until relatively recently … you can&#x27;t even really just target raw HTML+CSS+JS if you want to deploy something - you need a tool like webpack<p>This stuff was fixed at least 5 years ago. If you can drop support for IE11 (released in 2013 and no longer supported by Office 365), you’ll find that framework-free web development has improved massively since React was first released. And if you keep it simple and rely on what browsers support natively, you can achieve great performance.",
                  "comments": []
                }
              ]
            },
            {
              "id": 26314987,
              "level": 2,
              "user": "lewispollard",
              "time": 1614691271,
              "time_ago": "20 hours ago",
              "content": "<p>You&#x27;d be surprised how many games up until recently used Flash (Scaleform GFx), and now in some cases HTML5 (edit: Coherent GT&#x2F;Hummingbird&#x2F;Gameface) content for game UI.<p>Rendering hundreds or thousands of meshes and doing complicated 3D math for physics is no problem, UI is still extremely hard and complex, especially if you are supporting multiple arbitrary resolutions for example.<p>Godot, for example, has a full UI toolkit built in (the Godot editor was made using Godot components). However to actually get it working the way you want in most cases is a horrendous struggle, a struggle with ratios, screen sizes, minimum and maximum UI control sizes, size&#x2F;growth flags, and before it gets any more complicated please just throw me a Tailwind flex&#x2F;grid box model instead, because HTML&#x2F;CSS has solved these problems repeatedly already.",
              "comments": []
            },
            {
              "id": 26313913,
              "level": 2,
              "user": "arethuza",
              "time": 1614682219,
              "time_ago": "a day ago",
              "content": "<p>VS Code uses Electron and I can&#x27;t say I&#x27;ve noticed any performance problems with it - indeed it is quite a bit faster for me than its native-code relative Visual Studio.<p>So responsive Electron apps are certainly possible.",
              "comments": [
                {
                  "id": 26316112,
                  "level": 3,
                  "user": "robenkleene",
                  "time": 1614698085,
                  "time_ago": "18 hours ago",
                  "content": "<p>I&#x27;m very interested in the general perception of VS Code being fast, because for me it&#x27;s slow enough that it&#x27;s the main reason I use other editors. Here are a couple of examples:<p>1. It takes nine times as long as Vim to open a minified JavaScript file, and then format it with Prettier: <a href=\"https:&#x2F;&#x2F;twitter.com&#x2F;robenkleene&#x2F;status&#x2F;1285631026648276993\" rel=\"nofollow\">https:&#x2F;&#x2F;twitter.com&#x2F;robenkleene&#x2F;status&#x2F;1285631026648276993</a><p>2. It takes 14 times as long to open an empty text file than BBEdit: <a href=\"https:&#x2F;&#x2F;twitter.com&#x2F;robenkleene&#x2F;status&#x2F;1257724392458661889\" rel=\"nofollow\">https:&#x2F;&#x2F;twitter.com&#x2F;robenkleene&#x2F;status&#x2F;1257724392458661889</a><p>Both of the above examples revolve around opening files for the first time, and I suspect a lot of the slowness I perceive is because I open a lot of different projects and source code files when I&#x27;m working, and this is a bad use of VS Code.<p>In practice, VS Code behaves more like a multi-language IDE than a text editor. Slow startup times are generally acceptable in IDEs because you&#x27;re exchanging speed for power. A programmer should ideally be proficient in both an IDE and a text editor, because they&#x27;re tools applicable to different problems. E.g., VS Code is a terrible choice for things like analyzing log output, formatting large files, testing isolated snippets of code, or working on source code files that aren&#x27;t part of the same project. I find this to be a shame because VS Code is flexible enough that it would otherwise be excellent for all of these tasks if it were just more performant for some operations that it struggles with now.",
                  "comments": [
                    {
                      "id": 26316756,
                      "level": 4,
                      "user": "arethuza",
                      "time": 1614701330,
                      "time_ago": "17 hours ago",
                      "content": "<p>Out of interest do you mean starting a new instance of VS Code for those things or using an existing one.<p>I would agree that VS Code isn&#x27;t the fastest thing when the editor is starting up, though I find it fine when started. I pretty much always have VS Code running so I don&#x27;t find this a problem.",
                      "comments": [
                        {
                          "id": 26316859,
                          "level": 5,
                          "user": "robenkleene",
                          "time": 1614701769,
                          "time_ago": "17 hours ago",
                          "content": "<p>VS Code is already running in both examples.<p>A lot of the overhead seems to come from making a new window (even though the app itself is already running), although notably most of the time spent in the Prettier example seems to be spent syntax highlighting the JavaScript. If you want to try a direct comparison of opening a file vs. a window, you can see the difference between opening a new file in an existing window (on Mac, `⌘N` &#x2F; `File &gt; New File`) or new window (on Mac, `⌥⌘N` &#x2F; `File &gt; New Window`). For me the latter is far slower than the former.",
                          "comments": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "id": 26313960,
                  "level": 3,
                  "user": "baybal2",
                  "time": 1614682634,
                  "time_ago": "a day ago",
                  "content": "<p>Vs code is an antiexample here.<p>The whole point for then from the start was to not to repeat the Atom fiasco.<p>The entirety of the project was running around of making Webkit not suck.<p>They spent <i>ennormous</i> effort on that.",
                  "comments": [
                    {
                      "id": 26314013,
                      "level": 4,
                      "user": "e_proxus",
                      "time": 1614683137,
                      "time_ago": "a day ago",
                      "content": "<p>That being said, I immediately notice when switching from Sublime to VS Code. It’s something in the key presses...<p>I think it’s only noticeable if you’ve used a native application for a while. It’s not enough to go from VSC to Sublime and back to VSC again for five minutes. Make an effort to use a native app for a week or a month and then switch back.",
                      "comments": [
                        {
                          "id": 26314286,
                          "level": 5,
                          "user": "disgruntledphd2",
                          "time": 1614685827,
                          "time_ago": "21 hours ago",
                          "content": "<p>I noticed this a bunch when I moved from emacs to Jupyter notebook.<p>Emacs will sometimes become slower (especially remote emacs), but it will always buffer your keypresses and do them in the correct order.<p>Jupyter (for whatever reason), doesn&#x27;t do this with the result that I ended up wanting to create a new code block, but that keypress got lost and then i end up ruining my original code block.<p>I 100% noticed the difference, and it was super frustrating (fortunately I left that job, and have managed to avoid Jupyter in the new gig).",
                          "comments": [
                            {
                              "id": 26314760,
                              "level": 6,
                              "user": "pdimitar",
                              "time": 1614689589,
                              "time_ago": "20 hours ago",
                              "content": "<p>I am using Spacemacs and have spent days trying to make it work faster (I am on macOS). Took a while and some effort but with a few strange tweaks I managed to make it more responsive.<p>Emacs&#x2F;Spacemacs can still be weirdly slow sometimes but UI responsiveness is generally miles ahead of all Electron-based software still.<p>Which makes it even funnier. Emacs is decades old and still uses quite a few ancient techniques that are only hampering it. Even with that, it&#x27;s still so much better in terms of speed! Funny.",
                              "comments": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": 26314032,
                      "level": 4,
                      "user": "schmorptron",
                      "time": 1614683299,
                      "time_ago": "a day ago",
                      "content": "<p>Wait, what is the atom fiasco?",
                      "comments": [
                        {
                          "id": 26314994,
                          "level": 5,
                          "user": "ale_jrb",
                          "time": 1614691294,
                          "time_ago": "20 hours ago",
                          "content": "<p>I feel like fiasco might be overstating it a little, but basically atom is incredibly slow and this is probably the main reason that it never overtook Sublime and friends in the same way the VS Code did.",
                          "comments": []
                        },
                        {
                          "id": 26314354,
                          "level": 5,
                          "user": "foldr",
                          "time": 1614686305,
                          "time_ago": "21 hours ago",
                          "content": "<p>Atom (<a href=\"https:&#x2F;&#x2F;atom.io&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;atom.io&#x2F;</a>) is another Electron-based text editor release by GitHub (before it was acquired by Microsoft). I think it predated VSCode. It certainly had more mindshare in the early days. But whereas VSCode has always been quite snappy, Atom acquired a reputation for poor performance.",
                          "comments": [
                            {
                              "id": 26319030,
                              "level": 6,
                              "user": "WorldMaker",
                              "time": 1614711879,
                              "time_ago": "14 hours ago",
                              "content": "<p>&gt; I think it predated VSCode<p>Yes, and no. They have a really interesting tale of convergent evolution.<p>Atom was the original Electron app (as pointed out Electron was even originally named &quot;atom-shell&quot;), so it predates VSCode as an Electron app. But the extremely performant &quot;Monaco code editor&quot; that VSCode was built on top of (that forms the heart of VSCode) was started at Microsoft years before to be a code editor in parts of the Azure Portal, and also it was the code editor in IE&#x2F;Edge dev tools from as far back as IE 9 or 10 I think it was (up until the Chromium Edge). It wasn&#x27;t packaged into an Electron app until after Atom, but it has an interesting heritage that predates Atom and was built for some of the same reasons that GitHub wanted to build Atom.<p>(ETA: Monaco&#x27;s experience especially in IE Dev Tools and the wild west of minified JS dumps it had to work with from day one in that environment is where a lot of its performance came from that led VSCode to jumping Atom on performance out of the gate.)",
                              "comments": []
                            },
                            {
                              "id": 26314702,
                              "level": 6,
                              "user": "zwirbl",
                              "time": 1614689074,
                              "time_ago": "20 hours ago",
                              "content": "<p>Pretty much like that, I tried Atom once (when I found platform.io and wanted to have a look) and it was just wild how slow it felt. On the upside, it made using those crappy Eclipse forks MCU manufacturers release (like CCC, Dave, etc.) fell a lot less painful",
                              "comments": []
                            },
                            {
                              "id": 26314865,
                              "level": 6,
                              "user": "Rapzid",
                              "time": 1614690295,
                              "time_ago": "20 hours ago",
                              "content": "<p>&gt; another Electron-based text editor<p>Well electron used to be called &quot;atom shell&quot; :)",
                              "comments": [
                                {
                                  "id": 26315480,
                                  "level": 7,
                                  "user": "foldr",
                                  "time": 1614694327,
                                  "time_ago": "19 hours ago",
                                  "content": "<p>Ah good point. I didn&#x27;t know that.",
                                  "comments": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "id": 26314317,
                  "level": 3,
                  "user": "tonyedgecombe",
                  "time": 1614686058,
                  "time_ago": "21 hours ago",
                  "content": "<p>VS Code has a lot of native code and VS is particularly bloated. I&#x27;m not sure this is a good comparison.",
                  "comments": [
                    {
                      "id": 26315451,
                      "level": 4,
                      "user": "sime2009",
                      "time": 1614694168,
                      "time_ago": "19 hours ago",
                      "content": "<p>VS Code has very little native code outside Electron itself.",
                      "comments": [
                        {
                          "id": 26319145,
                          "level": 5,
                          "user": "WorldMaker",
                          "time": 1614712466,
                          "time_ago": "14 hours ago",
                          "content": "<p>Depends on which languages you work with. Many language servers are written in their own languages so it is possible to work with a lot of native code when using VS Code day to day even if most of VS Code itself isn&#x27;t native code.<p>VS Code also used to have far more native code earlier on in its development life, but seems to be transitioning a lot of it to WASM (paralleling the Node ecosystem as a whole moving a lot of performance heavy stuff from native NAPI plugins to WASM boxes; as one example: the major source maps support library moved from JS native to Rust to WASM compiled from Rust, IIRC).",
                          "comments": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "id": 26314867,
              "level": 2,
              "user": "moron4hire",
              "time": 1614690308,
              "time_ago": "20 hours ago",
              "content": "<p>I&#x27;ve started noticing a weird counter effect. If you make a web app that is snappy and responsive, people just assume your app is trivial. Users have effectively been trained into thinking things like list pagination are &quot;difficult&quot; operations.",
              "comments": [
                {
                  "id": 26325217,
                  "level": 3,
                  "user": "sidpatil",
                  "time": 1614750348,
                  "time_ago": "3 hours ago",
                  "content": "<p>Maybe that&#x27;s like the tech equivalent of enjoying a loud vehicle because it sounds more powerful than a quieter one. (In reality, the quieter one is more efficient than the louder one.)",
                  "comments": []
                }
              ]
            }
          ]
        },
        {
          "id": 26316382,
          "level": 1,
          "user": "snake_case",
          "time": 1614699542,
          "time_ago": "17 hours ago",
          "content": "<p>I agree that the web is generally more bloated and slow than native apps. However, native apps don&#x27;t magically become performant by being native.<p>As an example, my grandmother-in-law has been putting up with Microsoft Jigsaw&#x27;s desktop app for years. Last time I watched her load it, we sat there for awhile and had to restart multiple times because it was getting stuck loading some advertisements. The startup time was absolutely brutal and the run-time performance while playing wasn&#x27;t great either, even with a decent laptop.<p>So when I saw how slow, bloated and laggy this app was, I wanted to try to make her a better jigsaw app for the web and I think I succeeded [1]. It loads almost instantly, has no advertisements, and feels super smooth while playing... and it&#x27;s mostly just js, svelte and a little bit of Rust WASM.<p>Anyway, I do prefer a good native app over a web app when available. But with native apps, it&#x27;s also harder to block ads and other trackers compared to the web.<p>[1]: <a href=\"https:&#x2F;&#x2F;puzzlepanda.com\" rel=\"nofollow\">https:&#x2F;&#x2F;puzzlepanda.com</a>",
          "comments": [
            {
              "id": 26318770,
              "level": 2,
              "user": "pdimitar",
              "time": 1614710584,
              "time_ago": "14 hours ago",
              "content": "<p>Sure, I&#x27;m not denying it. It&#x27;s just that apparently it&#x27;s very easy to produce slow-as-molasses UI with JS.<p>I&#x27;ve been working with the horrors called Windows MFC and Java Swing a long time ago. It was tough but if you did it right (moderately hard) you had a very snappy app on a computer that was 5x slower and had 10x less RAM than a midrange today&#x27;s Android device.",
              "comments": [
                {
                  "id": 26318977,
                  "level": 3,
                  "user": "snake_case",
                  "time": 1614711620,
                  "time_ago": "14 hours ago",
                  "content": "<p>You&#x27;re exactly right! Building a slow web app is only one npm install away.<p>It takes someone who really cares about performance and monitors it to make a fast web app and to keep it that way. Unfortunately it&#x27;s still too easy to accidentally make it slow.",
                  "comments": []
                }
              ]
            },
            {
              "id": 26319347,
              "level": 2,
              "user": "WorldMaker",
              "time": 1614713355,
              "time_ago": "13 hours ago",
              "content": "<p>Microsoft probably should revoke Arkadium&#x27;s right to use their brand name. Arkadium&#x27;s worst of the worst ads and microtransactions, much less their poor attention to performance detail, really are making Microsoft look bad to a lot of users that just want to play Solitaire&#x2F;Minesweeper&#x2F;Jigsaw sometimes.<p>Especially after the walkbacks that Xbox Game Studios had to do after flak about scummy microtransactions in Halo, Gears, and Forza, it still seems incredible that Microsoft continues to allow Arkadium to do it to a far bigger audience (and a lot of people&#x27;s parents and grandparents especially) with their brand name attached to it.",
              "comments": []
            },
            {
              "id": 26318976,
              "level": 2,
              "user": "bochoh",
              "time": 1614711617,
              "time_ago": "14 hours ago",
              "content": "<p>I had a chance to play the demo round and it was extremely performant - well done. The only thing I&#x27;m not sure about is that on the first click of each piece it automatically orients itself to the final orientation as expected by the puzzle. Is this an &quot;Easy &#x2F; Medium &#x2F; Hard&quot; setting? Otherwise great!",
              "comments": [
                {
                  "id": 26319020,
                  "level": 3,
                  "user": "snake_case",
                  "time": 1614711811,
                  "time_ago": "14 hours ago",
                  "content": "<p>Thanks for trying it out!<p>Yupp, it&#x27;s on my todo list to give users the option on how difficult they want the rotation to be. So far I have users that want click-to-rotate and even no rotation at all.",
                  "comments": []
                }
              ]
            }
          ]
        },
        {
          "id": 26314642,
          "level": 1,
          "user": "__s",
          "time": 1614688573,
          "time_ago": "20 hours ago",
          "content": "<p>I don&#x27;t think young JS devs know nothing else. There are still good programs out there, &amp; you only need to experience it once<p>I get annoyed with Windows having the cursor randomly stutter for a split second rather than smooth motion. Or Teams taking half a second to load the conversation I clicked on. Or Powershell taking 3 seconds between initial render &amp; giving me a damn prompt. Or the delay between me pressing the Windows button &amp; the start menu appearing. None of these delays exist on my Linux machine where I&#x27;ve had the freedom to select the programs I use<p>I&#x27;ve made fast UIs with Javascript &amp; React. Like all optimization it comes down to sitting down &amp; profiling. Not taking &quot;this is as fast it it can be&quot; as an answer. In short, saying &quot;Javascript is just slow&quot; is part of the problem<p>Blaming languages is chasing a fad. I deal with it when people think the service I&#x27;m working on in Ruby is going to be slow because Ruby is slow. Nope, architectures are slow. If you know what you&#x27;re doing Ruby will do just fine at doing nothing, which is really the trick behind speed",
          "comments": [
            {
              "id": 26314847,
              "level": 2,
              "user": "pdimitar",
              "time": 1614690144,
              "time_ago": "20 hours ago",
              "content": "<p>While what you say is fair, let me introduce an additional nuance:<p>Languages like JS and Ruby make it easier to write slower code (and harder to detect that you&#x27;re doing it) by the virtue of how their ecosystem and culture turned out with time.<p>I stood behind the romantic statement of &quot;you are holding it wrong&quot; when I was younger but nowadays it seems to me that the languages live and die by the culture of their communities. It rarely if ever matters if the language itself can be better &#x2F; faster.<p>So while I agree JS&#x2F;Ruby might have undeserved reputation for being slow, I think you should also agree that they are easy targets because observably a lot of software written with them is in fact slow.<p>I am looking at it empirically &#x2F; historically while you are postulating a theoretical construct. I don&#x27;t disagree with you per se but prefer to work with the reality that&#x27;s in front of me.<p>---<p>That being said, kudos for being the exception in the group of the JS devs! The web frontend industry needs much more people like yourself. Keep up the good work. &lt;3",
              "comments": []
            },
            {
              "id": 26324617,
              "level": 2,
              "user": "tamrix",
              "time": 1614744380,
              "time_ago": "5 hours ago",
              "content": "<p>Your windows cursor shouldn&#x27;t stutter unless you have io interupt problems, bad drivers etc.",
              "comments": []
            }
          ]
        },
        {
          "id": 26315927,
          "level": 1,
          "user": "bluejekyll",
          "time": 1614696948,
          "time_ago": "18 hours ago",
          "content": "<p>While I agree with you, there’s a reason the current application environments are targeting web rendering engines, it’s cheaper for development. Why develop 3-4 different applications when you can develop 1 with hardly any extra effort?<p>Chromium is a huge boon to developers for this reason. Now there could have been a different history here. Apple after acquiring NeXT had also gotten OpenStep, <a href=\"https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;OpenStep\" rel=\"nofollow\">https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;OpenStep</a> . OpenStep was a cross platform UI development kit, even the web could be a target. Apple decided (possibly for good reasons, hard to argue with success) to kill this off. But, they had toyed with it, <a href=\"https:&#x2F;&#x2F;www.macrumors.com&#x2F;2007&#x2F;06&#x2F;14&#x2F;yellow-box-seems-to-exist-but-only-for-apples-use&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.macrumors.com&#x2F;2007&#x2F;06&#x2F;14&#x2F;yellow-box-seems-to-exi...</a> . So, Apple had effectively what Chromium has become. A cross-platform development and runtime environment.<p>Would things be different today if that wasn’t killed off? Would Apple have never come back from the brink of death to become the behemoth it is today, because it would have starved its own platforms? One thing you might have had is a cross-platform “native” UI platform, and that might have meant faster more efficient UIs like you want now.<p>Shoutout to GNUStep trying to keep the dream alive: <a href=\"https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;GNUstep\" rel=\"nofollow\">https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;GNUstep</a><p>Follow up question: maybe with Apple being so successful, now they could revive this and make it profitable for themselves, rather than starving their own platforms?",
          "comments": [
            {
              "id": 26316396,
              "level": 2,
              "user": "ip26",
              "time": 1614699615,
              "time_ago": "17 hours ago",
              "content": "<p>The good news is this means if we make browsers &amp; JS rendering faster, everything gets faster.<p>The bad news is that doesn&#x27;t seem likely to happen.",
              "comments": []
            }
          ]
        },
        {
          "id": 26313907,
          "level": 1,
          "user": "C19is20",
          "time": 1614682133,
          "time_ago": "a day ago",
          "content": "<p>I would say that those &#x27;that don&#x27;t notice certain slowdowns&#x27;, sadly, may never have experienced anything but slowed down systems.",
          "comments": [
            {
              "id": 26314041,
              "level": 2,
              "user": "grishka",
              "time": 1614683419,
              "time_ago": "a day ago",
              "content": "<p>I mean there&#x27;s now also an entire generation that has never seen the beautiful non-commercialized internet I miss so dearly.<p>Meanwhile, here I am, making a decentralized social media server and being afraid to add an extra &lt;div&gt; lest it bloats the page.",
              "comments": []
            },
            {
              "id": 26313925,
              "level": 2,
              "user": "pdimitar",
              "time": 1614682315,
              "time_ago": "a day ago",
              "content": "<p>I know right? Learned helplessness.",
              "comments": []
            },
            {
              "id": 26314596,
              "level": 2,
              "user": "why_Mr_Anderson",
              "time": 1614688238,
              "time_ago": "20 hours ago",
              "content": "<p>Long time ago I worked at a hospital and once had to go to a certain department to fix something on computer nurses were using and was horrified how slow the computer and everything was. So I asked around and ladies happily explained their daily morning routine:\n- turn on computer\n- do a morning checkup of all patients (around 20 minutes)\n- when they got back, computer usually finished starting Windows, if not, they waited another 10+ minutes for it to get ready\n- then they started Word (another 10 minutes)\n- and opened their main document with notes..or to be exact wanted to open the document. That took another 10 minutes<p>TL;DR - users can get used to pretty much anything because they don&#x27;t know it could be so much better",
              "comments": [
                {
                  "id": 26314955,
                  "level": 3,
                  "user": "benhurmarcel",
                  "time": 1614691055,
                  "time_ago": "20 hours ago",
                  "content": "<p>They also don&#x27;t have a choice.<p>My company, like many, bloats Windows with security software. We have the type of PC where McAfee uses 80% of resources for an hour every Monday morning. PCs with spinning hard drives take a good 15-20 minutes to fully boot, and some engineers still have those. Those who complain just get told to wait a few years for their planned laptop replacement, to finally get an SSD.<p>There&#x27;s no solution, so users just cope.",
                  "comments": []
                }
              ]
            }
          ]
        },
        {
          "id": 26314998,
          "level": 1,
          "user": "npteljes",
          "time": 1614691333,
          "time_ago": "20 hours ago",
          "content": "<p>Absolutely agree and I loathe the modern UI with passion, for the speed alone. I recently booted up a single-core 900 mhz desktop PC with Windows XP, and it was so fast to respond that it felt like it knew what I wanted even before I pressed the button. Inspiringly smooth man-machine synergy that is rare to come by these days. I&#x27;m an old man yelling at cloud.",
          "comments": [
            {
              "id": 26318687,
              "level": 2,
              "user": "hypertele-Xii",
              "time": 1614710189,
              "time_ago": "14 hours ago",
              "content": "<p>I recently booted an old single-core PC with the latest version of Ubuntu. It ran like a glacier. Every single click took a minimum of 30 seconds to have effect.",
              "comments": []
            },
            {
              "id": 26315112,
              "level": 2,
              "user": "pdimitar",
              "time": 1614692142,
              "time_ago": "19 hours ago",
              "content": "<p>And then you have the Apple II computers where the only bottleneck was the diskette drive speed. Stuff was just <i>instant</i> with almost everything you were doing.",
              "comments": []
            }
          ]
        },
        {
          "id": 26314533,
          "level": 1,
          "user": "kesor",
          "time": 1614687759,
          "time_ago": "21 hours ago",
          "content": "<p>That is because they do inject a delay.<p><a href=\"https:&#x2F;&#x2F;apple.stackexchange.com&#x2F;questions&#x2F;17929&#x2F;how-can-i-disable-animation-when-switching-desktops-in-lion\" rel=\"nofollow\">https:&#x2F;&#x2F;apple.stackexchange.com&#x2F;questions&#x2F;17929&#x2F;how-can-i-di...</a><p><a href=\"https:&#x2F;&#x2F;superuser.com&#x2F;questions&#x2F;455313&#x2F;disable-os-x-enter-full-screen-animation\" rel=\"nofollow\">https:&#x2F;&#x2F;superuser.com&#x2F;questions&#x2F;455313&#x2F;disable-os-x-enter-fu...</a><p>It looks &quot;pretty&quot; to the UI people.",
          "comments": [
            {
              "id": 26314649,
              "level": 2,
              "user": "z92",
              "time": 1614688602,
              "time_ago": "20 hours ago",
              "content": "<p>Anybody else remember the speedup loop.<p><a href=\"https:&#x2F;&#x2F;thedailywtf.com&#x2F;articles&#x2F;The-Speedup-Loop\" rel=\"nofollow\">https:&#x2F;&#x2F;thedailywtf.com&#x2F;articles&#x2F;The-Speedup-Loop</a><p>tl;dr : programmer inserts a large empty loop in a UI, so that in weeks when he achieves nothing, he removes a single zero from the end of the loop counter to speed up things a bit.",
              "comments": [
                {
                  "id": 26314833,
                  "level": 3,
                  "user": "rbanffy",
                  "time": 1614690048,
                  "time_ago": "20 hours ago",
                  "content": "<p>I would expect the compiler to get rid of that loop.",
                  "comments": [
                    {
                      "id": 26319563,
                      "level": 4,
                      "user": "bee_rider",
                      "time": 1614714220,
                      "time_ago": "13 hours ago",
                      "content": "<p>The story is from 1990. Nowadays you would probably have to be a little bit more clever. Maybe toss in a volatile variable?",
                      "comments": [
                        {
                          "id": 26321732,
                          "level": 5,
                          "user": "rbanffy",
                          "time": 1614723157,
                          "time_ago": "11 hours ago",
                          "content": "<p>In pretty sure 1990&#x27;s compilers would do that.",
                          "comments": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "id": 26315910,
              "level": 2,
              "user": "schnable",
              "time": 1614696843,
              "time_ago": "18 hours ago",
              "content": "<p>Reminds me of an old job writing Windows desktop software. Our flagship app was big and bloated, and it had a long load time with a nice splash screen to distract the user.<p>We later created a light version for a specific use case, and the product owner came prepared with a nice splash screen for this one too. The app was so lightweight that it loaded near instantaneously - so the engineer added a six second delay just to meet the splash screen requirement.",
              "comments": []
            },
            {
              "id": 26314561,
              "level": 2,
              "user": "HenryBemis",
              "time": 1614688003,
              "time_ago": "20 hours ago",
              "content": "<p>&gt; It looks &quot;pretty&quot; to the UI people.<p>Buys them time to get stuff done under the hood while you are gazing upon the &#x27;sands of time&#x27; (good old Windows hourglass).<p>It conditions you&#x2F;me&#x2F;everyone to be impatient. I opt out of all such transition effects on my phone. I prefer that the screen goes black of freezes until the next screen comes up. This way I don&#x27;t get distracted by irrelevant junk (spinning wheels, hourglasses, etc.). It is crunching bits. Don&#x27;t add more junk to it. Let it crunch bits without tricking me.",
              "comments": []
            }
          ]
        },
        {
          "id": 26317787,
          "level": 1,
          "user": "veesahni",
          "time": 1614706085,
          "time_ago": "15 hours ago",
          "content": "<p>Totally feel your pain here. I think a lot of has to do with current JS tech- React, by design, trades off performance for developer efficiency.<p>I&#x27;m sensitive to latency.. first thing I do when I setup a new android phone is go into the developer settings and speed up all animations.<p>For our own company [0], we also treat speed as a top feature, though it&#x27;s not something that&#x27;s easily to market.  It&#x27;s something that power users appreciate.  I even wrote a similar blog post [1] to this.  The magic number, from what I&#x27;ve found, is 100ms.  If you can respond to a user action in 100ms, it feels instant to the user.<p>0: <a href=\"https:&#x2F;&#x2F;www.enchant.com\" rel=\"nofollow\">https:&#x2F;&#x2F;www.enchant.com</a><p>1: <a href=\"https:&#x2F;&#x2F;www.enchant.com&#x2F;speed-is-a-feature\" rel=\"nofollow\">https:&#x2F;&#x2F;www.enchant.com&#x2F;speed-is-a-feature</a>",
          "comments": [
            {
              "id": 26318195,
              "level": 2,
              "user": "pdimitar",
              "time": 1614708008,
              "time_ago": "15 hours ago",
              "content": "<p>Sounds like a good company to work in! :)<p>I would immediately apply but I&#x27;m not interested in Ruby or HTML&#x2F;CSS anymore (although I still know the last two rather well and plan on making a return there to author my own blog theme).<p>Main focus are Elixir and Rust -- the latter exactly because I want to make efficient and ultra-fast software. Also very invested and averagely skilled in DevOps &#x2F; sysadmin activities.<p>I hope there are more companies like yours out there -- and that yours is thriving!",
              "comments": []
            }
          ]
        },
        {
          "id": 26313908,
          "level": 1,
          "user": "throwaway81523",
          "time": 1614682138,
          "time_ago": "a day ago",
          "content": "<p>I&#x27;ve been convinced for a while that the only sane way to develop any gui app (including web apps) is have game developers in charge.  They know how to make stuff run fast, or at least interact snappily.",
          "comments": [
            {
              "id": 26314509,
              "level": 2,
              "user": "reader_mode",
              "time": 1614687556,
              "time_ago": "21 hours ago",
              "content": "<p>If you want buggy crap that&#x27;s impossible to maintain filled with hacks to make something look like it works - game developers are the right choice. The requirements and practices in that industry are not comparable to standard app development and you would <i>not</i> want anything to do with that for app development.<p>People here crying about load times and FPS rendering are completely out of touch with reality of SW development - getting stuff to function correctly and reliably with requirements constantly changing &gt; performance, and that&#x27;s hard enough with tools that simplify SW development. Optimising for performance is a luxury very few can afford.",
              "comments": [
                {
                  "id": 26314604,
                  "level": 3,
                  "user": "AnIdiotOnTheNet",
                  "time": 1614688285,
                  "time_ago": "20 hours ago",
                  "content": "<p>&gt; getting stuff to function correctly and reliably<p>Hilariously, I wouldn&#x27;t even say that modern software does that well either.",
                  "comments": [
                    {
                      "id": 26314677,
                      "level": 4,
                      "user": "reader_mode",
                      "time": 1614688896,
                      "time_ago": "20 hours ago",
                      "content": "<p>But that&#x27;s my point - it&#x27;s hard just getting it to work. Getting it to work fast is next level. Games are notorious for garbage tier SW engineering practices, bugs, ship and forget, and it&#x27;s all about making something look like you&#x27;d expect it vs. making it correct - just completely different goals.",
                      "comments": [
                        {
                          "id": 26318068,
                          "level": 5,
                          "user": "hnuser123456",
                          "time": 1614707441,
                          "time_ago": "15 hours ago",
                          "content": "<p>Half-life 2 is possibly one of the most impressive, in terms of combination of complexity, stability, flexibility and extensibility, pieces of software ever created. It spawned dozens of other games that all sold millions of copies and offered completely different but high-quality experiences. Sure, your typical AAA game isn&#x27;t near this level of perfection, but your typical non-game software is hardly any better.",
                          "comments": [
                            {
                              "id": 26322935,
                              "level": 6,
                              "user": "kaba0",
                              "time": 1614729343,
                              "time_ago": "9 hours ago",
                              "content": "<p>I like hl2 and all, but I doubt it would be even close in complexity to a web browser&#x2F;OS kernel&#x2F;good performing virtual runtime, like the JVM, compilers. \nThere are insanely complex programs out there.",
                              "comments": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "id": 26322689,
                  "level": 3,
                  "user": "throwaway7644",
                  "time": 1614727867,
                  "time_ago": "9 hours ago",
                  "content": "<p>What you are describing is a false dilemma, believe it or not, it is possible to have both performance, maintainability and correctness.<p>To have performance, you have to understand the data you are working with and how it can transformed efficiently by your hardware. To have maintainability you have to create good abstraction around how you transform your data. To have correctness you have to implement and composite those data transformation in a meaningful way.<p>All of those things are orthogonal.",
                  "comments": []
                }
              ]
            },
            {
              "id": 26314077,
              "level": 2,
              "user": "skohan",
              "time": 1614683848,
              "time_ago": "a day ago",
              "content": "<p>I think this is actually something which Apple has done a fairly good job of.  I remember even back in 2009 in the early iPhone days, the Cocoa API&#x27;s were fairly well designed in terms of letting you create responsive, non-blocking UIs on hardware an order of magnitude slower than what we have today.<p>Game engineers are wizards, but real general-purpose UI is a different problem than they are generally solving.  A game UI is typically very limited in terms of what types of information has to be displayed and how.  Many applications have to support what is essentially arbitrary 2D content which has to be laid out dynamically at runtime, and this is something different than the problems most games have to solve.",
              "comments": [
                {
                  "id": 26318710,
                  "level": 3,
                  "user": "hypertele-Xii",
                  "time": 1614710323,
                  "time_ago": "14 hours ago",
                  "content": "<p>&gt; Many applications have to support what is essentially arbitrary 2D content which has to be laid out dynamically at runtime, and this is something different than the problems most games have to solve.<p>That sounds <i>exactly</i> like the problem most games have to solve. The age of fixed CPU speeds and screen resolutions is long gone. Games have to content with a plethora of dimensions along which to represent an interactive, dynamic, multimedia world.",
                  "comments": [
                    {
                      "id": 26322965,
                      "level": 4,
                      "user": "kaba0",
                      "time": 1614729563,
                      "time_ago": "9 hours ago",
                      "content": "<p>I think OP meant it more in terms of layouting, like vbox can be inside a hbox which has also a text object, and every object can change sizes which will cause a recalculation in everything. It is surprisingly more expensive than the GPU accelerated rendering of many many triangles. \nGames are complex, but the dimensions question is trivial there.",
                      "comments": []
                    }
                  ]
                }
              ]
            },
            {
              "id": 26314062,
              "level": 2,
              "user": "chromanoid",
              "time": 1614683691,
              "time_ago": "a day ago",
              "content": "<p>Yeah, totally :D <a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=26296339\" rel=\"nofollow\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=26296339</a><p>Most game developers will make it as fast as they have to... in fact most developers do that.<p>Games are usually developed as abandonware. Do you want your apps to be developed as abandonware?",
              "comments": []
            },
            {
              "id": 26314215,
              "level": 2,
              "user": "medstrom",
              "time": 1614685221,
              "time_ago": "21 hours ago",
              "content": "<p>I disagree: think of how long it takes to bring up the PipBoy in Fallout 3. Or to open a door in Mass Effect. The amount of times I&#x27;ve had my character just be running into the door for multiple seconds before it finally opens...",
              "comments": []
            },
            {
              "id": 26316766,
              "level": 2,
              "user": "lfowles",
              "time": 1614701373,
              "time_ago": "17 hours ago",
              "content": "<p>And then they just end up using a middleware like Coherent[0] which is back to HTML+CSS!<p><a href=\"https:&#x2F;&#x2F;coherent-labs.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;coherent-labs.com&#x2F;</a>",
              "comments": []
            }
          ]
        },
        {
          "id": 26315268,
          "level": 1,
          "user": "justin66",
          "time": 1614693022,
          "time_ago": "19 hours ago",
          "content": "<p>&gt; This might be because I am a former semi-pro Quake3 player but these days I grind my teeth with 95% of all software.<p>Not really. I&#x27;m sure plenty of people remember the quick feel of early PC UIs. Ironically, q3 kind of came at the end of that era.<p>Some of the same people might even remember when, with a little training, voice recognition software could do its thing without an internet connection and a warehouse full of computers at the other end, on a PC with less RAM than the framebuffer of a modern PC or phone...",
          "comments": []
        },
        {
          "id": 26317001,
          "level": 1,
          "user": "DennisP",
          "time": 1614702417,
          "time_ago": "16 hours ago",
          "content": "<p>Back in the early &#x27;90s my dad and I used to say in a few decades we&#x27;d all have supercomputers on our desks. Now by those standards we do, and everything is still freakin slow. This is not the future we were dreaming about.",
          "comments": [
            {
              "id": 26317204,
              "level": 2,
              "user": "bmeski",
              "time": 1614703440,
              "time_ago": "16 hours ago",
              "content": "<p>It&#x27;s because we let the product people in.",
              "comments": [
                {
                  "id": 26318716,
                  "level": 3,
                  "user": "pdimitar",
                  "time": 1614710339,
                  "time_ago": "14 hours ago",
                  "content": "<p>They forced themselves in, mostly.",
                  "comments": []
                }
              ]
            }
          ]
        },
        {
          "id": 26317590,
          "level": 1,
          "user": "myth2018",
          "time": 1614705232,
          "time_ago": "16 hours ago",
          "content": "<p>&gt; We need to get back to native UIs. Is it awfully hard? Yes it is. Do the users care? No, they don&#x27;t. Many people want fast UIs.<p>I wouldn&#x27;t say native UIs necessarily, IMO, but I definitely agree that something has to change.<p>Current systems are not only getting slower and less useful, but they&#x27;re also getting harder to develop, test and maintain as well -- and, consequently, buggier.<p>The fact that there still are many old, TUI-based systems out there AND that users favor them over the newer ones exposes a lesson we&#x27;ve been insisting on overlooking.",
          "comments": [
            {
              "id": 26318619,
              "level": 2,
              "user": "pdimitar",
              "time": 1614709863,
              "time_ago": "14 hours ago",
              "content": "<p>You are correct, it doesn&#x27;t matter how will the improvement happen as long as it does happen.<p>If Electron is rewritten in C &#x2F; Zig &#x2F; Rust &#x2F; whatever and becomes much more lightweight then I&#x27;ll be on board about using it myself.<p>But the abusive relationship between today&#x27;s software and what is essentially supercomputers has to be ended and started anew on a more respectful foot.",
              "comments": [
                {
                  "id": 26323034,
                  "level": 3,
                  "user": "kaba0",
                  "time": 1614730026,
                  "time_ago": "9 hours ago",
                  "content": "<p>The problem with electron is not the implementation - after all it is a bundled web browser and those are really really performant and written in C++. They pretty much make displaying a HTML document with complex CSS and running JavaScript as fast as possible (or at least close to it)<p>The problem is the abstraction level, instead of a locally running program manipulating objects that are turned into render instructions basically in a one-to-one fashion, there is a whole added indirection with generating and parsing HTML and then converting the dynamically created DOM into renderable elements.",
                  "comments": []
                }
              ]
            },
            {
              "id": 26317645,
              "level": 2,
              "user": "Shared404",
              "time": 1614705442,
              "time_ago": "16 hours ago",
              "content": "<p>Add that to the fact that it&#x27;s reasonably simple to make a cross platform TUI, and I think you&#x27;re on to something there. I&#x27;m ready to move forward to TUI&#x27;s over the terrible GUI&#x27;s we&#x27;re all stuck with.",
              "comments": [
                {
                  "id": 26322078,
                  "level": 3,
                  "user": "myth2018",
                  "time": 1614724652,
                  "time_ago": "10 hours ago",
                  "content": "<p>Indeed, and this &quot;back to the TUI&quot; I advocate isn&#x27;t restricted to developer tools. I actually think of such replacement with end users in mind.<p>Maybe not necessarily something as radical as terminals, but anything providing the same programming ergonomics (in order to be easy to build and maintain) and constrained by the same restrictions (so that functional requirements get tamed).<p>At first, it would definitely sound as an involution, but I feel somehow confident that the market in general will accept such constraints as soon as the results become evident.",
                  "comments": [
                    {
                      "id": 26324648,
                      "level": 4,
                      "user": "Shared404",
                      "time": 1614744593,
                      "time_ago": "5 hours ago",
                      "content": "<p>I agree completely. As long as displaying faithful image&#x2F;video isn&#x27;t a constraint, I don&#x27;t see any reason why a TUI&#x2F;similar would not be acceptable for any given task, after the user gets over the &quot;text is scary&quot; stage.",
                      "comments": []
                    }
                  ]
                },
                {
                  "id": 26318580,
                  "level": 3,
                  "user": "pdimitar",
                  "time": 1614709679,
                  "time_ago": "14 hours ago",
                  "content": "<p>I&#x27;m doing that lately -- very gradually and slowly, but I&#x27;m doing it.<p>I&#x27;ve had enough of today&#x27;s slow buggy messes that require gigabytes of memory and two CPU cores to show me a splash screen for 10 seconds.<p>A lot of the TUI apps I stumbled upon seem really well-done.",
                  "comments": [
                    {
                      "id": 26321298,
                      "level": 4,
                      "user": "Shared404",
                      "time": 1614721445,
                      "time_ago": "11 hours ago",
                      "content": "<p>Out of curiosity, do you have a list? I&#x27;m always looking for good replacements.<p>I&#x27;m currently using nvlc and cmus for music playback, and then of course your standard complement of text editors etc. I like Lynx et al. for <i>some</i> web browsing, but compatibility is a pain.",
                      "comments": [
                        {
                          "id": 26321657,
                          "level": 5,
                          "user": "pdimitar",
                          "time": 1614722789,
                          "time_ago": "11 hours ago",
                          "content": "<p>I just started like 6 months ago but...<p>- `lazygit` is extremely valuable.<p>- `lnav` for inspecting log files has turned out to be surprisingly good.<p>- Do you use `fzf` in tandem with your shell so you can also search your command history (and not just look for files)? I use that for like a year now and can&#x27;t live without it.<p>- `mc` for TUI file management has been moderately alright.<p>- How about `ripgrep`? Can&#x27;t believe I lived without that one too.<p>- Rust&#x27;s tool `skim` (the command is `sk`) in tandem with `ripgrep` or `the_silver_searcher` to very quickly search in file contents in big directories has saved me a ton of time already (although I moved to search file contents in projects in Emacs since). To be fair, you can just use `fzf` instead of `sk` here though; I am just positively biased towards Rust.<p>- `ripgrep_all` allows you to search in ZIP archives, PDF docs, Office docs&#x2F;spreadsheets etc. Really useful.<p>- `ht` is a Rust rewrite of `httpie`, the Python friendlier `curl`. I like `ht` much more because it doesn&#x27;t incur any startup overhead and started replacing my scraping &#x2F; syncing scripts with `ht` where applicable which is NOT everywhere because `curl` is extremely powerful and it doesn&#x27;t often make sense to replace it.<p>- Command-line or in-terminal charting&#x2F;plotting: `jp`. I have made a CSV file out of all file sizes on my NAS (bucketed by powers of 2) and then invoked it on the input. Here&#x27;s a sample CSV from a random directory:<p>0k,79<p>1k,6<p>2k,1<p>4k,166<p>8k,34<p>16k,7<p>32k,6<p>64k,3<p>128k,27<p>256k,2<p>512k,2<p>1M,3<p>2M,4<p>4M,8<p>8M,10<p>16M,135<p>Then do this:<p>`cat THIS_FILE.csv | jp -input csv -xy &#x27;[*][0,1]&#x27; -type bar -height 57`<p>And enjoy an in-terminal vertical bar charts. :)<p>- ...And I have a ton more.<p>But your question makes me sigh. I really have to start a blog. I am a very practical guy and people usually love my posts (scattered on different forums) where I make such lists. I should roll my own blog static web site generator in Rust I suppose, because the existing ones are either slow or don&#x27;t support what I need... So, not going to happen in the next year, most likely. :(",
                          "comments": [
                            {
                              "id": 26323148,
                              "level": 6,
                              "user": "Shared404",
                              "time": 1614731006,
                              "time_ago": "9 hours ago",
                              "content": "<p>I&#x27;ll have to try some of those out. I&#x27;ve used fzf a little, but haven&#x27;t really looked at it enough to get the full productivity gains. I&#x27;ve heard of rg ofc, but ripgrep_all has flown under my radar thus far, and actually sounds <i>amazing</i>, I&#x27;ve got a decently large library of pdf&#x27;s I keep losing stuff in.<p>The rest I haven&#x27;t looked at, but will have to add to my list, they fill a couple voids I&#x27;ve been feeling.<p>&gt;  I should roll my own blog static web site generator in Rust I suppose, because the existing ones are either slow or don&#x27;t support what I need... So, not going to happen in the next year, most likely. :(<p>It isn&#x27;t powerful enough to support what you need I&#x27;m sure, but I actually did something similar a little while ago.<p><a href=\"http:&#x2F;&#x2F;a-shared-404.com&#x2F;programs&#x2F;\" rel=\"nofollow\">http:&#x2F;&#x2F;a-shared-404.com&#x2F;programs&#x2F;</a><p>It&#x27;s written in Rust, with dependencies on sh and markdown. I&#x27;m thinking about adding the ability to automatically execute an (optional) shell script in each directory, so that it would be easier to do things that markdown doesn&#x27;t.<p>The code quality is <i>atrocious</i> (first Rust program of any size, and I&#x27;m not great at programming in the first place), but it may be useful. If you&#x27;re interested in me adding that functionality, let me know, it may be the push I need to move it to the top of my pile.",
                              "comments": [
                                {
                                  "id": 26325570,
                                  "level": 7,
                                  "user": "pdimitar",
                                  "time": 1614755115,
                                  "time_ago": "2 hours ago",
                                  "content": "<p>The `sssss` program might have a potential. But let me give you an example: I want my every blog article to also have versions &#x2F; revisions and I&#x27;d like visitors to be able to read the older versions as well as the last version.<p>I&#x27;d also like multilingual article ability (but I think some of the engines out there can do that). The more I think of it, the more I wonder if it should be something like Ghost.org: namely backed by sqlite and not naked files. But who knows.",
                                  "comments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "id": 26323519,
                          "level": 5,
                          "user": "oftenwrong",
                          "time": 1614734390,
                          "time_ago": "8 hours ago",
                          "content": "<p><a href=\"https:&#x2F;&#x2F;github.com&#x2F;rothgar&#x2F;awesome-tuis\" rel=\"nofollow\">https:&#x2F;&#x2F;github.com&#x2F;rothgar&#x2F;awesome-tuis</a>",
                          "comments": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "id": 26316794,
          "level": 1,
          "user": "ridethebike",
          "time": 1614701494,
          "time_ago": "17 hours ago",
          "content": "<p>I know right, these days I just open browser with Gmail and youtube home page (not even watching a video) and do nothing - 10%+ CPU utilization (i7, 8 cores).\nStart serfing the web - laptop fans go into overdrive.\nIt&#x27;s almost like how much $ and how many cores needed to render bunch of text and images without lagging.\nAnd that&#x27;s my home pc, it&#x27;s blazingly fast compared to one in office with internal enterprise software installed on it.",
          "comments": [
            {
              "id": 26318752,
              "level": 2,
              "user": "hypertele-Xii",
              "time": 1614710481,
              "time_ago": "14 hours ago",
              "content": "<p>What&#x27;s absolutely mind-boggling to me is that <i>moving my mouse consumes 10% of CPU.</i> I fought tooth and nail to keep my PS2 ports, but everything&#x27;s USB now. And apparently USB consumes 10% CPU to read mouse movements.",
              "comments": []
            },
            {
              "id": 26316920,
              "level": 2,
              "user": "jeffbee",
              "time": 1614702040,
              "time_ago": "17 hours ago",
              "content": "<p>There&#x27;s something wrong with your PC because nobody will be able to reproduce this result.",
              "comments": [
                {
                  "id": 26317889,
                  "level": 3,
                  "user": "hnuser123456",
                  "time": 1614706591,
                  "time_ago": "15 hours ago",
                  "content": "<p>Opened Chrome, opened gmail and youtube, nonstop 25% CPU usage, fans ramped to 4000+RPM, closed chrome, 3% with Firefox with some simple tabs. The culprit seems to be chrome&#x27;s &quot;software_reporter_tool.exe&quot;. It has chewed up 3 minutes of CPU and counting. It seems to have some well-multithreaded elements, it&#x27;s added 12 seconds of CPU time in 1 second occasionally.",
                  "comments": [
                    {
                      "id": 26319183,
                      "level": 4,
                      "user": "JTbane",
                      "time": 1614712655,
                      "time_ago": "14 hours ago",
                      "content": "<p>That&#x27;s Chrome scanning your computer for malware like toolbars and such.",
                      "comments": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "id": 26317650,
          "level": 1,
          "user": "fmakunbound",
          "time": 1614705448,
          "time_ago": "16 hours ago",
          "content": "<p>I swear I can see the lag while typing into Slack and I feel like it is definitely getting worse the longer Slack has been running. What the hell is going on there? What are we doing wrong as a species to develop software like this?? Shit should be small, fast and simple.",
          "comments": [
            {
              "id": 26317843,
              "level": 2,
              "user": "capableweb",
              "time": 1614706377,
              "time_ago": "15 hours ago",
              "content": "<p>Since we humans can, magically, make shit appear out of nothing by just writing gibberish and passing that gibberish to another program also written in gibberish, and get something that might be useful (probably not), I feel like we as a species are actually doing pretty well.<p>I agree overall though, most developers&#x2F;managers of developers&#x2F;companies who write software fucking suck at their job.",
              "comments": []
            },
            {
              "id": 26318373,
              "level": 2,
              "user": "pdimitar",
              "time": 1614708791,
              "time_ago": "15 hours ago",
              "content": "<p>Agreed, Slack and Teams are particularly egregious examples.",
              "comments": []
            }
          ]
        },
        {
          "id": 26320005,
          "level": 1,
          "user": "bdickason",
          "time": 1614716169,
          "time_ago": "13 hours ago",
          "content": "<p>Agreed. I typically strip every feature possible out of my phone (and run in low power mode) and gravitate towards apps&#x2F;products that just get out of my way.<p>When I built my blog, I tried to find every opportunity to reduce cruft (even stripping out extra CSS classes) so reading it would feel as close to a native app as possible.<p>You could argue that HN succeeded because it&#x27;s focused on speed above all else.<p>(Also - fellow former Q1&#x2F;Q3 player here, I competed in CPL, Quakecon, and a few other events).",
          "comments": []
        },
        {
          "id": 26315758,
          "level": 1,
          "user": "nicbou",
          "time": 1614696025,
          "time_ago": "18 hours ago",
          "content": "<p>Websites do feel pretty slow, even when they&#x27;re just a page of text. Caching helps a lot, but so does sending fewer bytes across the wire.<p>This can be hard to achieve if you work off templates and plugins.<p>Yet, I find it supremely important. I frequently lose my train of thought while waiting for pages to load.",
          "comments": [
            {
              "id": 26318837,
              "level": 2,
              "user": "pdimitar",
              "time": 1614710868,
              "time_ago": "14 hours ago",
              "content": "<p>I&#x27;m not debating whether it&#x27;s hard or not. I&#x27;ve worked with GUI toolkits some 16-18 years ago. It wasn&#x27;t a walk in the park indeed but you had the means to produce a very snappy and responsive app.<p>Can the same be said about Electron-based apps?<p>I&#x27;m too losing my train of thought sometimes waiting for pages&#x2F;apps to load. It&#x27;s embarrassing and I&#x27;m face-palming.",
              "comments": [
                {
                  "id": 26321883,
                  "level": 3,
                  "user": "nicbou",
                  "time": 1614723804,
                  "time_ago": "11 hours ago",
                  "content": "<p>I&#x27;m strictly talking about text-based pages. It&#x27;s not hard for us, skilled web developers, but it is hard for people who just want to get their content online.",
                  "comments": []
                }
              ]
            }
          ]
        },
        {
          "id": 26314387,
          "level": 1,
          "user": "jiofih",
          "time": 1614686562,
          "time_ago": "21 hours ago",
          "content": "<p>iOS has very fast and snappy transitions which are well suited for touch screens. And as pointed out in the article, it’s one of the few touch devices with &lt;30ms input latency, so it can hardly be beaten by anything else.<p>It doesn’t feel right with no animation (like Reduced Motion  in settings) since spatial hints are lost.",
          "comments": []
        },
        {
          "id": 26318314,
          "level": 1,
          "user": "marmaduke",
          "time": 1614708516,
          "time_ago": "15 hours ago",
          "content": "<p>&gt; We need to get back to native UIs. Is it awfully hard? Yes it is<p>Not sure I agree with this.  I wrote a bunch of data vis GUIs with PyQt and Pyqtgraph, all Python, with everything keyboard shortcuts and accelerators, and it was Vim-like speed except where CPU bound by data processing (NumPy).<p>So I think it can be fairly easy yet Qt dies (frequently, on HN) on the altar of native look&#x2F;feel&#x2F;platform (ie doesn’t look&#x2F;feel like a MacOS app on macOS).",
          "comments": [
            {
              "id": 26318442,
              "level": 2,
              "user": "pdimitar",
              "time": 1614709088,
              "time_ago": "15 hours ago",
              "content": "<p>Not sure what you mean -- but I&#x27;ve never used Qt. I gather it&#x27;s a controversial topic because I&#x27;ve heard exactly the opposite feedback than yours about it.<p>Still, I bet if more people used it then its community would have an incentive -- or a kick in the butt -- to quickly fix its deficiencies and it could become the de facto native GUI toolkit? Who knows.",
              "comments": [
                {
                  "id": 26323091,
                  "level": 3,
                  "user": "kaba0",
                  "time": 1614730508,
                  "time_ago": "9 hours ago",
                  "content": "<p>Qt is really quick and is used at plenty of places. Places where (critical) software is needed for internal use will be written mostly as native apps. For example monitoring and the like. And these places often use Qt.\nI suggest you to try out the Telegram Desktop app (I think mac has a non-qt version as well so be aware). I really like using it for it’s speed as well.<p>My only gripe with qt is that one has to use C++ or python, other bindings are not",
                  "comments": []
                }
              ]
            }
          ]
        },
        {
          "id": 26319701,
          "level": 1,
          "user": "Daho0n",
          "time": 1614714783,
          "time_ago": "13 hours ago",
          "content": "<p>&gt;I&#x27;d honestly pay extra for an iPhone where I can disable ALL motion, too.<p>I do that on my Android phone. Feels snappier than the iPhone now. Not perfect though. Scrolling sucks.<p>JavaScript is bad but nowadays that&#x27;s not the main evil. That falls on the hideous awful libraries on top of JS that everyone seem to love these days. They need to die ASAP.",
          "comments": []
        },
        {
          "id": 26318133,
          "level": 1,
          "user": "mrh0057",
          "time": 1614707726,
          "time_ago": "15 hours ago",
          "content": "<p>I’m pretty sure if you gave the devs creating slow ui on the web would create slow native apps too.  I’ve created web apps that are on average faster than the desktop apps they replaced.  I’m willing to bet nice simple fast programs are way cheaper to write.<p>Current situation is people creating abstraction at the wrong level and not understanding the performance cost of things like reflection and ORMs.",
          "comments": [
            {
              "id": 26323117,
              "level": 2,
              "user": "kaba0",
              "time": 1614730705,
              "time_ago": "9 hours ago",
              "content": "<p>I mean, ideally there should be absolutely no bearing of usage of ORM on the snappiness of UIs. It should absolutely never block the Ui thread. At most it could add longer “in progress” screens or something, but that is a different topic (also, good ORMs when used correctly, that is the developer actually knows what he&#x2F;she does and not only blindly copies code, than I doubt they would cause serious overhead. But I agree that non-correct usage can cause problems)",
              "comments": []
            },
            {
              "id": 26318227,
              "level": 2,
              "user": "pdimitar",
              "time": 1614708129,
              "time_ago": "15 hours ago",
              "content": "<p>Yep. Hence my somewhat dismissive quip about &quot;way too many young JS devs who know nothing else&quot;.<p>Kudos to you. We need more people like you.",
              "comments": []
            }
          ]
        },
        {
          "id": 26318146,
          "level": 1,
          "user": "slaymaker1907",
          "time": 1614707752,
          "time_ago": "15 hours ago",
          "content": "<p>Ok then, everyone will just need to pay 3x as much for software. C and C++ will never return as mainstream UI languages for applications without extreme performance considerations because the cost of developing in such languages is too high. Before anyone gets their hopes up, I&#x27;ve written quite a bit of Rust and don&#x27;t believe it changes this. Rust&#x27;s type system is very difficult to teach and learn even compared to other complex type systems. Difficult to teach&#x2F;learn = $$$. Even after writing a lot of Rust, I&#x27;m also still not very fast at writing it compared to my speed in other languages.<p>The only change we might see are more &quot;native&quot; UIs written in C#, Swift, etc. Also, Swift will not be a suitable replacement in its current form. Any replacement needs to at minimum work on MacOS plus Windows and by work I mean you can create a UI without crazy amounts of platform specific code.",
          "comments": [
            {
              "id": 26318290,
              "level": 2,
              "user": "pdimitar",
              "time": 1614708416,
              "time_ago": "15 hours ago",
              "content": "<p>There are ways to go still, I agree.<p>But I&#x27;d argue that&#x27;s because nobody wants to invest money and effort.<p>As a fan of Rust (I&#x27;m regularly using it but I don&#x27;t work for money with it currently) you are right: even if everyone agreed to move to it tonight, that wouldn&#x27;t change things much because we have no cross-platform native UI toolkit.<p>Additionally, you might be surprised what prices people could pay for really good software. I personally will pay $500 for a lifetime license of a lightweight, fast, cross-platform and rock-solid office suite. But there&#x27;s no such thing.",
              "comments": []
            }
          ]
        },
        {
          "id": 26314995,
          "level": 1,
          "user": "api",
          "time": 1614691311,
          "time_ago": "20 hours ago",
          "content": "<p>Native UIs could be much, much better. They&#x27;ve been a neglected backwater for 20 years.<p>Blame OS vendors for refusing to get together to specify a cross-platform <i>standard</i> API for UIs. We have mostly standard APIs for networking, file I&#x2F;O, even 3D graphics, but not for putting a window on the screen and putting buttons on it.<p>OS vendors are still trying to play the lock-in game by forcing everyone to write GUI apps for only their platform. This is a non-starter, so everyone goes to Electron.<p>There are a few third party cross-platform UI libraries around. They suck. Qt is as bloated as HTML-based UIs, and then there&#x27;s wxWidgets which is ugly and has an awful API based on 1990s MSC.<p>We could have something better, but it&#x27;s an extremely large and difficult project and nobody will fund it. OS vendors won&#x27;t because they don&#x27;t want cross platform (even though all developers and users do). Nobody else will because nobody pays for dev tools or building blocks. The market has been educated to believe that stuff should all be free-as-in-beer.",
          "comments": [
            {
              "id": 26315631,
              "level": 2,
              "user": "anthk",
              "time": 1614695294,
              "time_ago": "18 hours ago",
              "content": "<p>&gt; Qt is as bloated as HTML-based UIs,<p>Bullshit. Qt is much faster than Electron, the Mumble client is really fast on my Turion laptop, that with OpenBSD.<p>And I say this even if I prefer Barnard IRL.",
              "comments": [
                {
                  "id": 26315703,
                  "level": 3,
                  "user": "api",
                  "time": 1614695687,
                  "time_ago": "18 hours ago",
                  "content": "<p>Qt is smaller than Electron, but there are far less bloated HTML5 renderers than the whole giant blob that Electron ships. Compared to those Qt is similarly sized or larger.",
                  "comments": [
                    {
                      "id": 26323137,
                      "level": 4,
                      "user": "kaba0",
                      "time": 1614730898,
                      "time_ago": "9 hours ago",
                      "content": "<p>Qt is still a program for a single purpose, so it has barely any unnecessary abstraction. Any html renderer will have plenty, because they are browsers first and foremost.",
                      "comments": []
                    },
                    {
                      "id": 26315717,
                      "level": 4,
                      "user": "anthk",
                      "time": 1614695776,
                      "time_ago": "18 hours ago",
                      "content": "<p>You don&#x27;t need to use QML, and QT5 will be as usable.",
                      "comments": []
                    }
                  ]
                }
              ]
            },
            {
              "id": 26318701,
              "level": 2,
              "user": "kitsunesoba",
              "time": 1614710276,
              "time_ago": "14 hours ago",
              "content": "<p>The problem with vendor-made cross platform UI libraries are that they:<p>1) Would need to be lowest-common-denominator by nature<p>2) Would quickly stagnate due to friction against changes&#x2F;additions<p>3) Would have few allowances for platform HIGs<p>If it were permissible to have vendor specific additions on top of a common core, that could probably work fine otherwise this hypothetical standard UI library would share many of the problems suffered by Qt, wxWidgets, etc.<p>The other option I could see working is something like SwiftUI, in which some control over the behavior, layout, and presentation is ceded to the platform — basically having developers provide a set of basic specifications rather than instructions for every pixel on-screen.",
              "comments": []
            },
            {
              "id": 26315286,
              "level": 2,
              "user": "pdimitar",
              "time": 1614693126,
              "time_ago": "19 hours ago",
              "content": "<p>It&#x27;s a complete stalemate. We can&#x27;t force the OS vendors. The users don&#x27;t like the status quo but have no choice.<p>As for the free aspect, I feel like this ship has sailed like 20 years ago. Nobody will pay for an UI toolkit these days. This is not Unreal Engine 4, you know. That stuff only works on AAA games market, apparently (although I am curious as to why it doesn&#x27;t work everywhere else -- likely thin profit margins and&#x2F;or middle management greed outside of the gaming genre).",
              "comments": [
                {
                  "id": 26315692,
                  "level": 3,
                  "user": "api",
                  "time": 1614695636,
                  "time_ago": "18 hours ago",
                  "content": "<p>IMHO a good cross platform UI toolkit is about as hard as a decent 3D game engine.<p>Crazy you say? Start making a list of the features a modern UI toolkit has to have to even be considered for serious projects.",
                  "comments": [
                    {
                      "id": 26319209,
                      "level": 4,
                      "user": "pdimitar",
                      "time": 1614712794,
                      "time_ago": "14 hours ago",
                      "content": "<p>I&#x27;m not disagreeing with you. It&#x27;s just that today&#x27;s mindset makes it impossible for people to pay for GUI toolkits alone, I think.",
                      "comments": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "id": 26318365,
          "level": 1,
          "user": "avereveard",
          "time": 1614708762,
          "time_ago": "15 hours ago",
          "content": "<p>&gt; &quot;back in my day!...&quot; but we have waaaaaaaaaaay too much young JS devs who know nothing else.<p>funny, java applet in the 90s gained a fame for being slow, being caused mostly by junior devs putting stuff on the UI thread",
          "comments": [
            {
              "id": 26318482,
              "level": 2,
              "user": "pdimitar",
              "time": 1614709253,
              "time_ago": "15 hours ago",
              "content": "<p>I remember those times. To be fair though, there wasn&#x27;t much of anything else back then...",
              "comments": []
            }
          ]
        },
        {
          "id": 26314401,
          "level": 1,
          "user": "the_gipsy",
          "time": 1614686698,
          "time_ago": "21 hours ago",
          "content": "<p>That&#x27;s not fair to &quot;young JS devs&quot; who get inserted into a culture of <i>product</i> slowness.",
          "comments": [
            {
              "id": 26315389,
              "level": 2,
              "user": "pdimitar",
              "time": 1614693790,
              "time_ago": "19 hours ago",
              "content": "<p>I&#x27;ve been fired for taking the long road and preferring good craftsmanship and not idolizing shipping several times a day.<p>Sadly most people can&#x27;t afford that and the results are visible everywhere in IT.",
              "comments": []
            }
          ]
        },
        {
          "id": 26318662,
          "level": 1,
          "user": "mcguire",
          "time": 1614710078,
          "time_ago": "14 hours ago",
          "content": "<p>And cue the traditional response: &quot;Developer time is <i>much</i> more expensive than computer time, so it doesn&#x27;t make sense to spend any effort optimizing.&quot;<p>:-(",
          "comments": [
            {
              "id": 26319387,
              "level": 2,
              "user": "pdimitar",
              "time": 1614713508,
              "time_ago": "13 hours ago",
              "content": "<p>That might be true in isolation but repeat it enough times and it&#x27;s actually much cheaper to have several highly paid programmers work on it for several years, compared to so much time and energy lost otherwise...",
              "comments": []
            }
          ]
        },
        {
          "id": 26317266,
          "level": 1,
          "user": "hddu",
          "time": 1614703754,
          "time_ago": "16 hours ago",
          "content": "<p>You can disable all motion on Android. One of the first things I do is disable all the animations. Everything responds instantly. It&#x27;s great.",
          "comments": []
        },
        {
          "id": 26317525,
          "level": 1,
          "user": "kmeisthax",
          "time": 1614704894,
          "time_ago": "16 hours ago",
          "content": "<p>On iOS you can disable animations - it&#x27;s buried in the Accessibility section but it totally works.",
          "comments": [
            {
              "id": 26323168,
              "level": 2,
              "user": "kaba0",
              "time": 1614731129,
              "time_ago": "9 hours ago",
              "content": "<p>I don’t see the hate for animations when done correctly. I just tried it, and I really prefer the normal mode of operation. On Android I did disable animations because on an older version they are not done as smoothly as on the iPhone, but they can absolutely give many information on what actually happens.",
              "comments": []
            }
          ]
        },
        {
          "id": 26315983,
          "level": 1,
          "user": "bitwize",
          "time": 1614697336,
          "time_ago": "18 hours ago",
          "content": "<p>One thing you can do if you&#x27;re running Linux is to not run a compositing window manager. Use something old-school like fvwm, fluxbox, or WindowMaker. i3 is also good. When the X server draws directly to the display, it is FAST and there is not the delay of at least one frame, possibly several, that compositing WMs have. You run the risk of tearing, but I think most open source X video drivers let you turn tearing off.",
          "comments": [
            {
              "id": 26325335,
              "level": 2,
              "user": "cma",
              "time": 1614752060,
              "time_ago": "3 hours ago",
              "content": "<p>Better to just get a 120hz+ monitor and lower the double buffering delay that way.  Sharper clarity while scrolling and or tracking other motion with your eyes with that is worth it.",
              "comments": []
            }
          ]
        },
        {
          "id": 26314392,
          "level": 1,
          "user": "_trampeltier",
          "time": 1614686604,
          "time_ago": "21 hours ago",
          "content": "<p>I guess thats also the reason why old games in emulators not feel the same.",
          "comments": []
        }
      ]
    },
    {
      "id": 26313267,
      "level": 0,
      "user": "jonplackett",
      "time": 1614675133,
      "time_ago": "a day ago",
      "content": "<p>This I think is a key reason Netflix is a default ‘channel’ in my mind, whereas Apple TV, amazon prime and Disney plus are all just apps.<p>Netflix is faster in every way. There’s a button on my TV specifically to launch it, the videos start faster, fast forwarding is faster, there’s less buffering in general. Every single touch point is fast. And it’s because they put the effort in where the others didn’t.",
      "comments": [
        {
          "id": 26313630,
          "level": 1,
          "user": "Cthulhu_",
          "time": 1614679153,
          "time_ago": "a day ago",
          "content": "<p>Definitely. I don&#x27;t know if developers for e.g. TV apps get much choice in the matter, but it&#x27;s like native vs webapps. The Amazon app feels like a webapp, while Netflix like a native app (this is on LG&#x27;s WebOS).<p>And I know Apple is a weird one there. On the Apple TV, they offer pretty much a version of iOS. There&#x27;s multiple options to build your UI, but iirc you can build it native if you want to.<p>And this has been Apple&#x27;s differentiator; they were FAST. The code for apps compiled down to native, as opposed to a lot of Java based phones at the time (and later with Android).<p>I&#x27;ve always maintained that Apple had a 5 year head start on Android when it comes to performance (as well as UX, even in their skeuomorphic designs), and after 5 years it was mainly Android smartphone companies focusing on more performance than the Android OS or apps becoming faster. It was Android phones that went for quadcore (and beyond) processors first, while Apple was just fine with a single core, and later, almost reluctantly, a dualcore. Simply because their earlier technology choices made their stuff so much faster and more efficient.<p>I&#x27;m so glad Apple didn&#x27;t go ahead and make web technology the main development path, as they initially planned (or so I gathered).",
          "comments": [
            {
              "id": 26313743,
              "level": 2,
              "user": "jonplackett",
              "time": 1614680325,
              "time_ago": "a day ago",
              "content": "<p>Yeah it definitely feels that way. I reckon it has a lot to do with the servers too though. Even netflix.com is far superior to prime video &#x2F; apple tv+ browser versions. In fact it feels virtually identical to the app version.",
              "comments": [
                {
                  "id": 26313902,
                  "level": 3,
                  "user": "colde",
                  "time": 1614682052,
                  "time_ago": "a day ago",
                  "content": "<p>For Netflix it has a lot to do with how they integrate with the TV&#x27;s. They tend to integrate directly with the chipset vendor, and then ship their own SDK that the TV vendors integrate. Everyone else is relegated to use the terrible shitty webapps like development with no debugging capability. So for Smart TV&#x27;s at least, Netflix is on a whole different level than everyone else.",
                  "comments": []
                }
              ]
            }
          ]
        },
        {
          "id": 26313571,
          "level": 1,
          "user": "tumblewit",
          "time": 1614678579,
          "time_ago": "a day ago",
          "content": "<p>Netflix is so much superior to Prime. Prime has a hard time maintaining 1080p but Netflix has such varying bitrates from as low as 1mbps to as high as 20mbps while watching The crown. And the best part is how snappy the app itself is and instantly starts playing anything. Apple and Prime have a lot of work to do. Prime is possibly the worst streaming platform currently. Though their own fire stick is superior in every way compared to iOS apps or the web app.",
          "comments": [
            {
              "id": 26313625,
              "level": 2,
              "user": "darkteflon",
              "time": 1614679121,
              "time_ago": "a day ago",
              "content": "<p>I’m in Japan, with an English-language Amazon account, yet Prime insists on displaying Japanese subtitles on absolutely every thing I watch. Doesn’t matter what the original language of the content is, doesn’t provide an option to turn it off. Huge, bright white subtitles - much bigger than what Netflix uses. Been this way for years.<p>Sometimes I have fantasies about sending an email direct to Jeff Bezos just to say: dude, did you know about this?<p>Suffice to say, I don’t watch much Prime.",
              "comments": [
                {
                  "id": 26313761,
                  "level": 3,
                  "user": "jonplackett",
                  "time": 1614680488,
                  "time_ago": "a day ago",
                  "content": "<p>It&#x27;s a lot of stuff like this that adds up. Prime and Disney + also seem to completely forget what I&#x27;m currently watching all the time - and even if they remember, it will restart a minute or earlier than I left off. Netflix is always bang on the second. Netflix also always has a &#x27;skip recap&#x27; and &#x27;skip intro&#x27; button. These things don&#x27;t happen by chance. Someone worked hard for that!",
                  "comments": []
                },
                {
                  "id": 26314850,
                  "level": 3,
                  "user": "danielscrubs",
                  "time": 1614690151,
                  "time_ago": "20 hours ago",
                  "content": "<p>Seems like all streaming providers have issues with global licensing. Why can’t I pick from all the languages that the provider has available? Why lock it per country Netflix?",
                  "comments": []
                },
                {
                  "id": 26314019,
                  "level": 3,
                  "user": "Guillaume86",
                  "time": 1614683201,
                  "time_ago": "a day ago",
                  "content": "<p>In Belgium we have a 60&#x2F;40 language split between Dutch and French. Amazon Prime insists to promote to me dutch things (with a special section in the home screen), while I live in the french speaking part. No such issue with Netflix of course.",
                  "comments": []
                },
                {
                  "id": 26313903,
                  "level": 3,
                  "user": "johnwalkr",
                  "time": 1614682091,
                  "time_ago": "a day ago",
                  "content": "<p>They are not only displayed, they are hard coded and there is usually 2 separate videos (dubbed and subbed) for non-Japanese content. That being said, new content is starting to have multiple audio and subtitle tracks (like Netflix).",
                  "comments": []
                },
                {
                  "id": 26313749,
                  "level": 3,
                  "user": "ALittleLight",
                  "time": 1614680368,
                  "time_ago": "a day ago",
                  "content": "<p>May be dumb to say, but have you checked to confirm you don&#x27;t have subtitles enabled? If you bring up the player controls you notice a little &quot;cc&quot; in the lower right hand corner (at least in the English version as shown on my TV). If you click on the cc you can configure the closed captions, turning them off or on, changing language, or changing color.",
                  "comments": [
                    {
                      "id": 26314031,
                      "level": 4,
                      "user": "formerly_proven",
                      "time": 1614683298,
                      "time_ago": "a day ago",
                      "content": "<p>Prime has burnt in subtitles for approximately 90 % of the content outside the US. Which actually might have something to do with their garbage-tier video quality: unnecessary recodes and burnt in subtitles = multiple copies, so more incentive to use bit rates straight from the shitter.",
                      "comments": [
                        {
                          "id": 26314088,
                          "level": 5,
                          "user": "jonplackett",
                          "time": 1614683984,
                          "time_ago": "a day ago",
                          "content": "<p>The terrible quality and slowness I think is a remnant from them buying LoveFilm and rebranding it as Prime video all those years back, which was based on that awful Microsoft DRM that I can&#x27;t remember the name of, was it Silverlight?",
                          "comments": [
                            {
                              "id": 26314347,
                              "level": 6,
                              "user": "hef19898",
                              "time": 1614686283,
                              "time_ago": "21 hours ago",
                              "content": "<p>It was silverlight. Might still be installed on my desktop.",
                              "comments": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": 26314043,
                      "level": 4,
                      "user": "johnwalkr",
                      "time": 1614683451,
                      "time_ago": "a day ago",
                      "content": "<p>They are hard coded on Japan prime video (mostly).",
                      "comments": []
                    }
                  ]
                }
              ]
            },
            {
              "id": 26313725,
              "level": 2,
              "user": "jonplackett",
              "time": 1614680120,
              "time_ago": "a day ago",
              "content": "<p>Netflix also did a bunch of deals with ISPs and essentially have mirrors of their catalogue in all the right places, and use machine learning to guess when different shows will be watched and shuffle around what they have in those caches.<p>Meanwhile Apple TV+ will just go ahead and try to use a super heavy 4k stream on my iPhone over 4G - won&#x27;t even let me download it (at least this was the case a year ago, the last time I was out of wifi range).",
              "comments": []
            },
            {
              "id": 26319422,
              "level": 2,
              "user": "pradn",
              "time": 1614713638,
              "time_ago": "13 hours ago",
              "content": "<p>Prime has 4k UHD for free, while Netflix doesn&#x27;t. For me, that&#x27;s quite an advantage.<p>Also, given the choice, I&#x27;ll rent a movie on Amazon because they even give refunds if they detect the quality was low.",
              "comments": []
            },
            {
              "id": 26313900,
              "level": 2,
              "user": "AdmiralGinge",
              "time": 1614682043,
              "time_ago": "a day ago",
              "content": "<p>There is one very niche area that Prime is quite good and it&#x27;s their VR app. I have Prime on my Oculus Quest and they&#x27;ve really nailed the player itself, it&#x27;s like being in an actual cinema. Netflix also have a very good VR app, but none of the other streaming platforms I use have put in any effort in this regard.",
              "comments": []
            },
            {
              "id": 26314930,
              "level": 2,
              "user": "wdb",
              "time": 1614690862,
              "time_ago": "20 hours ago",
              "content": "<p>Personally, I prefer Disney+ over Netflix&#x2F;Prime as my experience is that Disney+ comes with more subtitles. Most of the time I can get Dutch subtitles while with Netflix UK that&#x27;s not the case.",
              "comments": []
            },
            {
              "id": 26314671,
              "level": 2,
              "user": "domano",
              "time": 1614688838,
              "time_ago": "20 hours ago",
              "content": "<p>For me in germany prime always has instant, rock solid 4k.<p>Netflix also never stutters, but it starts with like 480p and gets better over time.<p>Nevertheless the Netflix UI is far superior.",
              "comments": []
            }
          ]
        },
        {
          "id": 26315920,
          "level": 1,
          "user": "patentatt",
          "time": 1614696900,
          "time_ago": "18 hours ago",
          "content": "<p>The HBO app on my (admittedly low end and not brand new) Roku is laughable. You have to select a program to watch, put down the remote and go grab a snack or something because it takes about a full minute to load the screen with the show details. All that to load some thumbnails. And if you dare accidentally hit a button before it’s fully loaded, it will crash the app half the time, and the whole OS about 1&#x2F;10 times. Instead of replacing it with something more performant I use it as motivation to not watch TV and go exercise or read a book instead.",
          "comments": []
        },
        {
          "id": 26322759,
          "level": 1,
          "user": "jiggawatts",
          "time": 1614728290,
          "time_ago": "9 hours ago",
          "content": "<p>My experience with Netflix is the opposite. When you press play after pausing a show, there is an <i>eternity</i> during which it has a dark overlay blocking your view of what you&#x27;re trying to watch.<p>Why do content streaming platforms assume that you want to watch everything other than the <i>content</i>?!<p>YouTube does this too on my TV, and it&#x27;s infuriating. Not only does it hide <i>half</i> the screen for a long time after the content starts playing, it then helpfully hides most of the screen before the end of the content also!<p>This is the computer equivalent of someone shoving their hand in your face to block your vision.<p>It&#x27;s rude when a human does it. It&#x27;s rude when a computer does it.",
          "comments": []
        },
        {
          "id": 26314029,
          "level": 1,
          "user": "blowfish721",
          "time": 1614683289,
          "time_ago": "a day ago",
          "content": "<p>Agree 100%, one of the main reasons I’m resubscribing to Netflix. Just wish everyone wasn’t pulling their contents to their own streaming services. Have only tried Netflix, AppleTV+ and Disney+ and have to say that Disney+ is worst of them all with sluggish UI, webpage constantly crashing the Safari tab it’s running in with the ”using too much memory” error. And to add to it that even if you pick english as your language it still serves animated with movis with the actual signs&#x2F;text in them in the localized language.",
          "comments": [
            {
              "id": 26314079,
              "level": 2,
              "user": "jonplackett",
              "time": 1614683859,
              "time_ago": "a day ago",
              "content": "<p>You never used Disney Life, the decrepit predecessor to Disney+. Now that was a shoddy app. It used to forget your password every time it did an update (which was very often), it crashed all the time and didn&#x27;t even have very much content. But I still subscribed because... kids. This is how they knew Disney+ would be a goer, they already had a lot of poor parents sending them nearly as much money for a TERRIBLE app with relatively little content.",
              "comments": []
            }
          ]
        },
        {
          "id": 26313858,
          "level": 1,
          "user": "leokennis",
          "time": 1614681533,
          "time_ago": "a day ago",
          "content": "<p>Netflix is faster, but Netflix also &quot;always works&quot;. If I click on a button, I never get a timeout, it never does nothing.<p>The amount of engineering work going into that must be amazing.",
          "comments": []
        },
        {
          "id": 26314308,
          "level": 1,
          "user": "pronoiac",
          "time": 1614686005,
          "time_ago": "21 hours ago",
          "content": "<p>This surprised me, because on my iPad it takes over 15 seconds from launching the app to choosing who&#x27;s watching.",
          "comments": []
        },
        {
          "id": 26314352,
          "level": 1,
          "user": "tonyedgecombe",
          "time": 1614686289,
          "time_ago": "21 hours ago",
          "content": "<p>Apple TV and Apple Music is particularly bad for this, I wouldn&#x27;t be surprised if the apps are just showing a web view rather than native controls.",
          "comments": []
        },
        {
          "id": 26313795,
          "level": 1,
          "user": "bottled_poe",
          "time": 1614680837,
          "time_ago": "a day ago",
          "content": "<p>I find this argument completely ridiculous. As if content is less important than UX. Give me a break.",
          "comments": [
            {
              "id": 26314132,
              "level": 2,
              "user": "jonplackett",
              "time": 1614684418,
              "time_ago": "21 hours ago",
              "content": "<p>Don&#x27;t get me wrong, I still subscribe to all these services, because of the content.<p>But I&#x27;ll always check Netflix for something to watch first because it&#x27;s faster and easier (unless there&#x27;s something specific I know i want).<p>Being the default first choice is very valuable, and speed is the reason they&#x27;re it.",
              "comments": []
            },
            {
              "id": 26313834,
              "level": 2,
              "user": "herunan",
              "time": 1614681306,
              "time_ago": "a day ago",
              "content": "<p>Content is more important than UX, but bad UX is a deterrent from enjoying the experience of finding or discovering what you want to watch.",
              "comments": []
            }
          ]
        }
      ]
    },
    {
      "id": 26313557,
      "level": 0,
      "user": "habosa",
      "time": 1614678433,
      "time_ago": "a day ago",
      "content": "<p>Speed is <i>still</i> the differentiator on iPhones. After 10 years of Android I switched to iOS and it&#x27;s like someone greased up the whole experience. I didn&#x27;t realize how much waiting &#x2F; stuttering I was taking for granted on Android.<p>I can never go back to Android now. I&#x27;m sure if you studied the phones under a high speed camera we&#x27;d be talking about differences of only tens of ms but when you tap something 1000x a day it really adds up. It&#x27;s just like how most programmers are hyper sensitive to text editor latency.",
      "comments": [
        {
          "id": 26314645,
          "level": 1,
          "user": "sullyj3",
          "time": 1614688584,
          "time_ago": "20 hours ago",
          "content": "<p>Are you sure the perceived difference isn&#x27;t from switching from a phone that you&#x27;ve been using for a while to a new one? In my experience, both android and iphones feel blazing fast when you pull them out of the box, and sluggish later on when you&#x27;ve been using them for a year or two and they&#x27;re loaded up with all your junk.",
          "comments": []
        },
        {
          "id": 26314086,
          "level": 1,
          "user": "dagw",
          "time": 1614683957,
          "time_ago": "a day ago",
          "content": "<p>I don&#x27;t know. I have a Pixel 3a as my personal phone and an iPhone 8 as my work phone and have been using them side by side for years. I honestly cannot say that one is &#x27;faster&#x27; or has lower latency than the other.",
          "comments": []
        },
        {
          "id": 26313636,
          "level": 1,
          "user": "akrain",
          "time": 1614679246,
          "time_ago": "a day ago",
          "content": "<p>As a counterpoint, I recently switched from an old iPhone SE to a Pixel 4a and the experience could not have been any better. I find the vanilla Android to be as snappy as iOS for daily tasks if not better. \nThe problem lies with custom Android ROMs on low spec phones which do hamper the user experience quite a bit",
          "comments": [
            {
              "id": 26313684,
              "level": 2,
              "user": "coldtea",
              "time": 1614679710,
              "time_ago": "a day ago",
              "content": "<p>&gt;<i>I find the vanilla Android to be as snappy as iOS for daily tasks if not better.</i><p>&quot;As snappy if not better&quot; as an &quot;old iPhone SE&quot; though...",
              "comments": [
                {
                  "id": 26314098,
                  "level": 3,
                  "user": "411111111111111",
                  "time": 1614684127,
                  "time_ago": "a day ago",
                  "content": "<p>The issue with android phones is knowing which are optimized for speed.<p>A Samsung Galaxy for example costs almost as much as an equivalent iphone and is significantly less responsive then some motorola phones with stock android",
                  "comments": []
                },
                {
                  "id": 26313995,
                  "level": 3,
                  "user": "dividedbyzero",
                  "time": 1614682967,
                  "time_ago": "a day ago",
                  "content": "<p>I&#x27;ve switched from an iPhone 7 to an iPhone 11 Pro last year and while the iPhone 7 never struggled as badly the Androids I had before that (where keypresses might take seconds to register at times in the end), it did struggle somewhat to keep up with me at times, whereas the 11 Pro felt (still feels) like a fast desktop computer, in that it never appears like the UI or everyday operations noticeably tax it at all, the UX in that regard is super smooth. I&#x27;d expect the SE to fare a bit worse than the 7, since it had an A9 vs. an A10 SoC.",
                  "comments": []
                },
                {
                  "id": 26314793,
                  "level": 3,
                  "user": "akrain",
                  "time": 1614689816,
                  "time_ago": "20 hours ago",
                  "content": "<p>To be honest, it is much better overall. Didn&#x27;t want to start a flame war here",
                  "comments": []
                }
              ]
            }
          ]
        },
        {
          "id": 26313711,
          "level": 1,
          "user": "floatboth",
          "time": 1614679992,
          "time_ago": "a day ago",
          "content": "<p>Good Android phones these days feel great especially because of &gt;60Hz displays. Software for the most part keeps up really well with high refresh rate. The only laggy thing I know of is the Play Store sidebar closing when tapping &quot;my apps &amp; games&quot;.",
          "comments": [
            {
              "id": 26315390,
              "level": 2,
              "user": "neogodless",
              "time": 1614693798,
              "time_ago": "19 hours ago",
              "content": "<p>Using a OnePlus 7 Pro, and I tried this, and the sidebar closed instantly. How many apps and games do you have...? :)<p>(But yeah, this phone is super fast, and the 90Hz screen is a joy. I literally cannot switch to iPhone until&#x2F;unless they get faster screens, because of post-concussion syndrome and the migraines I get from 60Hz screens.)",
              "comments": []
            }
          ]
        },
        {
          "id": 26313838,
          "level": 1,
          "user": "CinematicStudio",
          "time": 1614681384,
          "time_ago": "a day ago",
          "content": "<p>I feel you! I&#x27;m on Android, and can&#x27;t believe the morons at google still don&#x27;t get this! \nIt&#x27;s insanely slow all the time - I mean, I do have a quad core with 3GB of RAM, it&#x27;s not top of the top, but still, at this speed, everything should be INSTANT",
          "comments": []
        },
        {
          "id": 26313568,
          "level": 1,
          "user": "perryizgr8",
          "time": 1614678553,
          "time_ago": "a day ago",
          "content": "<p>Which android phone were you using and which iphone did you switch to? Asking because I&#x27;m very skeptical that iphone and android have any significant difference in daily usage speeds.",
          "comments": [
            {
              "id": 26314072,
              "level": 2,
              "user": "Guillaume86",
              "time": 1614683826,
              "time_ago": "a day ago",
              "content": "<p>Fair question, here&#x27;s some 2019 benchs that found similar latencies between high end Samsung and Apple devices: <a href=\"https:&#x2F;&#x2F;blog.gamebench.net&#x2F;touch-latency-benchmarks-iphone-xs-max-galaxy-note-10\" rel=\"nofollow\">https:&#x2F;&#x2F;blog.gamebench.net&#x2F;touch-latency-benchmarks-iphone-x...</a> so it seems some Android manufacturers did manage to catch up finally.",
              "comments": []
            },
            {
              "id": 26313616,
              "level": 2,
              "user": "piperswe",
              "time": 1614678995,
              "time_ago": "a day ago",
              "content": "<p>Personally I experienced a similar thing switching from a Galaxy S10+ to an iPhone XS.",
              "comments": [
                {
                  "id": 26314621,
                  "level": 3,
                  "user": "perryizgr8",
                  "time": 1614688439,
                  "time_ago": "20 hours ago",
                  "content": "<p>Hmm, fair point since those are similar gen and both flagships.<p>Personally I switched from an S10 to Iphone 11, and was absolutely repulsed by the horrible screen on the iphone. They both felt similar in terms of UI responsiveness. But due to the screen I went back to the S10.",
                  "comments": []
                }
              ]
            },
            {
              "id": 26313623,
              "level": 2,
              "user": "curist",
              "time": 1614679101,
              "time_ago": "a day ago",
              "content": "<p>Somewhat related: <a href=\"https:&#x2F;&#x2F;danluu.com&#x2F;input-lag&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;danluu.com&#x2F;input-lag&#x2F;</a>",
              "comments": [
                {
                  "id": 26314600,
                  "level": 3,
                  "user": "perryizgr8",
                  "time": 1614688271,
                  "time_ago": "20 hours ago",
                  "content": "<p>Exactly, modern android flagships are at par or better than Iphone when it comes to touch latency. Most people who express the sentiment &quot;OMG iphone is so smooth&quot; went from $200 Moto G to $1000 Iphone X. Compare in the same class, and you will find that both OSes are comparable.",
                  "comments": [
                    {
                      "id": 26318520,
                      "level": 4,
                      "user": "dntrkv",
                      "time": 1614709446,
                      "time_ago": "15 hours ago",
                      "content": "<p>Not sure how you got that from the link. The iPhone devices have 20%+ lower latency.",
                      "comments": [
                        {
                          "id": 26324292,
                          "level": 5,
                          "user": "perryizgr8",
                          "time": 1614741251,
                          "time_ago": "6 hours ago",
                          "content": "<p>That link is old. There are similar measurements for modern devices available on many review websites. This link does identify the correct metric that people seem to respond to when they feel a phone is &quot;faster&quot;.",
                          "comments": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "id": 26313674,
      "level": 0,
      "user": "DarwinMailApp",
      "time": 1614679615,
      "time_ago": "a day ago",
      "content": "<p>I can certainly attest to this.<p>Every second support email in the early days of <a href=\"https:&#x2F;&#x2F;www.darwinmail.app\" rel=\"nofollow\">https:&#x2F;&#x2F;www.darwinmail.app</a> was from users who were wondering why the website wasn&#x27;t faster to load and operate.<p>I knew that this was going to slowly kill the product if I didn&#x27;t focus on optimising the speed immediately. I also heard somewhere that even a 0.01 increase in load times for Amazon&#x27;s website would cost them somewhere in the region of 100&#x27;s of millions.<p>1. I gathered feedback from all users that said the website was slow (in any way and in any page&#x2F;component&#x2F;workflow).<p>2. I created a Trello board <a href=\"https:&#x2F;&#x2F;trello.com&#x2F;c&#x2F;PPuhLtW0&#x2F;95-upgrade-performance\" rel=\"nofollow\">https:&#x2F;&#x2F;trello.com&#x2F;c&#x2F;PPuhLtW0&#x2F;95-upgrade-performance</a> for all the feedback.<p>3. Since that week of initial performance enhancement research and groundwork, I have essentially been completing todo&#x27;s on that Trello card and adding more tasks as time goes on. I think the more speed improvements I make, the more I learn about what other parts of the application can be sped up. It&#x27;s like economics, the more you learn, the more you realise you have so much more to learn :D<p>A few years later and I have not received an email suggesting to increase the speed of the app in several months, although I continue to make speed improvements on a regular basis.<p>Netflix have been my source of inspiration here. They are leagues ahead of every other streaming service and their custom architecture placed at the ISP level is absolutely incredible and paramount to how the deliver content with such amazing speeds.",
      "comments": [
        {
          "id": 26314382,
          "level": 1,
          "user": "pronoiac",
          "time": 1614686500,
          "time_ago": "21 hours ago",
          "content": "<p>Hey, you could copy your description from Product Hunt - &quot;Enhance Gmail to get your Google Inbox features back&quot; - and put it on your front page and&#x2F;or your About page.",
          "comments": []
        },
        {
          "id": 26314200,
          "level": 1,
          "user": "mattmanser",
          "time": 1614685098,
          "time_ago": "21 hours ago",
          "content": "<p>You never heard of a profiler? Logging? You&#x27;re going about this all wrong.<p>When fixing performance problems you shouldn&#x27;t guess, just profile it to find the bottlenecks.<p>I&#x27;ve seen plenty of performance &#x27;fixes&#x27; that weren&#x27;t, pure guesses by developers that did nothing, when a quick profile immediately revealed the culprit.<p>In your case you also need to figure out if it&#x27;s happening server-side or client-side. I generally start with the server-side logs, get a few days&#x2F;weeks worth of data, find average page request times, plus how much deviation on those requests, then go from there. That gets you the server-side. For client-side, unfortunately it&#x27;s a lot harder. Google analytics page load speed, for example, is a pile of crap. But, again, there&#x27;s a profiler in dev tools, remember js compile time is a significant thing and can slow load time too so check that out as well as the actual run times (js compile time shows in the page load graph).",
          "comments": [
            {
              "id": 26315083,
              "level": 2,
              "user": "DarwinMailApp",
              "time": 1614691930,
              "time_ago": "19 hours ago",
              "content": "<p>More profiling is on the Trello board list ;)<p>I&#x27;ve done heaps of profiling.. pun intended :D",
              "comments": []
            },
            {
              "id": 26316780,
              "level": 2,
              "user": "flavius29663",
              "time": 1614701437,
              "time_ago": "17 hours ago",
              "content": "<p>profiling is not a replacement for user feedback. You could profile some server side functions and see that X is 5 ms and Y is 8 ms. You will think all good, they&#x27;re pretty fast. But the user might complain about a feature being slow, say deleting a thread, which happens to call the 5 ms function 50 times for some reason. You would then address the reason for so many calls, rather than optimizing the call itself.<p>Talking to your users is paramount, at the very least they will indicate where you have to add profiling",
              "comments": []
            },
            {
              "id": 26315227,
              "level": 2,
              "user": "toss1",
              "time": 1614692782,
              "time_ago": "19 hours ago",
              "content": "<p>Good points about using good tools &amp; analysis techniques - especially to get to latent sources of slowness.<p>But I&#x27;m not sure you can say that he&#x27;s not profiling - he&#x27;s using the end users&#x27; direct experience as the profiling tool, prioritizing the fixes by greatest annoyance.<p>Since he let himself get in the mode of being reactive, that&#x27;s not a bad way out of the hole he dug himself.<p>Of course the best way is to design your architecture for speed, minimize all code usage &amp; data transfer, use the profiling tools <i>before</i> release candidate status, and prioritizing speed &amp; performance in the QA process.",
              "comments": []
            }
          ]
        }
      ]
    },
    {
      "id": 26313976,
      "level": 0,
      "user": "GuB-42",
      "time": 1614682772,
      "time_ago": "a day ago",
      "content": "<p>The thing is, the iPhone isn&#x27;t that fast, but it is able to react quickly to your input by showing you a nice, smooth but slow animation while work is being done in the background. As a result it feels faster.<p>That&#x27;s something no other smartphone could do. I don&#x27;t know how things are today but I looks like Android more or less &quot;solved&quot; the problem by throwing powerful hardware at it.<p>The killer feature is not really speed, but low input latency. And this is achieved by taking performance in consideration during development. And contrary to the old &quot;premature optimization is the root of all evil&quot; saying, you have to do it early, because while can be relatively easy to increase throughput, latency is much harder to deal with.<p>This is also part of the success of Google Chrome. While it didn&#x27;t load pages that much faster than its competition it was great at showing you something quickly. It took ages for Firefox to catch up, and it looks like it did mostly because Chrome became slower over time. How is Servo going BTW?",
      "comments": [
        {
          "id": 26314008,
          "level": 1,
          "user": "p_l",
          "time": 1614683088,
          "time_ago": "a day ago",
          "content": "<p>Funnily enough, first few iPhones were ridiculously underpowered, and there was apparently a lot of tricks being thrown to hide that (things you can learn from salty platform developers XD)",
          "comments": []
        },
        {
          "id": 26315248,
          "level": 1,
          "user": "neogodless",
          "time": 1614692929,
          "time_ago": "19 hours ago",
          "content": "<p>I think I agree with a bunch of stuff you posted, but I can&#x27;t get past this comment.<p>&gt; That&#x27;s something no other smartphone could do.<p>Either I&#x27;m misreading you, or you have a strangely narrow version of the world we live in. What is so magical about the iPhone that no other smartphone can &quot;react quickly to your input by showing you a nice, smooth but slow animation while work is being done in the background&quot;?<p>(Part of my doubt probably comes from using a OnePlus 7 Pro as my daily driver. 90Hz refresh rate and everything is ridiculously fast and smooth. But that&#x27;s not actually possible, is it?)",
          "comments": [
            {
              "id": 26317078,
              "level": 2,
              "user": "GuB-42",
              "time": 1614702821,
              "time_ago": "16 hours ago",
              "content": "<p>There is nothing magical about the iPhone especially not on the hardware side.<p>I don&#x27;t know how but if you look at input response time charts, especially in the early days, the iPhone is among the best, if not the best by a large margin. Less abstraction layers? Better tuned OS? More attention given to latency? More trickery? Apple&#x27;s level of integration and closed ecosystem certainly helps here, and I can easily imagine Steve Jobs pissing off every single employee that wasn&#x27;t fired for the smallest hiccup. I am far from an Apple fan and I don&#x27;t own any of their stuff but I have to admit that on some points, they are really good. And as a developer, I have a lot of respect for those who care about performance.<p>Your OnePlus 7 Pro is a beast. It is fast and smooth because it has quasi-desktop class hardware inside. That&#x27;s the &quot;solution&quot; I was referring to.<p>To be fair, Android did work on smoothness. It was called &quot;project butter&quot;. But IMHO, they still didn&#x27;t manage to match Apple on equivalent hardware. I don&#x27;t know about the situation right now but I hope everything is smooth considering the ridiculously powerful hardware they put in modern flagships.",
              "comments": []
            },
            {
              "id": 26317293,
              "level": 2,
              "user": "conscion",
              "time": 1614703895,
              "time_ago": "16 hours ago",
              "content": "<p>The iPhone has used a 120hz touch digitizer for a long time, while Android phones have usually used only a 60hz touch digitizer. So while the screen refresh rate was only 60hz, they could start reacting and creating the animation sooner.",
              "comments": []
            }
          ]
        },
        {
          "id": 26318087,
          "level": 1,
          "user": "marcosdumay",
          "time": 1614707535,
          "time_ago": "15 hours ago",
          "content": "<p>&gt; you have to do it early, because while can be relatively easy to increase throughput, latency is much harder to deal with.<p>Hum... I don&#x27;t think that makes much sense. Yes, there are some latency optimizations that are certain and architecture wide, so they are much easier to do at first write time, but there are a lot of latency optimizations that are iffy and local, and thus much easier to do with an actual profiler running.<p>The thing is, throughput optimizations also come on both forms. I&#x27;m having a very hard time remembering any large and general enough experience on the ratios, or arriving at a property that would change them for latency or throughput. I think that dimension is really not relevant for them.",
          "comments": []
        },
        {
          "id": 26314692,
          "level": 1,
          "user": "auggierose",
          "time": 1614689009,
          "time_ago": "20 hours ago",
          "content": "<p>The iPhone is really REALLY fast. Especially if you program it in Swift and Metal, instead of Javascript.",
          "comments": [
            {
              "id": 26319713,
              "level": 2,
              "user": "kall",
              "time": 1614714825,
              "time_ago": "13 hours ago",
              "content": "<p>Thankfully JSC is also really REALLY fast, but interacting with websites is slow.",
              "comments": [
                {
                  "id": 26324558,
                  "level": 3,
                  "user": "auggierose",
                  "time": 1614743680,
                  "time_ago": "5 hours ago",
                  "content": "<p>No, sorry, JSC cannot ever be really REALLY fast.",
                  "comments": []
                }
              ]
            }
          ]
        },
        {
          "id": 26315162,
          "level": 1,
          "user": "lbriner",
          "time": 1614692355,
          "time_ago": "19 hours ago",
          "content": "<p>I guess the OP should have said that the &quot;perception&quot; of speed is the killer feature.<p>I find Android is now terrible on both my Samsung Tab 2 and my Galaxy S8. Sometimes I click something and it takes over a second to do any UI changes and looks like it hasn&#x27;t responded. Just as you go to click it again, it comes up. I find the same in multiple apps where basic actions take too long even simple menu&#x2F;view apps like email.<p>I don&#x27;t know what has happened but it does seem crazy that in 20 years with hardware that is 1000s of times more powerful, we still can&#x27;t consistently solve click latency.<p>Maybe it&#x27;s just me.",
          "comments": []
        },
        {
          "id": 26314337,
          "level": 1,
          "user": "grishka",
          "time": 1614686201,
          "time_ago": "21 hours ago",
          "content": "<p>Android has always allowed the exact same trick iOS does to make it seem that apps launch quickly — show an &quot;outline&quot; of the UI while the real one loads. Though it does take some drawable and theming wizardry to get it right. Some apps, on both platforms, use this to show a splash screen.",
          "comments": []
        },
        {
          "id": 26314644,
          "level": 1,
          "user": "leadingthenet",
          "time": 1614688580,
          "time_ago": "20 hours ago",
          "content": "<p>&gt; How is Servo going BTW?<p>Pretty much dead, unfortunately.",
          "comments": []
        },
        {
          "id": 26315955,
          "level": 1,
          "user": "user-the-name",
          "time": 1614697152,
          "time_ago": "18 hours ago",
          "content": "<p>The iPhone is by a good margin the fastest phone on the market, on pretty much any kind of benchmark.<p>Animations are very seldom used on iOS to hide any work happening in the background. Most things happen instantly, and animations are added for usability, to give spatial hints and make the UI easier to follow.",
          "comments": []
        }
      ]
    },
    {
      "id": 26314715,
      "level": 0,
      "user": "riho",
      "time": 1614689164,
      "time_ago": "20 hours ago",
      "content": "<p>This is a big reason why I get frustrated with comments about high refresh rate monitors being mostly for gaming, or it not being that important for productivity applications.<p>There&#x27;s a reason why it&#x27;s hard to ever go back, once you&#x27;ve experienced the fluidity of even just your mouse cursor reacting instantly to your movements.<p>If you&#x27;ve ever used the iPad Pro, there&#x27;s clearly something special about the experience. It just _feels_ better, and for all the same reasons described in the article.<p>60hz is far from smooth, and that number is a leftover from days past, not what is actually optimal or good.<p>Display technologies unfortunately still have ways to go when it comes to high resolution, color accurate panels, with high refresh rates, but the general direction on the market is that high refresh rates are not available in the &quot;productivity&quot; category of monitors, even if sometimes the manufacturer has panels that would fit the bill. You unfortunately always need to look in the gaming category, which usually lack many of the features you&#x27;d like in a more productivity centered display. Such as a fully adjustable stand, high color accuracy and viewing angles, virtual display splitting, or just overall design of the enclosure.<p>I could go on another rant about display enclosure designs... Why isn&#x27;t there a single company out there (with perhaps the exception of Dell) that&#x27;s creating nice and minimal display enclosures that aren&#x27;t covered in cheap plastic and &quot;aesthetic&quot; ornaments? Apple&#x27;s Cinema Display from 2004 is to this day one of the better looking enclosures out there.<p>I don&#x27;t think you can blame this on the consumers really. For the higher end market that I&#x27;m talking about in general here, I&#x27;d be willing to take a bet on if you build it they will come. I&#x27;d certainly be praising any company willing to take this on to high heavens.<p>I want a great, fast, accurate panel with a nice, minimal, aluminum enclosure. Is that just too much to ask?",
      "comments": [
        {
          "id": 26314945,
          "level": 1,
          "user": "TacticalCoder",
          "time": 1614690989,
          "time_ago": "20 hours ago",
          "content": "<p>&gt; ... of even just your mouse cursor reacting instantly to your movements.<p>But you probably haven&#x27;t, except in, well, games?<p>&gt; 60hz is far from smooth, and that number is a leftover from days past, not what is actually optimal or good.<p>Well it would already be wonderful if we actually had 60 Hz in modern application &#x2F; devices, including 16 ms response time.  I fired up an old game the other day on my arcade cab (CRT screen), some shoot&#x27;em up game, and it was silky smooth.  I&#x27;m pretty sure it was &quot;only&quot; 60 Hz but it was constantly 60 Hz: any input with the joystick or buttons had results the very next frame.<p>This felt so much smoother than any of the army of modern devices I&#x27;m using on a daily basis: even if they can animate stuff at high refresh rate, the latency before the animation starts is what makes using them painful.<p>Refresh rate is a thing but so is the latency between when your input and when, visually, it produces a result.<p>I&#x27;ve seen people working on ports from old arcade game where they&#x27;d record using high-speed cameras LEDs physically hooked to the joysticks&#x2F;buttons to make sure that &quot;input at frame x means response at frame x + 1&quot;.  Short of that your app very probably is not responding in 16 ms or less, unless you really know what you&#x27;re doing.<p>There was this famous rant by John Carmack where he lamented that on PCs it was faster to do a transatlantic ping than to push one pixel to the screen: I don&#x27;t know how far we&#x27;ve gone, but when I compared modern devices to my old arcade cab and it&#x27;s measly 60 Hz (but 16 ms latency), I&#x27;m still not impressed.<p>A 120 Hz or 144 Hz or 240 Hz is no good if it takes 35 ms between when you move the mouse and when you see the results on screen: that&#x27;s not &quot;120 Hz&quot; but 30 Hz. And 30 Hz feels laggier than an 35 years old arcade cab: it is that shameful. 35 years and still feeling more responsive than any productivity app.<p>I remember a recent tool posted here (I think for OS X: maybe an editor) here by someone who was fed up with this extreme &quot;input lag&quot; and was guaranteeing his program would be answering in less than 16ms (maybe was it 24ms, don&#x27;t remember exactly).  But that is an exception.<p>I think you&#x27;re highly underestimating how smooth 60 Hz already is when there&#x27;s no input lag. Now, of course, I&#x27;m taking 120 Hz or more any day over 60 Hz but we should very badly focus on input lag too.<p>And, sadly, we live in a world where I&#x27;d scientifically guesstimate that 99.99% of the programmers are totally unable, due to limitations of their tools (do they have high speed cameras and can they prove how fast things are pushed to the screen?) &#x2F; knowledge (I&#x27;m not John Carmack and modern software stacks sure seems complicated) &#x2F; languages (let&#x27;s not start a flame war) &#x2F; mindset (never optimize anything &#x2F; 100 MB JavaScript downloads are fine, etc.), to push anything to the screen in 8ms or 4ms.<p>Except for top-notch game programmers working on AAA titles.<p>So 240 Hz monitors, sure: bring them up.  But bring me too the programmers and tools needed so that in 4 ms I&#x27;ll see the result of my inputs.",
          "comments": [
            {
              "id": 26316662,
              "level": 2,
              "user": "anthk",
              "time": 1614700821,
              "time_ago": "17 hours ago",
              "content": "<p>&gt;I remember a recent tool posted here (I think for OS X: maybe an editor) here by someone who was fed up with this extreme &quot;input lag&quot; and was guaranteeing his program would be answering in less than 16ms (maybe was it 24ms, don&#x27;t remember exactly). But that is an exception.<p>Mac OS 9 Lives praise Mac OS 9 against OSX because of that.<p><a href=\"http:&#x2F;&#x2F;macos9lives.com&#x2F;\" rel=\"nofollow\">http:&#x2F;&#x2F;macos9lives.com&#x2F;</a>",
              "comments": []
            }
          ]
        }
      ]
    },
    {
      "id": 26313799,
      "level": 0,
      "user": "ALittleLight",
      "time": 1614680898,
      "time_ago": "a day ago",
      "content": "<p>I&#x27;ve worked on a project that failed and I always felt speed was a real problem. I tried but never succeeded in convincing people that speed was the issue.<p>In our case, our users had a specific flow through the application they would use, and it worked, but it required clicking many (10+) buttons and waiting for a web request on each. People on the team were satisfied that the flow worked and going through it didn&#x27;t take TOO long... But what people on our side didn&#x27;t get is that our customers had to go through this flow dozens if not hundreds of times - some users would need to do it this many times regularly. It effectively made our users hate using the product, or they would refuse to, or they&#x27;d use it but only a little bit and they&#x27;d try to minimize the cost.<p>I tried to get people on our side to experience the pain points, e.g. asking PMs to follow this flow one hundred times, and things like that, but I never could get through to anyone that we should redesign and refocus on making it usable. Maybe a mockup of a faster flow was what was needed to be persuasive there.",
      "comments": [
        {
          "id": 26319533,
          "level": 1,
          "user": "oehpr",
          "time": 1614714089,
          "time_ago": "13 hours ago",
          "content": "<p>I&#x27;ve got a team that I am actively trying to convince that this is a problem, and I am scared that I&#x27;m failing. We&#x27;re introducing new components that have deliberately introduced latency to make transitions smoother (and I mean LARGE latency. 500ms large). I brought up the terminal insanity of doing this and got in response &quot;no one has complained about it so far... we can tweak it if you like, but I&#x27;m following best practices&quot; (citing nothing).<p>I bring this up with others, and they are lukewarm about it. I feel like our company is in deeeeep shit if I don&#x27;t convince people this is a problem.",
          "comments": []
        },
        {
          "id": 26319039,
          "level": 1,
          "user": "MarkLowenstein",
          "time": 1614711940,
          "time_ago": "14 hours ago",
          "content": "<p>There are two levels of slowness being talked about here, both valid. One is that 16ms vs. 60ms response to typing and touch. The other is yours, and I think yours is the more problematic one. Not only do those multi-second waits accumulate through the workday to be a significant fraction of the day, but each one presents an opportunity for the user&#x27;s mind to wander, or other parallel tasks to be switched to, with a high cost of returning to the current state.",
          "comments": []
        }
      ]
    },
    {
      "id": 26314344,
      "level": 0,
      "user": "ksec",
      "time": 1614686269,
      "time_ago": "21 hours ago",
      "content": "<p>May be Speed isn&#x27;t the right word, Latency would be better.<p>We can look at Input Lag [1], and Microsoft Research&#x27;s work [2] on Touch Input. Apple&#x27;s ProMotion being part of that as well. For the past 20 years we have make 10 - 100x improvement in bandwidth at the expense of Latency. Now we need to do more work on it . Especially if we want VR or AR which are extremely latency sensitive. John Carmack [3] used to talk a lot about it when he was still working on Oculus. How it was faster sending something hundreds of miles away than showing it on your computer screen.<p>[1] <a href=\"https:&#x2F;&#x2F;danluu.com&#x2F;input-lag&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;danluu.com&#x2F;input-lag&#x2F;</a><p>[2] <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=vOvQCPLkPt4\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=vOvQCPLkPt4</a><p>[3] <a href=\"https:&#x2F;&#x2F;danluu.com&#x2F;latency-mitigation&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;danluu.com&#x2F;latency-mitigation&#x2F;</a>",
      "comments": []
    },
    {
      "id": 26312930,
      "level": 0,
      "user": "dragontamer",
      "time": 1614671620,
      "time_ago": "a day ago",
      "content": "<p>&gt; When you touched a Razr or a Palm phone, there was a delay. It felt sluggish and slow.<p>I always felt like resistive screens were more responsive than capacitive screens.<p>Case in point: My 3DS resistive screen and Palm Centro responded instantly. I think their downside was the necessary use of the stylus (because of the additional precision, their UIs required you to pull out the stylus before you could do anything effective).<p>What the Apple iPod Touch &#x2F; iPhone did, was allow you to touch without using a stylus.<p>Anyway, I read this post as if its a mirror-image of my reality. The one thing I remember about Apple&#x27;s capacitive push was that it felt slower than what I was used to. Honest.<p>--------<p>With that being said: I&#x27;ve played fighting games vs opponents who can 1-frame link and counter-throws within 7-frames (115 milliseconds). I&#x27;m well aware of the human-brain&#x27;s capability to process data far faster than most people realize.<p>Musicians, Video Game players, Athletes... I expect most of them to have reaction speeds well above average: below the 200ms typical human. Even then, &quot;average&quot; humans have far better reaction speeds and ability to perceive things that happen in factions-of-a-second (at least, once you make them aware of those things).<p>UI-speed is absolutely a great feature. I just disagree that Apple&#x27;s iPod Touch or iPhone was a good representation of that.",
      "comments": [
        {
          "id": 26313067,
          "level": 1,
          "user": "throwaway189262",
          "time": 1614673100,
          "time_ago": "a day ago",
          "content": "<p>Anecdotal, but speed and refresh rate are really important for gaming. I thought &gt;60fps was a gimmick, but a friend&#x27;s new screen convinced me otherwise. It&#x27;s visually obvious up to around 120fps. Moving the mouse around, I can see increase in frame rate to about 200hz.<p>I upgraded my monitor to 144hz, got a low delay mouse and headset (some headsets have over 400ms delay and audio response is faster than visual!). My ranking in games I&#x27;ve played for years has gone up about 1 standard deviation. I&#x27;m at my record high ranking in every game and it continues to rise.<p>Likely biased study, but Nvidia found an eyebrow raising difference in player performance when using higher refresh rates. <a href=\"https:&#x2F;&#x2F;www.nvidia.com&#x2F;en-us&#x2F;geforce&#x2F;news&#x2F;geforce-gives-you-the-edge-in-battle-royale&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.nvidia.com&#x2F;en-us&#x2F;geforce&#x2F;news&#x2F;geforce-gives-you-...</a>",
          "comments": [
            {
              "id": 26313179,
              "level": 2,
              "user": "ThePadawan",
              "time": 1614674220,
              "time_ago": "a day ago",
              "content": "<p>Similar anecdote: I recently investigated tablets to use for drawing.<p>Everybody online said the non-plus-ultra was the iPad Pro, even compared to other name-brand devices from Samsung&#x2F;Microsoft.<p>So I tried them both, and wow. 120fps and a screen optimized for low delay really makes an <i>enormous</i> difference.<p>With all other tablets, it was more a question of &quot;well how more or less awkward does this feel to use&quot;, where that question didn&#x27;t even come up with the iPad.<p>I know this sounds like shilling, but I recommend just trying it out on a real device sometime, even or especially if you have no intent of buying one.",
              "comments": [
                {
                  "id": 26313424,
                  "level": 3,
                  "user": "throwaway189262",
                  "time": 1614676845,
                  "time_ago": "a day ago",
                  "content": "<p>Gaming stuff is also low delay. My screen tested at 4ms and gaming mouse at 6ms.<p>Newer studies have shown recognition of events as fast as 13ms. <a href=\"https:&#x2F;&#x2F;news.mit.edu&#x2F;2014&#x2F;in-the-blink-of-an-eye-0116\" rel=\"nofollow\">https:&#x2F;&#x2F;news.mit.edu&#x2F;2014&#x2F;in-the-blink-of-an-eye-0116</a><p>More than 30ms of delay is noticable. My old screen + mouse had a delay of ~50 crudely tested. My old bluetooth headset was over 400ms!<p>I totally believe you that delay is noticable. I haven&#x27;t used iPhone, but Android has terrible UI lag virtually everywhere (pointless animations don&#x27;t help, pro tip you can turn these off in developer options)",
                  "comments": [
                    {
                      "id": 26314912,
                      "level": 4,
                      "user": "coder543",
                      "time": 1614690709,
                      "time_ago": "20 hours ago",
                      "content": "<p>&gt; My old bluetooth headset was over 400ms!<p>Which headset did you switch to?<p>I bought the HyperX CloudX Flight (what a name) wireless gaming headset about three months ago, and I was shocked at how much latency I could feel in something that was supposed to be a dedicated gaming headset.<p>There&#x27;s no <i>inherent</i> reason that a wireless headset has to have more latency than a wired headset, analog wireless being the extreme example of no added latency, but a purpose-built wireless headset seems like it would use some digital wireless protocol that is optimized for low latency, instead of buffering something like 100ms of audio in the channel. That ~100ms to ~150ms of latency really impacts reaction times.<p>So, I could switch to a wired headset... I just wish I could find a wireless headset that didn&#x27;t suck. Microsoft just recently introduced their new &quot;Xbox Wireless Headset&quot;, which looks awesome, but... the absence of any latency specification is not encouraging.",
                      "comments": []
                    },
                    {
                      "id": 26314256,
                      "level": 4,
                      "user": "e_proxus",
                      "time": 1614685517,
                      "time_ago": "21 hours ago",
                      "content": "<p>How do you actually  test screen and mouse delay? Is there some good software for testing each in isolation? I know of Is It Snappy? for iOS bu that only measures end-to-end latency.",
                      "comments": [
                        {
                          "id": 26314694,
                          "level": 5,
                          "user": "mnembrini",
                          "time": 1614689029,
                          "time_ago": "20 hours ago",
                          "content": "<p>It&#x27;s pretty hard to measure end-to-end delay, Nvidia is only getting to it now with <a href=\"https:&#x2F;&#x2F;www.nvidia.com&#x2F;en-us&#x2F;geforce&#x2F;news&#x2F;reflex-low-latency-platform&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.nvidia.com&#x2F;en-us&#x2F;geforce&#x2F;news&#x2F;reflex-low-latency...</a>",
                          "comments": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "id": 26313161,
              "level": 2,
              "user": "aequitas",
              "time": 1614674123,
              "time_ago": "a day ago",
              "content": "<p>I still play games in =&lt;60fps, I see it like training in a gravity room ;)<p>Jokes aside, I&#x27;m happy I haven&#x27;t had the same experience as you for gaming. Because then I would have to buy into high performance gaming. I can now happily play a game on something like Stadia or my old Macbook without having to feeling something is wrong or missing. Kinda like how watching movies on VHS was fine until HD came along. Now every artifact or resolution drop in a video is an annoyance.",
              "comments": [
                {
                  "id": 26313223,
                  "level": 3,
                  "user": "universa1",
                  "time": 1614674593,
                  "time_ago": "a day ago",
                  "content": "<p>Well that mostly depends on the kind of games you play... most Esports titles probably benefit from a higher refresh rate&#x2F;more fps... While most Singleplayer games, except the occasional shooter, probably don&#x27;t... With mmo&#x27;s somewhere in between... It also quickly becomes very technical, as not only the display latency is interesting, but also the input latency.",
                  "comments": []
                },
                {
                  "id": 26313473,
                  "level": 3,
                  "user": "throwaway189262",
                  "time": 1614677503,
                  "time_ago": "a day ago",
                  "content": "<p>It depends on the game. I play competitive shooters which I&#x27;ve gotten worse at as I age...<p>PC upgrades have given me 50ms reaction time advantage. Nearly what I lost since my early 20s. Feels nice to be &quot;good&quot; at games again",
                  "comments": []
                }
              ]
            },
            {
              "id": 26314696,
              "level": 2,
              "user": "twic",
              "time": 1614689038,
              "time_ago": "20 hours ago",
              "content": "<p>My setup gets 20 fps in TF2 on a good day :(.",
              "comments": []
            }
          ]
        }
      ]
    },
    {
      "id": 26313739,
      "level": 0,
      "user": "draklor40",
      "time": 1614680271,
      "time_ago": "a day ago",
      "content": "<p>Whenever I bring up the topic of performance and speed of software, I used to get &quot;Pre-mature optimization is the root of all evil&quot;, but in reality, companies are spending billions just to squeeze an additional 1-2% improvement in compilers optimizations,browser engines, kernels and processors.<p>Speed matters. I CAN perceive the latency of using an SPA vs using a native application. I notice. the diff. between executing a GNU binary vs running a js based script.",
      "comments": [
        {
          "id": 26314241,
          "level": 1,
          "user": "ratww",
          "time": 1614685406,
          "time_ago": "21 hours ago",
          "content": "<p><i>&gt; &quot;Pre-mature optimization is the root of all evil&quot;</i><p>I agree with your post. We as a community have completely subverted the meaning of this quote. It is originally about the <i>need</i> to profile your code, and about how programmers instincts often fail them, making them optimize the wrong things.<p>But when it mixed with Startup Culture it morphed into <i>&quot;don&#x27;t worry about speed, just write whatever shitty code comes into your head and only optimize if a customer complains... scratch that, let&#x27;s not listen to customer complaints because we know better&quot;</i>.<p>Like you said, some companies with good products and some good developers are following what Knuth had to say and are constantly optimizing for speed (but after profiling). Others are engaged in a race to the bottom and are trying to convince everyone else that careless engineering is somewhat better.",
          "comments": [
            {
              "id": 26316121,
              "level": 2,
              "user": "draklor40",
              "time": 1614698166,
              "time_ago": "18 hours ago",
              "content": "<p>Its easy. You deliver the feature and then optimize its performance.<p>What they dont say is that there is never an end to set of feature requests you will get. No matter how many crappy, unusable features you throw in, there will always be a request to tweak this , tweak that.....",
              "comments": []
            }
          ]
        }
      ]
    },
    {
      "id": 26317390,
      "level": 0,
      "user": "theptip",
      "time": 1614704330,
      "time_ago": "16 hours ago",
      "content": "<p>This is a popular sentiment around here, because we care about the craft and want to build something that is beautiful&#x2F;well-made.<p>However, speed is not “the killer feature”. Speed does not add any value in isolation; your app needs to solve a need for the user first. If you don’t have PMF don’t think about speed yet.<p>The article gestures at objectivity by linking some cases where people measured revenue gains from speed improvements, but fails to follow through and actually propose an experiment or ROI calc. If you think your app is slow, run an experiment and measure the impact on conversion. (You can even take a page from Google’s book and _add_ delay with a simple sleep() if you don’t want to spend any time on perf work before you get data. Or just do the first bit of low-hanging fruit and measure the impact.)<p>Talk to your users and ask them what frustrates them in the app. It might be “takes so long to check out”, or it might be “it just lacks feature X that competitor Y has”. I’d suggest it’s unwise to spend time on perf work if you are pre-pmf and the main feedback was the latter. Again, do experiments too because customers don’t always tell you what they need. In particular enterprise users often don’t care as much about speed, as long as you tick all of the boxes. Many users are used to line-of-business software that is slow and buggy, so your bar in B2B is not always high here.<p>Finally do an ROI calculation. If a perf iteration is going to cost you $20k in dev resource, and get you 7% improvement on $10k of monthly revenue, that might not be the right thing to focus on. Ideally you’re looking at features that will improve your top of funnel volume more than that.<p>It’s all a trade-off. It depends on your company’s level of maturity, Product&#x2F;Market fit, and the value of the marginal feature that you’d be deferring to make your app go faster.<p>If we interpret this to be a political manifesto carrying the message “you should care more about speed&#x2F;performance”, I’d prefer the meta-level “you should care more about trade-offs and marginal value”.",
      "comments": [
        {
          "id": 26318573,
          "level": 1,
          "user": "vp8989",
          "time": 1614709658,
          "time_ago": "14 hours ago",
          "content": "<p>Maybe it&#x27;s because I am not in &quot;the Valley&quot;, but this line of thinking makes absolutely no sense to me. You are speaking in generalities, so you are essentially implying that most people are working on software that has not achieved product market fit?<p>How could the majority of people collect a salary working on software that has no users? That makes no sense.",
          "comments": [
            {
              "id": 26320614,
              "level": 2,
              "user": "theptip",
              "time": 1614718694,
              "time_ago": "12 hours ago",
              "content": "<p>Hacker News is affiliated with YC, a startup accelerator. While there are lots of FAANG engineers and engineers from all parts of the spectrum here too, this community biases towards startups. If there is a place to discuss strategy for pre-PMF startups on the internet, this is it.<p>I’m not intending to generalize, quite the opposite. I’m arguing against a generalization that “speed is the killer feature [for all products]”. In my post I presented a few cases where this over-generalization is not true (pre-PMF startup and potentially large B2B product) and suggested a more nuanced and objective analysis of the trade-offs.<p>&gt; You are speaking in generalities, so you are essentially implying that most people are working on software that has not achieved product market fit?<p>Perhaps try parsing my post as “here are a few examples of common cases where speed is not the killer feature, and a sketch of a more flexible thought process that will get you to a better answer”.<p>Product managers at both large and small companies use ROI and experimentation to figure out what to build (though in some ways it’s actually harder at a startup as your sample size can be too small to get statistical significance, or at least to run as many experiments as you’d like).",
              "comments": []
            },
            {
              "id": 26318653,
              "level": 2,
              "user": "karpierz",
              "time": 1614710024,
              "time_ago": "14 hours ago",
              "content": "<p>If you have 10 companies to invest in, each of which has a 10% chance to produce 20x returns, 90% of the engineers at these companies wouldn&#x27;t really have users.<p>Basically, if you think that software is feast-or-famine as an investment, then this would make sense.",
              "comments": [
                {
                  "id": 26319051,
                  "level": 3,
                  "user": "DylanDmitri",
                  "time": 1614711985,
                  "time_ago": "14 hours ago",
                  "content": "<p>If all engineers worked at early-stage startups, this would be the case. However most engineers (upwards of 95% outside of Bay Area) work at established companies.",
                  "comments": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "id": 26313261,
      "level": 0,
      "user": "baxtr",
      "time": 1614675082,
      "time_ago": "a day ago",
      "content": "<p><i>&gt; Yet teams consistently overlook speed. Instead, they add more features (which ironically make things slower). Products bloat over time and performance goes downhill.</i><p>This. Yet, I’d say it’s not the teams. In my experience it’s usually management that demands new features and doesn’t care about speed.",
      "comments": [
        {
          "id": 26313453,
          "level": 1,
          "user": "onion2k",
          "time": 1614677212,
          "time_ago": "a day ago",
          "content": "<p><i>Yet, I’d say it’s not the teams. In my experience it’s usually management that demands new features and doesn’t care about speed.</i><p>This line of reasoning makes me sad. It highlights <i>so many</i> problems in a company that a developer is having to deal with;<p>- Seeing &#x27;management&#x27; and &#x27;devs&#x27; as opposing teams shows a lack of communication and a lack of understanding from everyone involved.<p>- A company where managers aren&#x27;t willing to listen to developers is never going to put out a great product. Developers have expertise and know what they&#x27;re doing.<p>- A company where developers think they know best is never going to put out a great product either. Managers also have expertise and know what they&#x27;re doing.<p>- If the &quot;managers&quot; dictating that features are added are &quot;higher ups&quot; rather than product managers then the company is never going to put out a great product because the people who talk to the customers and look at usage metrics should be driving the product roadmap. <i>Customer needs</i> should be driving what gets added.<p>- Developers who aren&#x27;t putting up a fight to write good, fast code because they&#x27;re not being listened to stop caring about what they&#x27;re building, and that means there&#x27;s very likely to be other problems like significant bugs, tech debt, etc. That just grinds you down and stresses you out.<p>All in all, if your opinion is &quot;the product I build sucks because managers make it suck&quot; you probably need to find a new job. Not every company is like that. Find a good one.",
          "comments": [
            {
              "id": 26313539,
              "level": 2,
              "user": "the_cramer",
              "time": 1614678213,
              "time_ago": "a day ago",
              "content": "<p>&quot;Developers have expertise and know what they&#x27;re doing.&quot;<p>Unfortunately this is not always the case. Currently there are other &quot;developers&quot; getting access to our sql servers that drag down performance a lot. It looks to me that they may be coming from an OOP world and now trying to force these patterns onto sql which doesn&#x27;t scale at all.<p>So developer != developer and not all developers are good imho.",
              "comments": []
            },
            {
              "id": 26313531,
              "level": 2,
              "user": "corty",
              "time": 1614678101,
              "time_ago": "a day ago",
              "content": "<p>I think it might be necessary to just frame speed as a problem everyone can relate to, Ferengi as well as developers.<p>One possibility for speed as in latency would be to pre-agree on a latency budget (as in realtime-systems: if you exceed that deadline, your system has failed). Then have everyone be aware of how they spend that latency budget. Say the latency deadline is at 500ms for your website to full interactivity. Currently you are at 320ms. Marketing wants to include some analytics scripts. Include them in the test page, measure the added latency, then check against your deadline: added 200ms, we are now at 520ms. Do we reject marketing&#x27;s wishes or do we make the design dept. cut back on their image load times, maybe they can get from 130ms to 90ms? How about investing in better caching to get 100ms?<p>That way you can discuss numbers and can quantify how something impacts the overall experience. Budgets is something everyone can understand, and taking a big gulp out of a limited budget is something no-one wants to be seen doing.",
              "comments": [
                {
                  "id": 26313877,
                  "level": 3,
                  "user": "eska",
                  "time": 1614681772,
                  "time_ago": "a day ago",
                  "content": "<p>A technique I learned from Tanenbaum&#x27;s operating systems book back in the day, that has served me well over the years, is to come up with the theoretical maximum and compare it to a naive implementation.<p>For example right now I have to deal with a data interface provided by a partner company. The theoretical limit of the interface should be 1.625 MB&#x2F;s. If we were to stupidly copy our numeric streaming data over, we would be within our timing budget, and optimizing this would be optional.<p>However, the implementation of the partner company only reaches 0.1MB&#x2F;s max. So their &quot;smart&quot; implementation&#x2F;interface is only 6% efficient, or in other words could be 16 times better. That really helps putting things into perspective, and turns management&#x27;s bullshit filter on, when the partner company says &quot;you can buy this from us if you want more performance&quot; or &quot;that&#x27;s just the limit of the hardware&quot;.",
                  "comments": []
                }
              ]
            }
          ]
        },
        {
          "id": 26313551,
          "level": 1,
          "user": "o_m",
          "time": 1614678352,
          "time_ago": "a day ago",
          "content": "<p>I&#x27;ve tried to think why this is, and I think it is because no one wants to make things faster because that would be admitting you didn&#x27;t do it right the first time. So product owners try to hide it under the rug, and they&#x27;ll focus on things they can present to their own leaders so they are on good terms all the way.",
          "comments": [
            {
              "id": 26313634,
              "level": 2,
              "user": "hutzlibu",
              "time": 1614679242,
              "time_ago": "a day ago",
              "content": "<p>I rather think most devs have overpowered hardware for developing - and simply don&#x27;t notice performance drops directly on consumer hardware.",
              "comments": [
                {
                  "id": 26314380,
                  "level": 3,
                  "user": "iKevinShah",
                  "time": 1614686481,
                  "time_ago": "21 hours ago",
                  "content": "<p>This is so true. My workstation was i5 2nd generation with my development code running on a partition which was on HDD, the timings for every request were ~200ms to 1s depending on multiple factors. Page performance in chrome was constantly ~1s total.<p>I upgraded to latest i5 with SSD for data, and the performance drops are basically 0. It bothers me that there is something which needs improvement and I cant check on a commit to commit basis. But yes, it is very easy to oversee performance drops due to new &#x2F; faster hardware.",
                  "comments": []
                },
                {
                  "id": 26313893,
                  "level": 3,
                  "user": "reassembled",
                  "time": 1614681963,
                  "time_ago": "a day ago",
                  "content": "<p>My friend develops PixelCNC, an OpenGL app for generating 3D tool paths from 2D images, on a netbook because he knows many of his users have under-powered older systems.",
                  "comments": []
                }
              ]
            }
          ]
        },
        {
          "id": 26313553,
          "level": 1,
          "user": "goatinaboat",
          "time": 1614678379,
          "time_ago": "a day ago",
          "content": "<p><i>Yet, I’d say it’s not the teams</i><p>Speaking of Teams, there is something I don&#x27;t really understand, which is that we have just experienced nearly a full year of intense competition between Teams, Webex, Zoom, Bluejeans, Skype and all the rest. All of those products should be AMAZING by now. But actually most of them are still clunky as hell, and Teams itself is probably the worst of them, it&#x27;s still as slow as it was a year ago, still unreliable and still missing (trivial) features that people actually want, like the ability to block&#x2F;ignore certain contacts. And it can&#x27;t be - if anyone at Microsoft actually uses it themselves - that they don&#x27;t know how bad it is. But they seem to be doing absolutely nothing about it.",
          "comments": [
            {
              "id": 26313694,
              "level": 2,
              "user": "Nextgrid",
              "time": 1614679835,
              "time_ago": "a day ago",
              "content": "<p>Microsoft Teams isn&#x27;t designed to compete on technical merit, it&#x27;s designed to appeal to bean-counters who have either never used anything better, or have not used and will not use the software at all, thus slowness isn&#x27;t an issue because the people it would affect (the end-users) have no say in the matter.<p>No opinion on Bluejeans nor Webex but I assume it could be the same as above.<p>Zoom isn&#x27;t actually that bad. UX-wise it has some issues but speed-wise it performs better than everything else I&#x27;ve tried (probably helps that it has a native app instead of being browser-based or Electron garbage).<p>Skype is a consumer product and is left to stagnate more or less. Most likely, they don&#x27;t see enough profit potential in it to make it actually better (which would involve throwing away the Electron crap and rebuilding a - or dusting off the old - native app).",
              "comments": [
                {
                  "id": 26315300,
                  "level": 3,
                  "user": "BlargMcLarg",
                  "time": 1614693188,
                  "time_ago": "19 hours ago",
                  "content": "<p>&gt; Microsoft Teams isn&#x27;t designed to compete on technical merit, it&#x27;s designed to appeal to bean-counters who have either never used anything better, or have not used and will not use the software at all, thus slowness isn&#x27;t an issue because the people it would affect (the end-users) have no say in the matter.<p>Quoting for emphasis. It&#x27;s incredibly telling most people who started WFH since spring 2020, they are nowhere near as adapted or sensitive to this stuff as people who used similar commercial apps with a different target audience (gamers) on the regular.<p>Teams feels like two steps forward, one step back compared to Skype. It looks more streamlined, business-y and has cool integrations, but so many design choices irk me and the performance is meh.",
                  "comments": [
                    {
                      "id": 26318636,
                      "level": 4,
                      "user": "Nextgrid",
                      "time": 1614709945,
                      "time_ago": "14 hours ago",
                      "content": "<p>It&#x27;s not even a 2020 thing.<p>For most people in the environments where Teams is rolled out, the standard used to be either e-mail (using bloated clients like Outlook) or Skype for Business (formerly Microsoft Office Lync).<p>The question as to why those previous options can&#x27;t be as good as the consumer-grade alternatives (such as the social networks they&#x27;re often using) has already been settled long ago and they&#x27;ve accepted whatever BS answer they&#x27;ve been given.<p>Compared to what they used previously, Teams <i>is</i> indeed an upgrade (albeit small) and they are unlikely to question its quality as they&#x27;ve already accepted that the tools they use in their <i>enterprise</i> are terrible compared to consumer-grade alternatives they use outside of the <i>enterprise</i>.<p>The real eye-opener for them would be to try Slack, where they would suddenly realize that office chat doesn&#x27;t have to suck, though I have to say Slack is doing a great job over the last couple years at catching up to Teams when it comes to terribleness.",
                      "comments": []
                    }
                  ]
                },
                {
                  "id": 26314690,
                  "level": 3,
                  "user": "bombcar",
                  "time": 1614689001,
                  "time_ago": "20 hours ago",
                  "content": "<p>Zoom is frighteningly above all the rest; the speed is there, the background replacement is miles ahead of Bluejeans - if they weren&#x27;t worth $infinity I&#x27;d expect Microsoft to buy them and shove it into Teams somehow.",
                  "comments": []
                }
              ]
            },
            {
              "id": 26314989,
              "level": 2,
              "user": "jorams",
              "time": 1614691275,
              "time_ago": "20 hours ago",
              "content": "<p>Having used Teams, Zoom, Skype, Google Meet and Jitsi, I&#x27;m having a very hard time understanding why people go through the pain of Teams, Zoom or Skype.<p>Jitsi and Google Meet don&#x27;t employ any dark patterns, they are fast, they are reliable, they are easy to use. (I do use them only in Chromium.)<p>Zoom desperately wants me to download their client, even going so far as to require multiple failed attempts before showing the button to join using the browser. Then it wants me to complete a CAPTCHA before letting me join. If I do use the client it opens several separate windows and asks if I want to join using desktop audio. (Of course I do, and if you still want to ask please keep it in the main window.)",
              "comments": []
            }
          ]
        }
      ]
    },
    {
      "id": 26317548,
      "level": 0,
      "user": "brundolf",
      "time": 1614705026,
      "time_ago": "16 hours ago",
      "content": "<p>Two points:<p>1) As programmers we&#x27;re biased to feel like speed is the most important thing because it&#x27;s very fun and satisfying to optimize. In reality, for actual users, it&#x27;s one of many different axes of value that have to be weighed against each other. In some domains it&#x27;s critical, in some it matters very little, in most cases it&#x27;s one important factor among many.<p>2) There are different types of &quot;speed&quot;. Generally anything that&#x27;s supposed to mimic something physical - basic UI feedback, real-time games&#x2F;simulations, etc - has a much higher speed requirement than some abstract process. Will the process take long enough that it makes sense to show a loading spinner at all? Then the user probably won&#x27;t mind waiting a couple extra seconds. Will it take &lt;500ms? then the user will approximate it to &quot;instant&quot;, and will notice if there&#x27;s a bit of &quot;lag&quot;.<p>&gt; Phones in 2007 had the same features as the iPhone. The Palm Treo even had a touch screen. The difference was <i>speed</i>.<p>If the original iPhone had taken twice as long as the Treo to load a web page, but the touch screen was still more responsive, people still would have perceived it as being &quot;faster&quot;. The extra seconds matter less than shaving off the extra milliseconds.",
      "comments": []
    },
    {
      "id": 26322071,
      "level": 0,
      "user": "renewiltord",
      "time": 1614724620,
      "time_ago": "10 hours ago",
      "content": "<p>The iPhone&#x27;s release was the first concrete time I instantly noticed that tech enthusiasts are shit about understanding tech products. Every normal person described it in glowing terms but &#x2F;r&#x2F;technology, Slashdot, and every damned tech enthusiast community spent most of the time talking about Reality Distortion Fields and how Nokia had this or that feature and the iPhone couldn&#x27;t copy-paste.<p>Stopped listening to these people for product expertise. Even took a chance on Facebook at $19 when HN was gleefully expounding on how this was obvious and the company was doomed. Glad I did that.<p>Did it again when everyone on HN was <i>convinced</i> SMCI was spying for China. Worked out again.<p>I&#x27;m going to call it &quot;Tech Enthusiast Inverse Sentiment Index&quot; TEISI. List it on the NYSE and people can make big money doing the opposite of people here. Maybe you get a couple of losses like WeWork and whatever but overall, I think you win.",
      "comments": [
        {
          "id": 26322830,
          "level": 1,
          "user": "Siira",
          "time": 1614728763,
          "time_ago": "9 hours ago",
          "content": "<p>Confirmation bias, survivorship bias, etc. Make that index if you aren’t just bullshitting.",
          "comments": [
            {
              "id": 26323010,
              "level": 2,
              "user": "renewiltord",
              "time": 1614729862,
              "time_ago": "9 hours ago",
              "content": "<p>It&#x27;s a joke. I&#x27;m not enough of an idiot to create a trivially manipulable security.",
              "comments": []
            }
          ]
        }
      ]
    },
    {
      "id": 26313726,
      "level": 0,
      "user": "sgeisler",
      "time": 1614680128,
      "time_ago": "a day ago",
      "content": "<p>As a former BlackBerry 10 user (QNX based with C++&#x2F;QT native apps) that&#x27;s something that annoys me endlessly about Android. How can a simple action like displaying a small, locally cached playlist take any noticeable time at all?! There is no inherent reason for building Apps in JS+HTML adding a dozen additional layers all costing precious time. Even some &quot;native&quot; (Java) apps seem slow at times. Also switching between apps often causes these to be effectively closed, adding startup time when reopening them (are they really that memory-hungry, why?!). I never had these problems with my BB 10 phones even though these had half the RAM (2G, current Android 4G) and way less cores  (2 vs. 8). I wish they hadn&#x27;t discontinued this awesome platform.",
      "comments": []
    },
    {
      "id": 26313305,
      "level": 0,
      "user": "tempestn",
      "time": 1614675476,
      "time_ago": "a day ago",
      "content": "<p>I would argue that the key differentiator of the first iPhone was screen size. It was the first popular phone where essentially the entire face of the phone was dedicated to screen, made possible by a software keyboard. By today&#x27;s standards it&#x27;s tiny, but at the time nothing else came close. Trying to do anything on any other phone was impossibly cramped by comparison. Especially using the web, since there was no such thing as a mobile or responsive page then, so you needed a phone with the screen real-estate to use desktop websites. The iPhone was the first phone to make this less than utterly painful.<p>All that said, I do agree with the general thesis. Evernote has just come up with a huge update of all their apps, having ported them all to Electron to standardize development. The only problem is, they&#x27;re all brutally slow compared to the native apps that preceded them, and it truly ruins the experience.",
      "comments": [
        {
          "id": 26313721,
          "level": 1,
          "user": "Tepix",
          "time": 1614680098,
          "time_ago": "a day ago",
          "content": "<p>The iPhone was also the first mobile phone with a touchscreen that worked really well with just your fingers.",
          "comments": [
            {
              "id": 26314826,
              "level": 2,
              "user": "trymas",
              "time": 1614690002,
              "time_ago": "20 hours ago",
              "content": "<p>Also AFAIK, iPhone was first mainstream device with multi-touch.<p>At the time I had limited experience, but personally I thought touch screens would never work, because they were slow, imprecise and unresponsive (often worked with special pen only) and then iPhone came with buttery smooth experience and multi-touch. Mind blown.",
              "comments": []
            },
            {
              "id": 26314003,
              "level": 2,
              "user": "baybal2",
              "time": 1614683054,
              "time_ago": "a day ago",
              "content": "<p>No, HTC was the first one to explore a touch only interface.<p>Even before the HTC Touch, their WinMo version allowed for touch only operation for 3-4 years.",
              "comments": [
                {
                  "id": 26314904,
                  "level": 3,
                  "user": "dagw",
                  "time": 1614690651,
                  "time_ago": "20 hours ago",
                  "content": "<p>And before that there was the Ericsson R380. None of them could really be described as working &quot;really well&quot;.<p>If you wanted to you could perhaps argue that the PalmPilot was the first touch only portable device that worked &quot;really well&quot;, but that wasn&#x27;t a phone (and you&#x27;ll have lots of angry Newton fans telling you that are wrong). Or you could try to make an argument for the Treo, but it wasn&#x27;t really &quot;touch only&quot;.<p>As someone who has used every device mentioned above (and owned at least half of them), I personally feel comfortable calling the iPhone the first phone with a touch only interface that worked &quot;really well&quot;",
                  "comments": [
                    {
                      "id": 26315101,
                      "level": 4,
                      "user": "baybal2",
                      "time": 1614692013,
                      "time_ago": "19 hours ago",
                      "content": "<p>The fact that HTC had a working touch shell, and basic suite of touch only apps for WinMo few years prior to Apple stands there.<p>I will also argue that Apple verbatim copied some of their UI ideas.",
                      "comments": []
                    }
                  ]
                },
                {
                  "id": 26320018,
                  "level": 3,
                  "user": "tempestn",
                  "time": 1614716229,
                  "time_ago": "13 hours ago",
                  "content": "<p>I briefly owned an HTC Titan before the iPhone came out. I returned it after a few days and got a flip phone instead. It was just too painful trying to do anything with the finicky stylus on the tiny screen. And yes, it was slow too.",
                  "comments": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "id": 26313790,
      "level": 0,
      "user": "lordnacho",
      "time": 1614680820,
      "time_ago": "a day ago",
      "content": "<p>Slowdown has actually been the only reason I ever replaced a phone. Somehow the manufacturer sent an update and stuff turned to molasses, and that has been my trigger to get a new phone each time. There&#x27;s no excuse for this, it&#x27;s not like the apps I use are especially demanding. I&#x27;ve written a few apps on the side, and most of the ones I use should just be your average mashup of buttons, pictures, and REST calls. Besides, the slowdown comes when the OS is updated, so it&#x27;s probably not the apps changing.<p>I&#x27;ll never get another Samsung, even though I don&#x27;t know if they did it deliberately, or if it was even them that did it.<p>Somehow my current phone has lasted 3 years with no appreciable slowing.",
      "comments": []
    },
    {
      "id": 26321138,
      "level": 0,
      "user": "StillBored",
      "time": 1614720780,
      "time_ago": "11 hours ago",
      "content": "<p>Speed, is a minimum requirement of most systems, same as correctness.<p>It seems to me that basically 100% of the UI&#x2F;UX developers at the big tech companies are woefully ignorant of the fact that there is a massive amount of data and papers written about human computer interaction. I&#x27;m guessing that is because few comp-sci programs even touch the topic, rather spending all their time on more esoteric&#x2F;mathematical topics.<p>In summary, a very large number of studies were done in the 1960s-1980&#x27;s on the _human_ aspects of user responsiveness (important when timesharing became common), how people learned computer interfaces, and how effective they were at operating them. Despite some of these papers being &gt; 40 years old, none of it has really changed because the studies were about humans, less than computers. The underlying computing may have changed from a time shared terminal to a phone in someones hand connected to a server, but in that time the human cognitive loop hasn&#x27;t changed.<p>IMHO, and somewhat backed by the science, any system which isn&#x27;t responding in under 100ms is broken unless its performing something extraordinary. If its actually interactive (like typing on a command prompt) even that is far to slow. User frustration, and loss of attention are real things, and you can bet when given the choice users will pick less frustrating systems. The saving grace for many of these platforms is that the entire industry is trying to be like the fashion industry and follow the latest trends. So it doesn&#x27;t matter if BigCoX makes a huge UI blunder all the others will follow it down the lemming hole.<p>So tell me why some of the conclusions in a paper like <a href=\"http:&#x2F;&#x2F;larch-www.lcs.mit.edu&#x2F;~corbato&#x2F;sjcc62&#x2F;\" rel=\"nofollow\">http:&#x2F;&#x2F;larch-www.lcs.mit.edu&#x2F;~corbato&#x2F;sjcc62&#x2F;</a> (1962) are wrong. How about: <a href=\"http:&#x2F;&#x2F;yusufarslan.net&#x2F;sites&#x2F;yusufarslan.net&#x2F;files&#x2F;upload&#x2F;content&#x2F;Miller1968.pdf\" rel=\"nofollow\">http:&#x2F;&#x2F;yusufarslan.net&#x2F;sites&#x2F;yusufarslan.net&#x2F;files&#x2F;upload&#x2F;co...</a> (1968)<p>Amusingly other classics like <a href=\"https:&#x2F;&#x2F;www.microsoft.com&#x2F;en-us&#x2F;research&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;02&#x2F;acrobat-17.pdf\" rel=\"nofollow\">https:&#x2F;&#x2F;www.microsoft.com&#x2F;en-us&#x2F;research&#x2F;wp-content&#x2F;uploads&#x2F;...</a> are discovered regularly too (1983).",
      "comments": []
    },
    {
      "id": 26320381,
      "level": 0,
      "user": "bdickason",
      "time": 1614717838,
      "time_ago": "12 hours ago",
      "content": "<p>Author of the post here - I had no idea there were so many more people out there like me passionate about speed (and frustrated by how slow apps&#x2F;devices are these days).<p>Thanks everyone for sharing really awesome examples in the comments here - from Games to Receipt Printers to Apps, it&#x27;s clear that speed is valued.<p>Or... that there&#x27;s a big opportunity to bring back lightning fast products :)",
      "comments": []
    },
    {
      "id": 26314430,
      "level": 0,
      "user": "ancarda",
      "time": 1614686940,
      "time_ago": "21 hours ago",
      "content": "<p>This is one reason why I prefer command line programs and websites like SourceHut and HackerNews over GitHub and Reddit. Also, why I disable or reduce as many animations as I can in graphical software I use.<p>Everything is just too slow -- and it doesn&#x27;t need to be.",
      "comments": []
    },
    {
      "id": 26315421,
      "level": 0,
      "user": "felixding",
      "time": 1614693977,
      "time_ago": "19 hours ago",
      "content": "<p>&gt; ... a Palm phone, there was a delay.<p>My first impression was &quot;unbelievable&quot; - how on earth would anyone think a Palm device is slow?! Then I followed the link and saw a Palm Tree 750&#x2F;V... oh, of course, that thing run Windows Mobile.<p>A Palm device running Palm OS is blazing fast! I switched to iPhone from Treo 650 in 2009. Almost everything became much slower. The iPhone software was slow, so was the user interaction (in the sense of UX).<p>Palm only started using Windows in its later years. And there were actually very few Windows Palm phones. Most Palm PDAs and phones run Palm OS and were very, very fast.",
      "comments": []
    },
    {
      "id": 26322796,
      "level": 0,
      "user": "lucas_membrane",
      "time": 1614728537,
      "time_ago": "9 hours ago",
      "content": "<p>Nothing to see here.<p>Speed always has been not only the most important thing,  but virtually the only important thing.   Back before most of you were born,  there was a review (in PC Magazine, IIRC) of the category of spreadsheet programs.  MBA Analyst dominated the others (visicalc and lotus 123, IIRC) in every category except speed, in which it was OK, but not great.  That&#x27;s why you never heard of it.<p>The speed requirement is closely related to the self-importance fallacy.  If a computer needs time to think,  maybe we could make good use of a few moments pause, too.",
      "comments": []
    },
    {
      "id": 26313573,
      "level": 0,
      "user": "ZephyrBlu",
      "time": 1614678584,
      "time_ago": "a day ago",
      "content": "<p>All I have to say is that the &quot;what would it be like to live with lag?&quot; is insane.<p>1&#x2F;3 of a second is already insane lag, 3 seconds is just ridiculous.",
      "comments": [
        {
          "id": 26313738,
          "level": 1,
          "user": "Tepix",
          "time": 1614680263,
          "time_ago": "a day ago",
          "content": "<p>Agree. In VR to achieve &quot;presence&quot; you aim for 20ms of lag, or less. \nFor voice calls you want 100ms max.",
          "comments": []
        }
      ]
    },
    {
      "id": 26313987,
      "level": 0,
      "user": "collaborative",
      "time": 1614682879,
      "time_ago": "a day ago",
      "content": "<p>The UI has to remain 100% responsive. So put that task in a BG thread and show the user that it is being processed (with a progress bar for extra friendliness). Stay away from frameworks that don&#x27;t have responsive UI - native is best",
      "comments": []
    },
    {
      "id": 26314923,
      "level": 0,
      "user": "clarge1120",
      "time": 1614690789,
      "time_ago": "20 hours ago",
      "content": "<p>There are different kinds of apps for different use cases. Performance is a feature, but not always necessary.<p>For example, Line of Business (LOB) apps are built with ROI in mind. LOB apps help businesses run more efficiently, and employ the vast majority of developers.  These are the most used apps in the world, and company owners are much more interested in functionality, automation, and distribution of apps than performance and usability.",
      "comments": [
        {
          "id": 26315293,
          "level": 1,
          "user": "coldcode",
          "time": 1614693164,
          "time_ago": "19 hours ago",
          "content": "<p>Our customers wind up spending a lot of time waiting on services to respond watching loaders. Speed on the app is entirely ignored otherwise, you are just happy you got a result. At a previous job people complained about how slow our iPad app was, we measured every single step from tap through service call back to redraw and 90% of the time was in our backend, even with average internet performance.",
          "comments": []
        }
      ]
    },
    {
      "id": 26321121,
      "level": 0,
      "user": "ska",
      "time": 1614720722,
      "time_ago": "11 hours ago",
      "content": "<p>I think this is overly reductive.<p>Speed (or more likely, perceived speed) is only one part of UX, and how much it matters depends a lot on what else is going on and the users expectation.  Even focusing merely on responsiveness feels a bit superficial.<p>Something a bit closer to the core of it is that whenever a user is focused on waiting for your software, it reduces their experience.  That can be articulated better I&#x27;m sure - and still is only one part of the (complex) equation.",
      "comments": []
    },
    {
      "id": 26314894,
      "level": 0,
      "user": "bajsejohannes",
      "time": 1614690553,
      "time_ago": "20 hours ago",
      "content": "<p>It seems like Apple is moving backwards on this at the moment, though. Perhaps they were more concerned about it when they were trying to get into the market.<p>Examples I can think of: The emoji selector (ctrl+cmd+space) is quite slow. On my brand new macbook, it&#x27;s a small noticeable pause, and on my old macbook it&#x27;s several seconds (during which time keyboard input is lost).<p>&gt; If you can’t speed up a specific action, you can often fake it. Perceived speed is just as important as actual speed.<p>Second example is facetime on my iPhone. They fake being fast by showing the last opened screen. For me, it&#x27;s very often the &quot;most recent calls&quot;. The problem is that in the meantime there&#x27;s been another call. Result: I see the person I want to call back, tap on the screen where they are, observe that the content changes and I call the wrong person. This happens often enough that I should learn, but somehow I don&#x27;t.",
      "comments": []
    },
    {
      "id": 26319150,
      "level": 0,
      "user": "gnyman",
      "time": 1614712489,
      "time_ago": "14 hours ago",
      "content": "<p>If you have a iPhone without home button, go to settings, wallet &amp; apple pay and uncheck  doouble click side button<p>Now turn off the screen with the power button.<p>Notice the annoying delay when turning off the screen is gone? enjoy :-)<p>Of course you also don&#x27;t have a way to invoke the wallet manually, but luckily if you put it near a payment terminal it will auto activate<p>Probably won&#x27;t work if you&#x27;re a heavy apple wallet user but if you use it only sporadically I personally think it&#x27;s worth it, I found the delay very annoying when I switched to a homekeyless iphone",
      "comments": []
    },
    {
      "id": 26313940,
      "level": 0,
      "user": "floatingatoll",
      "time": 1614682463,
      "time_ago": "a day ago",
      "content": "<p>Could someone please show this article to digital board game creators? There are so many great games that waste 50% of my playtime on PowerPoint transitions and smooth movements. It’s so frustrating trying to enjoy a game when you have to watch a ten second animation in order to have a single tile flipped over, or a five second fade just to represent end of turn.",
      "comments": []
    },
    {
      "id": 26315915,
      "level": 0,
      "user": "nromiun",
      "time": 1614696864,
      "time_ago": "18 hours ago",
      "content": "<p>This is spot on. I was originally using PayTM to pay my bills for phones and TV. And while it was a little bloated and sluggish there was nothing better. But then Google Pay was released, and it was so much faster then anything else on the market.<p>But Google Pay released a new update using the flutter framework. And now even scrolling takes ages to complete. I complained on Play Store but the reply said to check my internet speed.<p>Meanwhile PayTM has also redesigned their app, but unlike Google Pay their updates actually made the app much faster and intuitive. I still check Google Pay from time to time to see if they have fixed their app, but the scrolling is still laggy (it feels like you are in a web page) and the loading page still flickers.",
      "comments": [
        {
          "id": 26321575,
          "level": 1,
          "user": "bombcar",
          "time": 1614722471,
          "time_ago": "11 hours ago",
          "content": "<p>&gt;(it feels like you are in a web page)<p>Few apps are native anymore, they&#x27;re all just wrappers around web pages. It sucks.",
          "comments": []
        }
      ]
    },
    {
      "id": 26315380,
      "level": 0,
      "user": "mangoman",
      "time": 1614693760,
      "time_ago": "19 hours ago",
      "content": "<p>In the US, everywhere I&#x27;ve lived, Comcast has been king. But their new TV Boxes are so fucking slow I can&#x27;t stand it. 2 second delays just to type a number. If any competitor was smart, they&#x27;d invest into their boxes&#x27; speed and just destroy comcast on that alone.",
      "comments": [
        {
          "id": 26315671,
          "level": 1,
          "user": "anthk",
          "time": 1614695538,
          "time_ago": "18 hours ago",
          "content": "<p>Replace Comcast with Orange in Spain, and the same experience with an Android TV Box.",
          "comments": []
        }
      ]
    },
    {
      "id": 26313872,
      "level": 0,
      "user": "baybal2",
      "time": 1614681665,
      "time_ago": "a day ago",
      "content": "<p>&gt; When you touched a Razr or a Palm phone, there was a delay. It felt sluggish and slow. Apple removed the delay between your finger tapping the screen and something happening. Your finger could finally manipulate the UI in realtime, just like in the real world. It felt magical. If there was even a slight delay, the whole experience fell apart.<p>A very strange phone to reference. First iPhone was slow as molasses with all of the excessive visual effects.<p>It was only around OMAP iphones when they first got proper hardware acceleration.<p>Palms were noticably faster than WinMo 6, and WinMo 6 was faster than 5 which was indeed painful to use because of input lag.<p>Ironically, Android is still somwhat slower than WinMo 6 on input lag despite every trick Google is throwing on it.<p>I read somewhere they even tried to wire the input layer directly to hardware acceleration to make scrolling less laggy.",
      "comments": []
    },
    {
      "id": 26318819,
      "level": 0,
      "user": "dystroy",
      "time": 1614710801,
      "time_ago": "14 hours ago",
      "content": "<p>Developers and marketers often overestimate how much the users will love the impressive and slow effects they pack their products with.<p>I was reminded by this today as I installed Debian on a new computer. Why do Gnome makers imagine it&#x27;s OK to have the *default* on slow (&quot;Animations&quot;) rather than instant ? Do they really think we&#x27;ll be happy enjoying a 200ms or 500ms delay every time we reduce or open a window ?",
      "comments": []
    },
    {
      "id": 26317330,
      "level": 0,
      "user": "pul",
      "time": 1614704064,
      "time_ago": "16 hours ago",
      "content": "<p>I often wonder if my obsession with speed is helping me forward, or holding me back. (I&#x27;m working on <a href=\"https:&#x2F;&#x2F;www.nslookup.io\" rel=\"nofollow\">https:&#x2F;&#x2F;www.nslookup.io</a> on the side.) There&#x27;s so much else to be done. Will users really care enough to come back? Is a 20% speed up worth more than a better design or an additional landing page? I don&#x27;t know...",
      "comments": []
    },
    {
      "id": 26313477,
      "level": 0,
      "user": "seanwilson",
      "time": 1614677535,
      "time_ago": "a day ago",
      "content": "<p>&gt; Speed during Checkout - Every second of page load time kills conversion rates. A 1 second delay reduces conversion rate by 7%.<p>I think it&#x27;s fine to say faster page loading makes users happier and will increase conversions but you should avoid generalising with such specific figures (I see this often with page speed article titles where they mention conversion rates changes to 4 significant figures). It&#x27;s going to vary wildly based on the product, audience, price, exclusivity, custom loyalty etc. and you&#x27;ll get diminishing returns as well.<p>The impact page speed has on amazon.com conversions isn&#x27;t going to be the same as on your side-project website for lots of reasons.",
      "comments": [
        {
          "id": 26314071,
          "level": 1,
          "user": "thitcanh",
          "time": 1614683806,
          "time_ago": "a day ago",
          "content": "<p>Speed is half of the picture sometimes. I once managed to book a flight on Google Flights and basically completed the purchase in less than a minute. An airline’s website could load instantly and still wouldn’t compare to just having a decent checkout experience.<p>It’s incredible that nobody has 1-click flight bookings a-la-Amazon yet.",
          "comments": []
        },
        {
          "id": 26313703,
          "level": 1,
          "user": "Theodores",
          "time": 1614679910,
          "time_ago": "a day ago",
          "content": "<p>The metrics this is based on need to be known.<p>If you deliberately add a second to the checkout and measure the conversion rate it will go down. But to then talk of reducing latency creates this much extra conversion rate is a lie. There is an oft touted figure from when they deliberately slowed the BBC website to assess engagement.<p>However, truth is that speed is good.",
          "comments": []
        }
      ]
    },
    {
      "id": 26313746,
      "level": 0,
      "user": "tome",
      "time": 1614680355,
      "time_ago": "a day ago",
      "content": "<p>The word &quot;latency&quot; is mentioned three times in the article, &quot;speed&quot; fifteen.  Yet latency is actually the more precise and accurate word for the concept the article is trying to communicate isn&#x27;t it?",
      "comments": []
    },
    {
      "id": 26313827,
      "level": 0,
      "user": "CinematicStudio",
      "time": 1614681199,
      "time_ago": "a day ago",
      "content": "<p>Agreed 100%!\nI&#x27;ve redesigned the UI of my timeline (for a video editor) several times, in order to constantly make it faster.<p>It&#x27;s painful (for me, that is :D), but I know it&#x27;s the right thing to do.",
      "comments": []
    },
    {
      "id": 26318254,
      "level": 0,
      "user": "benlivengood",
      "time": 1614708279,
      "time_ago": "15 hours ago",
      "content": "<p>I&#x27;m always amused when I need to use FVWM or xfce on old hardware and it&#x27;s snappier and more responsive than Gnome on newer hardware.  About the only thing old hardware can&#x27;t do is smooth scrolling&#x2F;resizing&#x2F;moving and that&#x27;s all GPU.",
      "comments": []
    },
    {
      "id": 26314084,
      "level": 0,
      "user": "bjarneh",
      "time": 1614683915,
      "time_ago": "a day ago",
      "content": "<p>Isolated we all agree on this, i.e. speed is important. But you constantly see high praise for many of the technologies that facilitate this &quot;slowness&quot; creeping into apps and websites. With each level of abstraction we loose speed; either it&#x27;s languages that &quot;compile&quot; to other languages, or ORM&#x27;s, or frameworks that solve different tasks, but when stacked on top of each other; everything feels like mud..",
      "comments": []
    },
    {
      "id": 26313793,
      "level": 0,
      "user": "tommilukkarinen",
      "time": 1614680829,
      "time_ago": "a day ago",
      "content": "<p>It&#x27;s long time ago so I don&#x27;t remember well, but at least the camera was not fast (I was working with camera stuff at the point so that&#x27;s what I paid attention to). It was slow, barren of features and looked like developed hastily by a student.<p>The thing with iPhone was the capasitive screen, which made touch UI work. At the point I had already worked with phone touch UI:s for seven years, and that&#x27;s the thing that felt like magic.",
      "comments": []
    },
    {
      "id": 26314175,
      "level": 0,
      "user": "mrvenkman",
      "time": 1614684845,
      "time_ago": "21 hours ago",
      "content": "<p>The &quot;ipod&quot; and &quot;ipod Touch&quot; were the reason the iPhone was successful. The speed and reaction time was important too - but I wouldn&#x27;t call it a &quot;killer feature&quot; - it was necessary because phones weren&#x27;t slow - actually there was nothing particularly slow about about the RAZR. I don&#x27;t understand the comparison.",
      "comments": []
    },
    {
      "id": 26314491,
      "level": 0,
      "user": "phkahler",
      "time": 1614687433,
      "time_ago": "21 hours ago",
      "content": "<p>&gt;&gt; Does your checkout page take 10+ seconds to load? Did you have to wait for a loading indicator multiple times along the way?<p>Those aren&#x27;t even the right questions.<p>Change 10 seconds to 1 for the checkout page. And then ask if they <i>ever</i> have to watch a loading indicator. We have no hope if we dont set good goals.",
      "comments": []
    },
    {
      "id": 26317930,
      "level": 0,
      "user": "PTOB",
      "time": 1614706812,
      "time_ago": "15 hours ago",
      "content": "<p>I am a heavy AutoCAD user. I can type commands faster than today&#x27;s AutoCAD can grab them. Sometimes it garbles them and executes an alphabetically adjacent command...",
      "comments": []
    },
    {
      "id": 26313672,
      "level": 0,
      "user": "sverhagen",
      "time": 1614679578,
      "time_ago": "a day ago",
      "content": "<p>Speed is important. And when something is near or completely unusable, that&#x27;s a bug. It is also a quality attribute that we architect for, to some, limited extent. Otherwise, speed is &quot;just&quot; a feature like any other, and Product Management should tell me where it ranks in priority.",
      "comments": []
    },
    {
      "id": 26316327,
      "level": 0,
      "user": "jmacjmac",
      "time": 1614699298,
      "time_ago": "17 hours ago",
      "content": "<p>I think when you don&#x27;t have a competitor, being slow is okay. People will use your product but otherwise performance matters. Eventhough it never matters as much as your feature set.",
      "comments": [
        {
          "id": 26316824,
          "level": 1,
          "user": "flavius29663",
          "time": 1614701619,
          "time_ago": "17 hours ago",
          "content": "<p>&gt; it never matters as much as your feature set<p>How do you explain then that iphones took over the market, even though Nokias had many more features? Speed, or the feeling of speed, was part of it, I am sure",
          "comments": [
            {
              "id": 26322403,
              "level": 2,
              "user": "jmacjmac",
              "time": 1614726207,
              "time_ago": "10 hours ago",
              "content": "<p>I didn&#x27;t mean &quot;more features are better&quot;. Sometimes, even a single killer feature is better than many features. Speed might be one of the reasons Iphone&#x27;s success but how about this : If Iphone&#x27;s were %20 slower than they were, would it take over the market ? I think it would. This doesn&#x27;t mean being fast didn&#x27;t help them. My point is, being fast is not enough all alone but being fast with a good feature set is great.",
              "comments": []
            }
          ]
        }
      ]
    },
    {
      "id": 26314409,
      "level": 0,
      "user": "lifeisstillgood",
      "time": 1614686737,
      "time_ago": "21 hours ago",
      "content": "<p>The lag video is fascinating - I see people who are labelled clumsy, unco-ordinated - but maybe they just have a mental <i>lag</i>.  After all the world we &#x27;see&#x27; with our eyes is a mental model, a 3D game world anyway.",
      "comments": []
    },
    {
      "id": 26313992,
      "level": 0,
      "user": "buf",
      "time": 1614682950,
      "time_ago": "a day ago",
      "content": "<p>As a Notion user, I feel this pain daily. The lack of an offline support or a modern fast search is going to push me away.<p>For my personal notes, I&#x27;m still organizing it in local files (via vimwiki), but for team notes, Notion needs to step up its game.",
      "comments": []
    },
    {
      "id": 26314212,
      "level": 0,
      "user": "bob1029",
      "time": 1614685203,
      "time_ago": "21 hours ago",
      "content": "<p>Speed is a tricky thing in a complex application. You are ultimately going to be forced to trade latency for horizontal scalability in non-trivial applications with lots of shared state which must also be consumed globally.<p>You can cheat in some weird and fun ways though.  For instance, if you say &quot;no user of this system will ever be more than 50ms away&quot;, you get to play some really interesting games with vertical scaling and consolidation of compute capability in an all-in way. I.e. server-side technologies ran out of a single datacenter near the userbase.<p>If your latency domain fits it, something like Blazor server side can be an incredible experience for your users. First load is almost immediate because there&#x27;s virtually no client code. Everything is incremental from there. If you are within 50ms of the server, UI feels instant in my experience. The nature of how applications are developed with this tech means that if your business services are completing requests within the performance budget, you can be almost certain the end user will see the same.<p>Going to the bottom of the rabbit hole, understanding how NUMA impacts performance can make 5+ orders of magnitude difference in latency and throughput. Letting a thread warm up on a hot path and keeping it fed with well-structured data is foundational to ultra-low-latency processing.<p>You can handle well over a million events per second on a single thread on any recent PC using techniques such as LMAX disruptor combined with a web hosting technology like Kestrel. The difference between a class and a struct can be 10x if you get to that level of optimization. I measure user interactions in microseconds in my stack these days.<p>A millisecond is a fucking eternity. You shouldn&#x27;t be doing a bunch of back and forth bullshit in that kind of latency domain. Stream client events to server as fast as possible, microbatch and process, prepare final DOM changeset and send to client all at once. How could any other client-server architecture be faster than this, especially if we are forced to care about a bucket of shared state?",
      "comments": []
    },
    {
      "id": 26318142,
      "level": 0,
      "user": "bambax",
      "time": 1614707745,
      "time_ago": "15 hours ago",
      "content": "<p>All true. Speed is what users want. Not fancy graphics and certainly not endless confirmations and security assessments.",
      "comments": []
    },
    {
      "id": 26316784,
      "level": 0,
      "user": "swyx",
      "time": 1614701450,
      "time_ago": "17 hours ago",
      "content": "<p>obviously the HN crowd is in favor of speed, but i would argue some of his examples are proof that speed doesn&#x27;t matter compared to others. Notion is horrendously slow and i dont understand how other people can choose to use it, but speed clearly isnt even a necessary condition to become a successful product.",
      "comments": []
    },
    {
      "id": 26316688,
      "level": 0,
      "user": "tuckerpo",
      "time": 1614700934,
      "time_ago": "17 hours ago",
      "content": "<p>Mandatory Handmade shill<p><a href=\"https:&#x2F;&#x2F;handmade.network&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;handmade.network&#x2F;</a>",
      "comments": []
    },
    {
      "id": 26320707,
      "level": 0,
      "user": "digitaltrees",
      "time": 1614719039,
      "time_ago": "12 hours ago",
      "content": "<p>For me it was safari. A real web browser. That was the game changer.",
      "comments": []
    },
    {
      "id": 26314243,
      "level": 0,
      "user": "ChrisMarshallNY",
      "time": 1614685424,
      "time_ago": "21 hours ago",
      "content": "<p>This is absolutely spot-on.<p>That said, I feel like it is sort of belaboring the obvious.<p>I think that our overdependence on dependencies has a lot to do with UI latency.",
      "comments": []
    },
    {
      "id": 26324986,
      "level": 0,
      "user": "ulisesrmzroche",
      "time": 1614748015,
      "time_ago": "4 hours ago",
      "content": "<p>This is Bullshit with a capital B. The killer feature of the iPhone were looks and apps.<p>It was the first all-in-one (camera, music player, phone, game system, organizer, etc) that didn’t make you a bully target.<p>Not saying Speed is unimportant...I’m saying this is straight up lying.<p>Like back in the AOL days, when dialup was a thing, the internet was dogshit slow, but you still had to get in line to use it. Took hours more often than not.<p>If people valued speed more than anything, aol would have gone bankrupt. People are willing to pay extra for speed but can live without it as long as features are there.<p>This is starting to bug me because for startups, this is bad advice. It’s actually harmful since it’s all about product-market fit at the beginning. You’re better off throwing away code instead of optimizing.",
      "comments": []
    },
    {
      "id": 26317194,
      "level": 0,
      "user": "hnnotreddit",
      "time": 1614703397,
      "time_ago": "16 hours ago",
      "content": "<p>I remember when animations were used in UI for the purpose of  masking wait times. On the new web, they&#x27;re so misused they cause the wait now.",
      "comments": []
    },
    {
      "id": 26315325,
      "level": 0,
      "user": "fireeyed",
      "time": 1614693402,
      "time_ago": "19 hours ago",
      "content": "<p>Front end JavaScript framework scourge introduced a lot of this.",
      "comments": [
        {
          "id": 26316332,
          "level": 1,
          "user": "iaml",
          "time": 1614699310,
          "time_ago": "17 hours ago",
          "content": "<p>Netflix is literally using react and is praised in this thread for their ui performance. JS is not the problem, what you do with it is.",
          "comments": []
        }
      ]
    },
    {
      "id": 26314150,
      "level": 0,
      "user": "m463",
      "time": 1614684565,
      "time_ago": "21 hours ago",
      "content": "<p>less than .1 second response and you are <i>interactive</i> which is a big deal.",
      "comments": []
    },
    {
      "id": 26316023,
      "level": 0,
      "user": "RocketSyntax",
      "time": 1614697540,
      "time_ago": "18 hours ago",
      "content": "<p>Speed is a cop out. Engineers love to focus on performance.",
      "comments": []
    },
    {
      "id": 26314366,
      "level": 0,
      "user": "IshKebab",
      "time": 1614686404,
      "time_ago": "21 hours ago",
      "content": "<p>This feels like a bit of history rewriting. Yeah the iPhone was fast, but the real killer feature was the huge responsive screen. No phone until then had had a screen so big, or such a good touchscreen. You could browse desktop web sites! Early Android phones were very slow and janky, yet they still succeeded. There is mountains of enterprise software that is successful despite being insanely slow (<i>cough</i> Teamcenter).<p>Not saying I necessarily disagree with the premise but they chose a poor example.",
      "comments": []
    }
  ],
  "comments_count": 485
}